v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff6f5fc0000,0x7ff6f9c0e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffd59730000,0x7ffd59927000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffd58280000,0x7ffd5833d000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffd57310000,0x7ffd575dd000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffd595a0000,0x7ffd5960b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffd59470000,0x7ffd59595000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffd59220000,0x7ffd59228000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffd54bd0000,0x7ffd54db4000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffd578f0000,0x7ffd5799e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffd570b0000,0x7ffd571b0000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffd57b50000,0x7ffd57bee000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffd587f0000,0x7ffd5888c000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffd562b0000,0x7ffd562eb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffd56d10000,0x7ffd56d3e000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffd580c0000,0x7ffd58260000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffd572b0000,0x7ffd572d2000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffd59230000,0x7ffd5925a000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffd57680000,0x7ffd5778b000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffd575e0000,0x7ffd5767d000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffd56ec0000,0x7ffd57016000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ffd572e0000,0x7ffd57307000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffd4e0e0000,0x7ffd4e107000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffd56820000,0x7ffd5682c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffd57790000,0x7ffd577c0000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ffd563d0000,0x7ffd5641b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ffd56290000,0x7ffd562a2000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffd54400000,0x7ffd5449e000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffd58490000,0x7ffd587e4000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffd56610000,0x7ffd5667a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ffd54f50000,0x7ffd54f62000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffd57020000,0x7ffd570a2000,0
shared-library-end
tick,0x7ffd597ccdc4,176637,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1ca1ec50000,0
new,MemoryChunk,0x3a488480000,262144
new,MemoryChunk,0x8d48940000,262144
new,MemoryChunk,0xe2e4840000,262144
new,MemoryChunk,0x7c43540000,262144
new,MemoryChunk,0x19f77e00000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x2de39440000,262144
new,MemoryChunk,0x323985c0000,262144
new,MemoryChunk,0x3d62a000000,262144
new,MemoryChunk,0x1b3a04c0000,262144
new,MemoryChunk,0x20acf640000,262144
new,MemoryChunk,0x9c49b40000,262144
new,MemoryChunk,0x15162b00000,262144
new,MemoryChunk,0x1ca1ec80000,262144
new,MemoryChunk,0x3aef7b40000,262144
code-creation,Builtin,2,181956,0x7ff6f6b30a54,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,181984,0x7ff6f6b30fb4,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,181998,0x7ff6f6b31194,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,182012,0x7ff6f6b31414,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,182026,0x7ff6f6b314f4,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,182040,0x7ff6f6b31674,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,182053,0x7ff6f6b31714,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,182066,0x7ff6f6b31754,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,182080,0x7ff6f6b318d4,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,182094,0x7ff6f6b31a94,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,182170,0x7ff6f6b31c54,104,CallBoundFunction
code-creation,Builtin,2,182190,0x7ff6f6b31cd4,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,182204,0x7ff6f6b31d54,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,182217,0x7ff6f6b31dd4,120,Call_ReceiverIsAny
code-creation,Builtin,2,182230,0x7ff6f6b31e54,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,182244,0x7ff6f6b32254,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,182258,0x7ff6f6b32654,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,182272,0x7ff6f6b32a94,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,182286,0x7ff6f6b32ed4,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,182299,0x7ff6f6b33314,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,182312,0x7ff6f6b33754,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,182326,0x7ff6f6b33b14,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,182340,0x7ff6f6b33ed4,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,182353,0x7ff6f6b34294,736,CallProxy
code-creation,Builtin,2,182366,0x7ff6f6b34594,148,CallVarargs
code-creation,Builtin,2,182378,0x7ff6f6b34634,944,CallWithSpread
code-creation,Builtin,2,182391,0x7ff6f6b349f4,1956,CallWithSpread_Baseline
code-creation,Builtin,2,182404,0x7ff6f6b351b4,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,182418,0x7ff6f6b35954,864,CallWithArrayLike
code-creation,Builtin,2,182430,0x7ff6f6b35cd4,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,182444,0x7ff6f6b363f4,156,CallForwardVarargs
code-creation,Builtin,2,182461,0x7ff6f6b36494,156,CallFunctionForwardVarargs
code-creation,Builtin,2,182496,0x7ff6f6b36534,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,182510,0x7ff6f6b365d4,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,182524,0x7ff6f6b366d4,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,182538,0x7ff6f6b36814,28,ConstructFunction
code-creation,Builtin,2,182551,0x7ff6f6b36834,104,ConstructBoundFunction
code-creation,Builtin,2,182564,0x7ff6f6b368b4,28,ConstructedNonConstructable
code-creation,Builtin,2,182577,0x7ff6f6b368d4,100,Construct
code-creation,Builtin,2,182590,0x7ff6f6b36954,148,ConstructVarargs
code-creation,Builtin,2,182603,0x7ff6f6b369f4,968,ConstructWithSpread
code-creation,Builtin,2,182616,0x7ff6f6b36dd4,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,182629,0x7ff6f6b374b4,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,182643,0x7ff6f6b37bb4,924,ConstructWithArrayLike
code-creation,Builtin,2,182656,0x7ff6f6b37f54,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,182670,0x7ff6f6b385d4,196,ConstructForwardVarargs
code-creation,Builtin,2,182683,0x7ff6f6b386b4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,182697,0x7ff6f6b38794,804,Construct_Baseline
code-creation,Builtin,2,182710,0x7ff6f6b38ad4,820,Construct_WithFeedback
code-creation,Builtin,2,182723,0x7ff6f6b38e14,476,JSConstructStubGeneric
code-creation,Builtin,2,182736,0x7ff6f6b38ff4,376,JSBuiltinsConstructStub
code-creation,Builtin,2,182750,0x7ff6f6b39174,676,FastNewObject
code-creation,Builtin,2,182763,0x7ff6f6b39434,292,FastNewClosure
code-creation,Builtin,2,182775,0x7ff6f6b39574,720,ConstructProxy
code-creation,Builtin,2,182788,0x7ff6f6b39854,360,JSEntry
code-creation,Builtin,2,182801,0x7ff6f6b399d4,360,JSConstructEntry
code-creation,Builtin,2,182814,0x7ff6f6b39b54,360,JSRunMicrotasksEntry
code-creation,Builtin,2,182827,0x7ff6f6b39cd4,96,JSEntryTrampoline
code-creation,Builtin,2,182840,0x7ff6f6b39d54,96,JSConstructEntryTrampoline
code-creation,Builtin,2,182853,0x7ff6f6b39dd4,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,182867,0x7ff6f6b39ef4,1116,StringCodePointAt
code-creation,Builtin,2,182880,0x7ff6f6b3a354,1552,StringFromCodePointAt
code-creation,Builtin,2,182893,0x7ff6f6b3a974,544,StringEqual
code-creation,Builtin,2,182906,0x7ff6f6b3abb4,276,StringGreaterThan
code-creation,Builtin,2,182968,0x7ff6f6b3acd4,276,StringGreaterThanOrEqual
code-creation,Builtin,2,182986,0x7ff6f6b3adf4,276,StringLessThan
code-creation,Builtin,2,182999,0x7ff6f6b3af14,276,StringLessThanOrEqual
code-creation,Builtin,2,183013,0x7ff6f6b3b034,2492,StringSubstring
code-creation,Builtin,2,183026,0x7ff6f6b3b9f4,80,OrderedHashTableHealIndex
code-creation,Builtin,2,183039,0x7ff6f6b3ba54,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,183052,0x7ff6f6b3bef4,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,183065,0x7ff6f6b3bf54,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,183079,0x7ff6f6b3bfb4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,183093,0x7ff6f6b3c014,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,183106,0x7ff6f6b3c074,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,183120,0x7ff6f6b3c0d4,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,183134,0x7ff6f6b3c134,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,183147,0x7ff6f6b3c194,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,183161,0x7ff6f6b3c274,52,InterpreterOnStackReplacement
code-creation,Builtin,2,183174,0x7ff6f6b3c2b4,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,183189,0x7ff6f6b3c514,56,BaselineOnStackReplacement
code-creation,Builtin,2,183202,0x7ff6f6b3c554,84,BaselineLeaveFrame
code-creation,Builtin,2,183215,0x7ff6f6b3c5b4,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,183229,0x7ff6f6b3c694,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,183243,0x7ff6f6b3c794,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,183256,0x7ff6f6b3c874,1004,CompileLazy
code-creation,Builtin,2,183269,0x7ff6f6b3cc74,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,183283,0x7ff6f6b3ccd4,252,InstantiateAsmJs
code-creation,Builtin,2,183296,0x7ff6f6b3cdd4,32,NotifyDeoptimized
code-creation,Builtin,2,183309,0x7ff6f6b3ce14,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,183322,0x7ff6f6b3d134,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,183335,0x7ff6f6b3d454,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,183348,0x7ff6f6b3d774,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,183362,0x7ff6f6b3da94,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,183375,0x7ff6f6b3dad4,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,183389,0x7ff6f6b3db14,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,183402,0x7ff6f6b3db54,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,183416,0x7ff6f6b3dbb4,288,CallApiCallback
code-creation,Builtin,2,183429,0x7ff6f6b3dcf4,268,CallApiGetter
code-creation,Builtin,2,183442,0x7ff6f6b3de14,12,HandleApiCall
code-creation,Builtin,2,183459,0x7ff6f6b3de34,12,HandleApiCallAsFunction
code-creation,Builtin,2,183491,0x7ff6f6b3de54,12,HandleApiCallAsConstructor
code-creation,Builtin,2,183506,0x7ff6f6b3de74,64,AllocateInYoungGeneration
code-creation,Builtin,2,183519,0x7ff6f6b3ded4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,183533,0x7ff6f6b3df14,64,AllocateInOldGeneration
code-creation,Builtin,2,183546,0x7ff6f6b3df74,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,183559,0x7ff6f6b3dfb4,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,183573,0x7ff6f6b3e174,496,GrowFastDoubleElements
code-creation,Builtin,2,183586,0x7ff6f6b3e374,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,183599,0x7ff6f6b3e514,388,DebugBreakTrampoline
code-creation,Builtin,2,183612,0x7ff6f6b3e6b4,180,ToNumber
code-creation,Builtin,2,183625,0x7ff6f6b3e774,292,ToNumber_Baseline
code-creation,Builtin,2,183639,0x7ff6f6b3e8b4,360,ToNumeric_Baseline
code-creation,Builtin,2,183652,0x7ff6f6b3ea34,104,PlainPrimitiveToNumber
code-creation,Builtin,2,183666,0x7ff6f6b3eab4,212,ToNumberConvertBigInt
code-creation,Builtin,2,183680,0x7ff6f6b3eb94,132,Typeof
code-creation,Builtin,2,183692,0x7ff6f6b3ec34,104,BigIntToI64
code-creation,Builtin,2,183706,0x7ff6f6b3ecb4,4,BigIntToI32Pair
code-creation,Builtin,2,183722,0x7ff6f6b3ecd4,232,I64ToBigInt
code-creation,Builtin,2,183736,0x7ff6f6b3edd4,4,I32PairToBigInt
code-creation,Builtin,2,183750,0x7ff6f6b3edf4,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,183764,0x7ff6f6b3ee74,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,183777,0x7ff6f6b3ff14,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,183790,0x7ff6f6b43d14,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,183804,0x7ff6f6b43e34,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,183818,0x7ff6f6b43e74,12,LoadIC_StringLength
code-creation,Builtin,2,183831,0x7ff6f6b43e94,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,183844,0x7ff6f6b43eb4,3056,LoadIC_NoFeedback
code-creation,Builtin,2,183857,0x7ff6f6b44ab4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,183871,0x7ff6f6b44af4,7332,StoreIC_NoFeedback
code-creation,Builtin,2,183884,0x7ff6f6b467b4,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,183897,0x7ff6f6b46874,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,183911,0x7ff6f6b468d4,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,183924,0x7ff6f6b469d4,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,183938,0x7ff6f6b46ad4,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,183952,0x7ff6f6b46bd4,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,183966,0x7ff6f6b46cd4,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,183979,0x7ff6f6b4a4f4,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,183993,0x7ff6f6b4ca94,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,184007,0x7ff6f6b4fed4,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,184021,0x7ff6f6b516b4,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,184034,0x7ff6f6b537f4,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,184049,0x7ff6f6b583b4,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,184062,0x7ff6f6b5a4f4,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,184076,0x7ff6f6b5d014,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,184090,0x7ff6f6b5d334,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,184103,0x7ff6f6b5d3f4,72,HasIndexedInterceptorIC
code-creation,Builtin,2,184116,0x7ff6f6b5d454,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,184129,0x7ff6f6b5d4d4,224,DynamicCheckMaps
code-creation,Builtin,2,184143,0x7ff6f6b5d5d4,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,184157,0x7ff6f6b5d654,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,184170,0x7ff6f6b5d714,152,EnqueueMicrotask
code-creation,Builtin,2,184184,0x7ff6f6b5d7b4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,184261,0x7ff6f6b5d7d4,3476,RunMicrotasks
code-creation,Builtin,2,184274,0x7ff6f6b5e574,2636,HasProperty
code-creation,Builtin,2,184287,0x7ff6f6b5efd4,1156,DeleteProperty
code-creation,Builtin,2,184300,0x7ff6f6b5f474,1972,CopyDataProperties
code-creation,Builtin,2,184314,0x7ff6f6b5fc34,9184,SetDataProperties
code-creation,Builtin,2,184327,0x7ff6f6b62034,28,Abort
code-creation,Builtin,2,184339,0x7ff6f6b62054,28,AbortCSAAssert
code-creation,Builtin,2,184352,0x7ff6f6b62074,12,EmptyFunction
code-creation,Builtin,2,184365,0x7ff6f6b62094,12,Illegal
code-creation,Builtin,2,184378,0x7ff6f6b620b4,12,StrictPoisonPillThrower
code-creation,Builtin,2,184391,0x7ff6f6b620d4,12,UnsupportedThrower
code-creation,Builtin,2,184404,0x7ff6f6b620f4,64,ReturnReceiver
code-creation,Builtin,2,184417,0x7ff6f6b62154,28,ArrayConstructor
code-creation,Builtin,2,184430,0x7ff6f6b62174,404,ArrayConstructorImpl
code-creation,Builtin,2,184443,0x7ff6f6b62314,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,184492,0x7ff6f6b623f4,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,184509,0x7ff6f6b624d4,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,184523,0x7ff6f6b62594,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,184589,0x7ff6f6b62654,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,184609,0x7ff6f6b62714,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,184624,0x7ff6f6b627d4,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,184638,0x7ff6f6b62894,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,184653,0x7ff6f6b62954,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,184667,0x7ff6f6b62b74,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,184681,0x7ff6f6b62d74,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,184696,0x7ff6f6b62f34,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,184711,0x7ff6f6b630d4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,184726,0x7ff6f6b63294,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,184740,0x7ff6f6b63434,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,184755,0x7ff6f6b63614,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,184770,0x7ff6f6b637b4,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,184783,0x7ff6f6b63814,12,ArrayConcat
code-creation,Builtin,2,184796,0x7ff6f6b63834,12,ArrayPrototypeFill
code-creation,Builtin,2,184809,0x7ff6f6b63854,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,184822,0x7ff6f6b63c14,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,184836,0x7ff6f6b63cb4,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,184849,0x7ff6f6b63d94,548,ArrayIncludes
code-creation,Builtin,2,184862,0x7ff6f6b63fd4,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,184875,0x7ff6f6b64334,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,184889,0x7ff6f6b643b4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,184902,0x7ff6f6b64434,552,ArrayIndexOf
code-creation,Builtin,2,184915,0x7ff6f6b64674,12,ArrayPop
code-creation,Builtin,2,184928,0x7ff6f6b64694,616,ArrayPrototypePop
code-creation,Builtin,2,184941,0x7ff6f6b64914,12,ArrayPush
code-creation,Builtin,2,184953,0x7ff6f6b64934,2424,ArrayPrototypePush
code-creation,Builtin,2,184966,0x7ff6f6b652b4,12,ArrayShift
code-creation,Builtin,2,184979,0x7ff6f6b652d4,12,ArrayUnshift
code-creation,Builtin,2,184992,0x7ff6f6b652f4,956,CloneFastJSArray
code-creation,Builtin,2,185005,0x7ff6f6b656b4,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,185018,0x7ff6f6b65f54,976,ExtractFastJSArray
code-creation,Builtin,2,185031,0x7ff6f6b66334,260,ArrayPrototypeEntries
code-creation,Builtin,2,185044,0x7ff6f6b66454,248,ArrayPrototypeKeys
code-creation,Builtin,2,185057,0x7ff6f6b66554,260,ArrayPrototypeValues
code-creation,Builtin,2,185071,0x7ff6f6b66674,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,185084,0x7ff6f6b677d4,4168,FlattenIntoArray
code-creation,Builtin,2,185097,0x7ff6f6b68834,4172,FlatMapIntoArray
code-creation,Builtin,2,185110,0x7ff6f6b69894,372,ArrayPrototypeFlat
code-creation,Builtin,2,185123,0x7ff6f6b69a14,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,185136,0x7ff6f6b69bd4,12,ArrayBufferConstructor
code-creation,Builtin,2,185149,0x7ff6f6b69bf4,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,185163,0x7ff6f6b69c14,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,185176,0x7ff6f6b69c34,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,185191,0x7ff6f6b69c54,804,AsyncFunctionEnter
code-creation,Builtin,2,185204,0x7ff6f6b69f94,132,AsyncFunctionReject
code-creation,Builtin,2,185217,0x7ff6f6b6a034,128,AsyncFunctionResolve
code-creation,Builtin,2,185230,0x7ff6f6b6a0d4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,185244,0x7ff6f6b6a0f4,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,185257,0x7ff6f6b6abf4,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,185273,0x7ff6f6b6b6f4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,185288,0x7ff6f6b6b7b4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,185302,0x7ff6f6b6b874,12,BigIntConstructor
code-creation,Builtin,2,185315,0x7ff6f6b6b894,12,BigIntAsUintN
code-creation,Builtin,2,185328,0x7ff6f6b6b8b4,12,BigIntAsIntN
code-creation,Builtin,2,185340,0x7ff6f6b6b8d4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,185354,0x7ff6f6b6b8f4,12,BigIntPrototypeToString
code-creation,Builtin,2,185367,0x7ff6f6b6b914,12,BigIntPrototypeValueOf
code-creation,Builtin,2,185380,0x7ff6f6b6b934,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,185393,0x7ff6f6b6b954,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,185407,0x7ff6f6b6b974,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,185421,0x7ff6f6b6b994,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,185434,0x7ff6f6b6b9b4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,185448,0x7ff6f6b6b9d4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,185484,0x7ff6f6b6b9f4,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,185500,0x7ff6f6b6ba14,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,185514,0x7ff6f6b6ba34,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,185528,0x7ff6f6b6ba54,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,185541,0x7ff6f6b6ba74,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,185555,0x7ff6f6b6ba94,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,185569,0x7ff6f6b6bab4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,185583,0x7ff6f6b6bad4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,185597,0x7ff6f6b6baf4,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,185610,0x7ff6f6b6bb14,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,185623,0x7ff6f6b6bb34,12,CallSitePrototypeIsEval
code-creation,Builtin,2,185637,0x7ff6f6b6bb54,12,CallSitePrototypeIsNative
code-creation,Builtin,2,185651,0x7ff6f6b6bb74,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,185665,0x7ff6f6b6bb94,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,185678,0x7ff6f6b6bbb4,12,CallSitePrototypeToString
code-creation,Builtin,2,185691,0x7ff6f6b6bbd4,12,ConsoleDebug
code-creation,Builtin,2,185704,0x7ff6f6b6bbf4,12,ConsoleError
code-creation,Builtin,2,185717,0x7ff6f6b6bc14,12,ConsoleInfo
code-creation,Builtin,2,185731,0x7ff6f6b6bc34,12,ConsoleLog
code-creation,Builtin,2,185743,0x7ff6f6b6bc54,12,ConsoleWarn
code-creation,Builtin,2,185756,0x7ff6f6b6bc74,12,ConsoleDir
code-creation,Builtin,2,185769,0x7ff6f6b6bc94,12,ConsoleDirXml
code-creation,Builtin,2,185782,0x7ff6f6b6bcb4,12,ConsoleTable
code-creation,Builtin,2,185795,0x7ff6f6b6bcd4,12,ConsoleTrace
code-creation,Builtin,2,185808,0x7ff6f6b6bcf4,12,ConsoleGroup
code-creation,Builtin,2,185862,0x7ff6f6b6bd14,12,ConsoleGroupCollapsed
code-creation,Builtin,2,185878,0x7ff6f6b6bd34,12,ConsoleGroupEnd
code-creation,Builtin,2,185892,0x7ff6f6b6bd54,12,ConsoleClear
code-creation,Builtin,2,185905,0x7ff6f6b6bd74,12,ConsoleCount
code-creation,Builtin,2,185918,0x7ff6f6b6bd94,12,ConsoleCountReset
code-creation,Builtin,2,185931,0x7ff6f6b6bdb4,12,ConsoleAssert
code-creation,Builtin,2,185944,0x7ff6f6b6bdd4,12,ConsoleProfile
code-creation,Builtin,2,185957,0x7ff6f6b6bdf4,12,ConsoleProfileEnd
code-creation,Builtin,2,185970,0x7ff6f6b6be14,12,ConsoleTime
code-creation,Builtin,2,185983,0x7ff6f6b6be34,12,ConsoleTimeLog
code-creation,Builtin,2,185996,0x7ff6f6b6be54,12,ConsoleTimeEnd
code-creation,Builtin,2,186009,0x7ff6f6b6be74,12,ConsoleTimeStamp
code-creation,Builtin,2,186022,0x7ff6f6b6be94,12,ConsoleContext
code-creation,Builtin,2,186035,0x7ff6f6b6beb4,12,DataViewConstructor
code-creation,Builtin,2,186048,0x7ff6f6b6bed4,12,DateConstructor
code-creation,Builtin,2,186061,0x7ff6f6b6bef4,216,DatePrototypeGetDate
code-creation,Builtin,2,186075,0x7ff6f6b6bfd4,216,DatePrototypeGetDay
code-creation,Builtin,2,186088,0x7ff6f6b6c0b4,216,DatePrototypeGetFullYear
code-creation,Builtin,2,186101,0x7ff6f6b6c194,216,DatePrototypeGetHours
code-creation,Builtin,2,186117,0x7ff6f6b6c274,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,186132,0x7ff6f6b6c354,216,DatePrototypeGetMinutes
code-creation,Builtin,2,186146,0x7ff6f6b6c434,216,DatePrototypeGetMonth
code-creation,Builtin,2,186159,0x7ff6f6b6c514,216,DatePrototypeGetSeconds
code-creation,Builtin,2,186172,0x7ff6f6b6c5f4,124,DatePrototypeGetTime
code-creation,Builtin,2,186187,0x7ff6f6b6c674,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,186200,0x7ff6f6b6c754,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,186213,0x7ff6f6b6c834,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,186226,0x7ff6f6b6c914,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,186239,0x7ff6f6b6c9f4,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,186253,0x7ff6f6b6cad4,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,186266,0x7ff6f6b6cbb4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,186280,0x7ff6f6b6cc94,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,186293,0x7ff6f6b6cd74,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,186306,0x7ff6f6b6ce54,124,DatePrototypeValueOf
code-creation,Builtin,2,186319,0x7ff6f6b6ced4,352,DatePrototypeToPrimitive
code-creation,Builtin,2,186332,0x7ff6f6b6d054,12,DatePrototypeGetYear
code-creation,Builtin,2,186345,0x7ff6f6b6d074,12,DatePrototypeSetYear
code-creation,Builtin,2,186358,0x7ff6f6b6d094,12,DateNow
code-creation,Builtin,2,186371,0x7ff6f6b6d0b4,12,DateParse
code-creation,Builtin,2,186383,0x7ff6f6b6d0d4,12,DatePrototypeSetDate
code-creation,Builtin,2,186396,0x7ff6f6b6d0f4,12,DatePrototypeSetFullYear
code-creation,Builtin,2,186409,0x7ff6f6b6d114,12,DatePrototypeSetHours
code-creation,Builtin,2,186422,0x7ff6f6b6d134,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,186436,0x7ff6f6b6d154,12,DatePrototypeSetMinutes
code-creation,Builtin,2,186449,0x7ff6f6b6d174,12,DatePrototypeSetMonth
code-creation,Builtin,2,186484,0x7ff6f6b6d194,12,DatePrototypeSetSeconds
code-creation,Builtin,2,186499,0x7ff6f6b6d1b4,12,DatePrototypeSetTime
code-creation,Builtin,2,186512,0x7ff6f6b6d1d4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,186526,0x7ff6f6b6d1f4,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,186540,0x7ff6f6b6d214,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,186553,0x7ff6f6b6d234,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,186566,0x7ff6f6b6d254,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,186580,0x7ff6f6b6d274,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,186593,0x7ff6f6b6d294,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,186607,0x7ff6f6b6d2b4,12,DatePrototypeToDateString
code-creation,Builtin,2,186620,0x7ff6f6b6d2d4,12,DatePrototypeToISOString
code-creation,Builtin,2,186633,0x7ff6f6b6d2f4,12,DatePrototypeToUTCString
code-creation,Builtin,2,186646,0x7ff6f6b6d314,12,DatePrototypeToString
code-creation,Builtin,2,186659,0x7ff6f6b6d334,12,DatePrototypeToTimeString
code-creation,Builtin,2,186673,0x7ff6f6b6d354,12,DatePrototypeToJson
code-creation,Builtin,2,186686,0x7ff6f6b6d374,12,DateUTC
code-creation,Builtin,2,186699,0x7ff6f6b6d394,12,ErrorConstructor
code-creation,Builtin,2,186712,0x7ff6f6b6d3b4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,186726,0x7ff6f6b6d3d4,12,ErrorPrototypeToString
code-creation,Builtin,2,186739,0x7ff6f6b6d3f4,12,FunctionConstructor
code-creation,Builtin,2,186753,0x7ff6f6b6d414,68,FunctionPrototypeApply
code-creation,Builtin,2,186766,0x7ff6f6b6d474,12,FunctionPrototypeBind
code-creation,Builtin,2,186779,0x7ff6f6b6d494,32,FunctionPrototypeCall
code-creation,Builtin,2,186792,0x7ff6f6b6d4d4,12,FunctionPrototypeToString
code-creation,Builtin,2,186805,0x7ff6f6b6d4f4,192,CreateIterResultObject
code-creation,Builtin,2,186818,0x7ff6f6b6d5d4,788,CreateGeneratorObject
code-creation,Builtin,2,186832,0x7ff6f6b6d8f4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,186845,0x7ff6f6b6d914,412,GeneratorPrototypeNext
code-creation,Builtin,2,186858,0x7ff6f6b6dab4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,186872,0x7ff6f6b6dc74,424,GeneratorPrototypeThrow
code-creation,Builtin,2,186887,0x7ff6f6b6de34,12,AsyncFunctionConstructor
code-creation,Builtin,2,186902,0x7ff6f6b6de54,372,SuspendGeneratorBaseline
code-creation,Builtin,2,186915,0x7ff6f6b6dfd4,88,ResumeGeneratorBaseline
code-creation,Builtin,2,186928,0x7ff6f6b6e034,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,186942,0x7ff6f6b6e074,12,GlobalDecodeURI
code-creation,Builtin,2,186955,0x7ff6f6b6e094,12,GlobalDecodeURIComponent
code-creation,Builtin,2,186968,0x7ff6f6b6e0b4,12,GlobalEncodeURI
code-creation,Builtin,2,186981,0x7ff6f6b6e0d4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,186994,0x7ff6f6b6e0f4,12,GlobalEscape
code-creation,Builtin,2,187007,0x7ff6f6b6e114,12,GlobalUnescape
code-creation,Builtin,2,187020,0x7ff6f6b6e134,12,GlobalEval
code-creation,Builtin,2,187033,0x7ff6f6b6e154,132,GlobalIsFinite
code-creation,Builtin,2,187046,0x7ff6f6b6e1f4,124,GlobalIsNaN
code-creation,Builtin,2,187058,0x7ff6f6b6e274,12,JsonParse
code-creation,Builtin,2,187071,0x7ff6f6b6e294,12,JsonStringify
code-creation,Builtin,2,187084,0x7ff6f6b6e2b4,4608,LoadIC
code-creation,Builtin,2,187097,0x7ff6f6b6f4d4,4296,LoadIC_Megamorphic
code-creation,Builtin,2,187110,0x7ff6f6b705b4,4520,LoadIC_Noninlined
code-creation,Builtin,2,187123,0x7ff6f6b71774,44,LoadICTrampoline
code-creation,Builtin,2,187136,0x7ff6f6b717b4,24,LoadICBaseline
code-creation,Builtin,2,187149,0x7ff6f6b717d4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,187162,0x7ff6f6b71814,7376,LoadSuperIC
code-creation,Builtin,2,187175,0x7ff6f6b734f4,24,LoadSuperICBaseline
code-creation,Builtin,2,187189,0x7ff6f6b73514,8148,KeyedLoadIC
code-creation,Builtin,2,187202,0x7ff6f6b754f4,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,187215,0x7ff6f6b78834,44,KeyedLoadICTrampoline
code-creation,Builtin,2,187228,0x7ff6f6b78874,24,KeyedLoadICBaseline
code-creation,Builtin,2,187241,0x7ff6f6b78894,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,187255,0x7ff6f6b788d4,5104,StoreGlobalIC
code-creation,Builtin,2,187268,0x7ff6f6b79cd4,44,StoreGlobalICTrampoline
code-creation,Builtin,2,187281,0x7ff6f6b79d14,24,StoreGlobalICBaseline
code-creation,Builtin,2,187294,0x7ff6f6b79d34,5340,StoreIC
code-creation,Builtin,2,187307,0x7ff6f6b7b214,44,StoreICTrampoline
code-creation,Builtin,2,187320,0x7ff6f6b7b254,24,StoreICBaseline
code-creation,Builtin,2,187333,0x7ff6f6b7b274,5780,KeyedStoreIC
code-creation,Builtin,2,187346,0x7ff6f6b7c914,44,KeyedStoreICTrampoline
code-creation,Builtin,2,187359,0x7ff6f6b7c954,24,KeyedStoreICBaseline
code-creation,Builtin,2,187372,0x7ff6f6b7c974,404,StoreInArrayLiteralIC
code-creation,Builtin,2,187385,0x7ff6f6b7cb14,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,187398,0x7ff6f6b7cb34,140,LookupContextBaseline
code-creation,Builtin,2,187411,0x7ff6f6b7cbd4,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,187425,0x7ff6f6b7cc74,3244,LoadGlobalIC
code-creation,Builtin,2,187438,0x7ff6f6b7d934,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,187451,0x7ff6f6b7e5d4,44,LoadGlobalICTrampoline
code-creation,Builtin,2,187484,0x7ff6f6b7e614,24,LoadGlobalICBaseline
code-creation,Builtin,2,187500,0x7ff6f6b7e634,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,187513,0x7ff6f6b7e674,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,187527,0x7ff6f6b7e694,140,LookupGlobalICBaseline
code-creation,Builtin,2,187540,0x7ff6f6b7e734,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,187553,0x7ff6f6b7e7d4,2064,CloneObjectIC
code-creation,Builtin,2,187566,0x7ff6f6b7eff4,24,CloneObjectICBaseline
code-creation,Builtin,2,187579,0x7ff6f6b7f014,1988,CloneObjectIC_Slow
code-creation,Builtin,2,187592,0x7ff6f6b7f7f4,2756,KeyedHasIC
code-creation,Builtin,2,187605,0x7ff6f6b802d4,24,KeyedHasICBaseline
code-creation,Builtin,2,187618,0x7ff6f6b802f4,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,187631,0x7ff6f6b80d54,1436,IterableToList
code-creation,Builtin,2,187645,0x7ff6f6b812f4,1240,IterableToFixedArray
code-creation,Builtin,2,187658,0x7ff6f6b817d4,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,187723,0x7ff6f6b81ad4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,187742,0x7ff6f6b81b14,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,187756,0x7ff6f6b81b94,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,187769,0x7ff6f6b81f74,1616,StringListFromIterable
code-creation,Builtin,2,187782,0x7ff6f6b825d4,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,187796,0x7ff6f6b82ab4,4156,MapConstructor
code-creation,Builtin,2,187809,0x7ff6f6b83af4,1996,MapPrototypeSet
code-creation,Builtin,2,187822,0x7ff6f6b842d4,1524,MapPrototypeDelete
code-creation,Builtin,2,187835,0x7ff6f6b848d4,204,MapPrototypeGet
code-creation,Builtin,2,187848,0x7ff6f6b849b4,164,MapPrototypeHas
code-creation,Builtin,2,187861,0x7ff6f6b84a74,12,MapPrototypeClear
code-creation,Builtin,2,187873,0x7ff6f6b84a94,284,MapPrototypeEntries
code-creation,Builtin,2,187886,0x7ff6f6b84bb4,144,MapPrototypeGetSize
code-creation,Builtin,2,187899,0x7ff6f6b84c54,492,MapPrototypeForEach
code-creation,Builtin,2,187912,0x7ff6f6b84e54,284,MapPrototypeKeys
code-creation,Builtin,2,187925,0x7ff6f6b84f74,284,MapPrototypeValues
code-creation,Builtin,2,187938,0x7ff6f6b85094,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,187951,0x7ff6f6b854b4,1168,MapIteratorToList
code-creation,Builtin,2,187964,0x7ff6f6b85954,12,NumberPrototypeToExponential
code-creation,Builtin,2,187977,0x7ff6f6b85974,12,NumberPrototypeToFixed
code-creation,Builtin,2,187990,0x7ff6f6b85994,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,188003,0x7ff6f6b859b4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,188016,0x7ff6f6b859d4,328,SameValue
code-creation,Builtin,2,188029,0x7ff6f6b85b34,204,SameValueNumbersOnly
code-creation,Builtin,2,188042,0x7ff6f6b85c14,792,Add_Baseline
code-creation,Builtin,2,188054,0x7ff6f6b85f34,828,Subtract_Baseline
code-creation,Builtin,2,188067,0x7ff6f6b86274,808,Multiply_Baseline
code-creation,Builtin,2,188080,0x7ff6f6b865b4,832,Divide_Baseline
code-creation,Builtin,2,188093,0x7ff6f6b86914,764,Modulus_Baseline
code-creation,Builtin,2,188106,0x7ff6f6b86c14,808,Exponentiate_Baseline
code-creation,Builtin,2,188119,0x7ff6f6b86f54,708,BitwiseAnd_Baseline
code-creation,Builtin,2,188132,0x7ff6f6b87234,700,BitwiseOr_Baseline
code-creation,Builtin,2,188145,0x7ff6f6b874f4,708,BitwiseXor_Baseline
code-creation,Builtin,2,188158,0x7ff6f6b877d4,720,ShiftLeft_Baseline
code-creation,Builtin,2,188171,0x7ff6f6b87ab4,720,ShiftRight_Baseline
code-creation,Builtin,2,188185,0x7ff6f6b87d94,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,188199,0x7ff6f6b880f4,720,Add_WithFeedback
code-creation,Builtin,2,188212,0x7ff6f6b883d4,780,Subtract_WithFeedback
code-creation,Builtin,2,188225,0x7ff6f6b886f4,776,Multiply_WithFeedback
code-creation,Builtin,2,188238,0x7ff6f6b88a14,804,Divide_WithFeedback
code-creation,Builtin,2,188250,0x7ff6f6b88d54,724,Modulus_WithFeedback
code-creation,Builtin,2,188263,0x7ff6f6b89034,764,Exponentiate_WithFeedback
code-creation,Builtin,2,188277,0x7ff6f6b89334,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,188291,0x7ff6f6b895f4,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,188307,0x7ff6f6b898b4,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,188321,0x7ff6f6b89b74,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,188334,0x7ff6f6b89e34,692,ShiftRight_WithFeedback
code-creation,Builtin,2,188347,0x7ff6f6b8a0f4,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,188360,0x7ff6f6b8a434,1696,Equal_Baseline
code-creation,Builtin,2,188376,0x7ff6f6b8aaf4,908,StrictEqual_Baseline
code-creation,Builtin,2,188390,0x7ff6f6b8ae94,1264,LessThan_Baseline
code-creation,Builtin,2,188403,0x7ff6f6b8b394,1264,GreaterThan_Baseline
code-creation,Builtin,2,188416,0x7ff6f6b8b894,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,188431,0x7ff6f6b8bd94,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,188445,0x7ff6f6b8c294,1620,Equal_WithFeedback
code-creation,Builtin,2,188458,0x7ff6f6b8c8f4,940,StrictEqual_WithFeedback
code-creation,Builtin,2,188494,0x7ff6f6b8ccb4,1240,LessThan_WithFeedback
code-creation,Builtin,2,188511,0x7ff6f6b8d194,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,188526,0x7ff6f6b8d674,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,188540,0x7ff6f6b8db54,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,188554,0x7ff6f6b8e034,332,BitwiseNot_Baseline
code-creation,Builtin,2,188567,0x7ff6f6b8e194,460,Decrement_Baseline
code-creation,Builtin,2,188580,0x7ff6f6b8e374,464,Increment_Baseline
code-creation,Builtin,2,188593,0x7ff6f6b8e554,488,Negate_Baseline
code-creation,Builtin,2,188606,0x7ff6f6b8e754,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,188619,0x7ff6f6b8e894,440,Decrement_WithFeedback
code-creation,Builtin,2,188632,0x7ff6f6b8ea54,444,Increment_WithFeedback
code-creation,Builtin,2,188646,0x7ff6f6b8ec14,472,Negate_WithFeedback
code-creation,Builtin,2,188660,0x7ff6f6b8edf4,252,ObjectAssign
code-creation,Builtin,2,188672,0x7ff6f6b8eef4,864,ObjectCreate
code-creation,Builtin,2,188685,0x7ff6f6b8f274,12,ObjectDefineGetter
code-creation,Builtin,2,188698,0x7ff6f6b8f294,12,ObjectDefineProperties
code-creation,Builtin,2,188712,0x7ff6f6b8f2b4,12,ObjectDefineProperty
code-creation,Builtin,2,188725,0x7ff6f6b8f2d4,12,ObjectDefineSetter
code-creation,Builtin,2,188738,0x7ff6f6b8f2f4,1516,ObjectEntries
code-creation,Builtin,2,188751,0x7ff6f6b8f8f4,12,ObjectFreeze
code-creation,Builtin,2,188763,0x7ff6f6b8f914,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,188777,0x7ff6f6b90f14,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,188790,0x7ff6f6b90f34,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,188804,0x7ff6f6b91194,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,188817,0x7ff6f6b911b4,164,ObjectHasOwn
code-creation,Builtin,2,188830,0x7ff6f6b91274,388,ObjectIs
code-creation,Builtin,2,188842,0x7ff6f6b91414,12,ObjectIsFrozen
code-creation,Builtin,2,188855,0x7ff6f6b91434,12,ObjectIsSealed
code-creation,Builtin,2,188868,0x7ff6f6b91454,536,ObjectKeys
code-creation,Builtin,2,188880,0x7ff6f6b91674,12,ObjectLookupGetter
code-creation,Builtin,2,188893,0x7ff6f6b91694,12,ObjectLookupSetter
code-creation,Builtin,2,188906,0x7ff6f6b916b4,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,188920,0x7ff6f6b91fb4,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,188933,0x7ff6f6b92094,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,188946,0x7ff6f6b920b4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,188959,0x7ff6f6b920d4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,188972,0x7ff6f6b920f4,12,ObjectSeal
code-creation,Builtin,2,188985,0x7ff6f6b92114,1108,ObjectToString
code-creation,Builtin,2,188997,0x7ff6f6b92574,1284,ObjectValues
code-creation,Builtin,2,189010,0x7ff6f6b92a94,280,OrdinaryHasInstance
code-creation,Builtin,2,189023,0x7ff6f6b92bb4,344,InstanceOf
code-creation,Builtin,2,189036,0x7ff6f6b92d14,632,InstanceOf_WithFeedback
code-creation,Builtin,2,189049,0x7ff6f6b92f94,648,InstanceOf_Baseline
code-creation,Builtin,2,189062,0x7ff6f6b93234,268,ForInEnumerate
code-creation,Builtin,2,189075,0x7ff6f6b93354,148,ForInPrepare
code-creation,Builtin,2,189088,0x7ff6f6b933f4,2584,ForInFilter
code-creation,Builtin,2,189100,0x7ff6f6b93e14,52,ReflectApply
code-creation,Builtin,2,189113,0x7ff6f6b93e54,60,ReflectConstruct
code-creation,Builtin,2,189126,0x7ff6f6b93e94,12,ReflectDefineProperty
code-creation,Builtin,2,189139,0x7ff6f6b93eb4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,189152,0x7ff6f6b93ed4,12,ReflectOwnKeys
code-creation,Builtin,2,189165,0x7ff6f6b93ef4,12,ReflectSet
code-creation,Builtin,2,189177,0x7ff6f6b93f14,12,RegExpCapture1Getter
code-creation,Builtin,2,189194,0x7ff6f6b93f34,12,RegExpCapture2Getter
code-creation,Builtin,2,189207,0x7ff6f6b93f54,12,RegExpCapture3Getter
code-creation,Builtin,2,189220,0x7ff6f6b93f74,12,RegExpCapture4Getter
code-creation,Builtin,2,189233,0x7ff6f6b93f94,12,RegExpCapture5Getter
code-creation,Builtin,2,189246,0x7ff6f6b93fb4,12,RegExpCapture6Getter
code-creation,Builtin,2,189392,0x7ff6f6b93fd4,12,RegExpCapture7Getter
code-creation,Builtin,2,189408,0x7ff6f6b93ff4,12,RegExpCapture8Getter
code-creation,Builtin,2,189424,0x7ff6f6b94014,12,RegExpCapture9Getter
code-creation,Builtin,2,189439,0x7ff6f6b94034,2212,RegExpConstructor
code-creation,Builtin,2,189452,0x7ff6f6b948f4,12,RegExpInputGetter
code-creation,Builtin,2,189487,0x7ff6f6b94914,12,RegExpInputSetter
code-creation,Builtin,2,189502,0x7ff6f6b94934,12,RegExpLastMatchGetter
code-creation,Builtin,2,189515,0x7ff6f6b94954,12,RegExpLastParenGetter
code-creation,Builtin,2,189529,0x7ff6f6b94974,12,RegExpLeftContextGetter
code-creation,Builtin,2,189542,0x7ff6f6b94994,908,RegExpPrototypeCompile
code-creation,Builtin,2,189555,0x7ff6f6b94d34,12,RegExpPrototypeToString
code-creation,Builtin,2,189568,0x7ff6f6b94d54,12,RegExpRightContextGetter
code-creation,Builtin,2,189581,0x7ff6f6b94d74,252,RegExpExecAtom
code-creation,Builtin,2,189594,0x7ff6f6b94e74,1040,RegExpExecInternal
code-creation,Builtin,2,189607,0x7ff6f6b95294,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,189621,0x7ff6f6b952b4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,189634,0x7ff6f6b952d4,2684,SetConstructor
code-creation,Builtin,2,189647,0x7ff6f6b95d54,1284,SetPrototypeHas
code-creation,Builtin,2,189660,0x7ff6f6b96274,1736,SetPrototypeAdd
code-creation,Builtin,2,189673,0x7ff6f6b96954,1476,SetPrototypeDelete
code-creation,Builtin,2,189687,0x7ff6f6b96f34,12,SetPrototypeClear
code-creation,Builtin,2,189749,0x7ff6f6b96f54,284,SetPrototypeEntries
code-creation,Builtin,2,189765,0x7ff6f6b97074,144,SetPrototypeGetSize
code-creation,Builtin,2,189778,0x7ff6f6b97114,444,SetPrototypeForEach
code-creation,Builtin,2,189792,0x7ff6f6b972d4,284,SetPrototypeValues
code-creation,Builtin,2,189805,0x7ff6f6b973f4,988,SetIteratorPrototypeNext
code-creation,Builtin,2,189818,0x7ff6f6b977d4,1112,SetOrSetIteratorToList
code-creation,Builtin,2,189831,0x7ff6f6b97c34,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,189845,0x7ff6f6b97c54,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,189859,0x7ff6f6b97c74,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,189872,0x7ff6f6b97c94,1280,AtomicsLoad
code-creation,Builtin,2,189885,0x7ff6f6b981b4,1008,AtomicsStore
code-creation,Builtin,2,189898,0x7ff6f6b985b4,1704,AtomicsExchange
code-creation,Builtin,2,189910,0x7ff6f6b98c74,2092,AtomicsCompareExchange
code-creation,Builtin,2,189923,0x7ff6f6b994b4,1804,AtomicsAdd
code-creation,Builtin,2,189936,0x7ff6f6b99bd4,1804,AtomicsSub
code-creation,Builtin,2,189949,0x7ff6f6b9a2f4,1804,AtomicsAnd
code-creation,Builtin,2,189962,0x7ff6f6b9aa14,1804,AtomicsOr
code-creation,Builtin,2,189974,0x7ff6f6b9b134,1804,AtomicsXor
code-creation,Builtin,2,189987,0x7ff6f6b9b854,12,AtomicsNotify
code-creation,Builtin,2,190000,0x7ff6f6b9b874,12,AtomicsIsLockFree
code-creation,Builtin,2,190012,0x7ff6f6b9b894,12,AtomicsWait
code-creation,Builtin,2,190025,0x7ff6f6b9b8b4,12,AtomicsWaitAsync
code-creation,Builtin,2,190038,0x7ff6f6b9b8d4,12,StringFromCodePoint
code-creation,Builtin,2,190051,0x7ff6f6b9b8f4,1428,StringFromCharCode
code-creation,Builtin,2,190064,0x7ff6f6b9be94,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,190077,0x7ff6f6b9beb4,4360,StringPrototypeMatchAll
code-creation,Builtin,2,190090,0x7ff6f6b9cfd4,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,190103,0x7ff6f6b9cff4,1228,StringPrototypeReplace
code-creation,Builtin,2,190116,0x7ff6f6b9d4d4,2900,StringPrototypeSplit
code-creation,Builtin,2,190129,0x7ff6f6b9e034,12,StringRaw
code-creation,Builtin,2,190142,0x7ff6f6b9e054,12,SymbolConstructor
code-creation,Builtin,2,190154,0x7ff6f6b9e074,12,SymbolFor
code-creation,Builtin,2,190167,0x7ff6f6b9e094,12,SymbolKeyFor
code-creation,Builtin,2,190180,0x7ff6f6b9e0b4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,190194,0x7ff6f6b9e114,256,TypedArrayConstructor
code-creation,Builtin,2,190207,0x7ff6f6b9e234,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,190221,0x7ff6f6b9e254,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,190234,0x7ff6f6b9e5d4,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,190248,0x7ff6f6b9e754,584,TypedArrayPrototypeLength
code-creation,Builtin,2,190261,0x7ff6f6b9e9b4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,190278,0x7ff6f6b9e9d4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,190294,0x7ff6f6b9e9f4,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,190308,0x7ff6f6b9ea14,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,190321,0x7ff6f6b9ea34,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,190335,0x7ff6f6b9ea54,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,190348,0x7ff6f6b9ea74,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,190361,0x7ff6f6b9ebb4,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,190374,0x7ff6f6ba1574,792,GenericJSToWasmWrapper
code-creation,Builtin,2,190387,0x7ff6f6ba1894,148,WasmCompileLazy
code-creation,Builtin,2,190400,0x7ff6f6ba1934,168,WasmDebugBreak
code-creation,Builtin,2,190413,0x7ff6f6ba19f4,16,WasmOnStackReplace
code-creation,Builtin,2,190426,0x7ff6f6ba1a14,140,WasmFloat32ToNumber
code-creation,Builtin,2,190439,0x7ff6f6ba1ab4,152,WasmFloat64ToNumber
code-creation,Builtin,2,190452,0x7ff6f6ba1b54,4,WasmI32AtomicWait32
code-creation,Builtin,2,190490,0x7ff6f6ba1b74,4,WasmI64AtomicWait32
code-creation,Builtin,2,190504,0x7ff6f6ba1b94,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,190517,0x7ff6f6ba1bb4,4320,WeakMapConstructor
code-creation,Builtin,2,190531,0x7ff6f6ba2cb4,196,WeakMapLookupHashIndex
code-creation,Builtin,2,190544,0x7ff6f6ba2d94,220,WeakMapGet
code-creation,Builtin,2,190556,0x7ff6f6ba2e74,176,WeakMapPrototypeHas
code-creation,Builtin,2,190569,0x7ff6f6ba2f34,204,WeakMapPrototypeSet
code-creation,Builtin,2,190582,0x7ff6f6ba3014,144,WeakMapPrototypeDelete
code-creation,Builtin,2,190595,0x7ff6f6ba30b4,2876,WeakSetConstructor
code-creation,Builtin,2,190609,0x7ff6f6ba3bf4,176,WeakSetPrototypeHas
code-creation,Builtin,2,190622,0x7ff6f6ba3cb4,204,WeakSetPrototypeAdd
code-creation,Builtin,2,190635,0x7ff6f6ba3d94,144,WeakSetPrototypeDelete
code-creation,Builtin,2,190649,0x7ff6f6ba3e34,372,WeakCollectionDelete
code-creation,Builtin,2,190662,0x7ff6f6ba3fb4,764,WeakCollectionSet
code-creation,Builtin,2,190675,0x7ff6f6ba42b4,296,AsyncGeneratorResolve
code-creation,Builtin,2,190688,0x7ff6f6ba43f4,100,AsyncGeneratorReject
code-creation,Builtin,2,190701,0x7ff6f6ba4474,2760,AsyncGeneratorYield
code-creation,Builtin,2,190714,0x7ff6f6ba4f54,2872,AsyncGeneratorReturn
code-creation,Builtin,2,190728,0x7ff6f6ba5a94,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,190741,0x7ff6f6ba5bd4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,190754,0x7ff6f6ba5bf4,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,190768,0x7ff6f6ba5ff4,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,190781,0x7ff6f6ba6414,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,190795,0x7ff6f6ba6834,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,190808,0x7ff6f6ba72f4,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,190822,0x7ff6f6ba7db4,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,190835,0x7ff6f6ba7e34,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,190848,0x7ff6f6ba7ed4,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,190861,0x7ff6f6ba7f54,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,190875,0x7ff6f6ba7fd4,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,190889,0x7ff6f6ba8054,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,190902,0x7ff6f6ba80f4,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,190915,0x7ff6f6ba8734,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,190929,0x7ff6f6ba8df4,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,190943,0x7ff6f6ba94b4,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,190956,0x7ff6f6ba9534,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,190969,0x7ff6f6ba9634,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,190983,0x7ff6f6ba9734,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,190998,0x7ff6f6ba9814,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,191014,0x7ff6f6ba99b4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,191030,0x7ff6f6ba9b54,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,191044,0x7ff6f6ba9c54,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,191059,0x7ff6f6ba9d54,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,191073,0x7ff6f6ba9e54,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,191087,0x7ff6f6ba9ff4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,191101,0x7ff6f6baa194,4,DirectCEntry
code-creation,Builtin,2,191114,0x7ff6f6baa1b4,1096,StringAdd_CheckNone
code-creation,Builtin,2,191127,0x7ff6f6baa614,2484,SubString
code-creation,Builtin,2,191139,0x7ff6f6baafd4,16,StackCheck
code-creation,Builtin,2,191152,0x7ff6f6baaff4,84,DoubleToI
code-creation,Builtin,2,191165,0x7ff6f6bab054,2236,GetProperty
code-creation,Builtin,2,191177,0x7ff6f6bab914,2308,GetPropertyWithReceiver
code-creation,Builtin,2,191192,0x7ff6f6bac234,16004,SetProperty
code-creation,Builtin,2,191204,0x7ff6f6bb00d4,13480,SetPropertyInLiteral
code-creation,Builtin,2,191217,0x7ff6f6bb3594,8,MemCopyUint8Uint8
code-creation,Builtin,2,191230,0x7ff6f6bb35b4,8,MemMove
code-creation,Builtin,2,191243,0x7ff6f6bb35d4,12,IsTraceCategoryEnabled
code-creation,Builtin,2,191256,0x7ff6f6bb35f4,12,Trace
code-creation,Builtin,2,191268,0x7ff6f6bb3614,12,FinalizationRegistryUnregister
code-creation,Builtin,2,191281,0x7ff6f6bb3634,416,AsyncModuleEvaluate
code-creation,Builtin,2,191294,0x7ff6f6bb37f4,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,191307,0x7ff6f6bb3814,12,CallAsyncModuleRejected
code-creation,Builtin,2,191320,0x7ff6f6bb3834,260,AggregateErrorConstructor
code-creation,Builtin,2,191333,0x7ff6f6bb3954,856,ArrayPrototypeAt
code-creation,Builtin,2,191346,0x7ff6f6bb3cb4,656,ArrayPrototypeConcat
code-creation,Builtin,2,191359,0x7ff6f6bb3f54,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,191372,0x7ff6f6bb5634,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,191386,0x7ff6f6bb5714,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,191399,0x7ff6f6bb5994,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,191412,0x7ff6f6bb6694,1464,ArrayEvery
code-creation,Builtin,2,191425,0x7ff6f6bb6c54,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,191493,0x7ff6f6bb6d74,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,191510,0x7ff6f6bb7154,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,191524,0x7ff6f6bb7f54,4260,ArrayFilter
code-creation,Builtin,2,191537,0x7ff6f6bb9014,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,191550,0x7ff6f6bb90f4,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,191564,0x7ff6f6bb9134,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,191578,0x7ff6f6bb9274,528,ArrayFindLoopContinuation
code-creation,Builtin,2,191591,0x7ff6f6bb9494,1460,ArrayPrototypeFind
code-creation,Builtin,2,191604,0x7ff6f6bb9a54,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,191618,0x7ff6f6bb9b34,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,191632,0x7ff6f6bb9b74,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,191646,0x7ff6f6bb9cb4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,191659,0x7ff6f6bb9ed4,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,191673,0x7ff6f6bba494,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,191686,0x7ff6f6bba674,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,191699,0x7ff6f6bbad34,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,191713,0x7ff6f6bbaf14,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,191727,0x7ff6f6bbb5d4,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,191740,0x7ff6f6bbb6b4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,191757,0x7ff6f6bbb794,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,191772,0x7ff6f6bbc3f4,1328,ArrayForEach
code-creation,Builtin,2,191785,0x7ff6f6bbc934,3572,ArrayFrom
code-creation,Builtin,2,191798,0x7ff6f6bbd734,148,ArrayIsArray
code-creation,Builtin,2,191811,0x7ff6f6bbd7d4,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,191824,0x7ff6f6bbd974,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,191838,0x7ff6f6bbd9b4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,191851,0x7ff6f6bbda54,312,ConvertToLocaleString
code-creation,Builtin,2,191864,0x7ff6f6bbdb94,752,JoinStackPush
code-creation,Builtin,2,191877,0x7ff6f6bbde94,272,JoinStackPop
code-creation,Builtin,2,191890,0x7ff6f6bbdfb4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,191903,0x7ff6f6bbf9b4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,191916,0x7ff6f6bc0eb4,236,ArrayPrototypeToString
code-creation,Builtin,2,191930,0x7ff6f6bc0fb4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,191943,0x7ff6f6bc26f4,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,191956,0x7ff6f6bc3914,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,191969,0x7ff6f6bc4814,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,191983,0x7ff6f6bc4934,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,191996,0x7ff6f6bc4a34,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,192010,0x7ff6f6bc4c54,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,192023,0x7ff6f6bc58d4,3912,ArrayMap
code-creation,Builtin,2,192035,0x7ff6f6bc6834,1000,ArrayOf
code-creation,Builtin,2,192048,0x7ff6f6bc6c34,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,192062,0x7ff6f6bc6df4,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,192075,0x7ff6f6bc6ed4,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,192089,0x7ff6f6bc6fb4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,192102,0x7ff6f6bc7c54,2000,ArrayReduceRight
code-creation,Builtin,2,192115,0x7ff6f6bc8434,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,192129,0x7ff6f6bc84f4,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,192142,0x7ff6f6bc85d4,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,192156,0x7ff6f6bc86b4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,192169,0x7ff6f6bc9374,1604,ArrayReduce
code-creation,Builtin,2,192181,0x7ff6f6bc99d4,3216,ArrayPrototypeReverse
code-creation,Builtin,2,192196,0x7ff6f6bca674,3592,ArrayPrototypeShift
tick,0x7ff6f70b2a5b,192286,0,0x0,6
code-creation,Builtin,2,192311,0x7ff6f6bcb494,5220,ArrayPrototypeSlice
code-creation,Builtin,2,192336,0x7ff6f6bcc914,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,192351,0x7ff6f6bcc9f4,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,192365,0x7ff6f6bccc54,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,192378,0x7ff6f6bcd954,1448,ArraySome
code-creation,Builtin,2,192391,0x7ff6f6bcdf14,14216,ArrayPrototypeSplice
code-creation,Builtin,2,192404,0x7ff6f6bd16b4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,192418,0x7ff6f6bd2394,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,192431,0x7ff6f6bd24f4,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,192445,0x7ff6f6bd2654,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,192458,0x7ff6f6bd2734,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,192472,0x7ff6f6bd2894,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,192486,0x7ff6f6bd2974,96,ArrayBufferIsView
code-creation,Builtin,2,192499,0x7ff6f6bd29f4,396,ToInteger
code-creation,Builtin,2,192512,0x7ff6f6bd2b94,3084,FastCreateDataProperty
code-creation,Builtin,2,192524,0x7ff6f6bd37b4,676,CheckNumberInRange
code-creation,Builtin,2,192537,0x7ff6f6bd3a74,584,CheckSameObject
code-creation,Builtin,2,192551,0x7ff6f6bd3cd4,904,BooleanConstructor
code-creation,Builtin,2,192564,0x7ff6f6bd4074,164,BooleanPrototypeToString
code-creation,Builtin,2,192582,0x7ff6f6bd4134,156,BooleanPrototypeValueOf
code-creation,Builtin,2,192598,0x7ff6f6bd41d4,1184,BigIntAddNoThrow
code-creation,Builtin,2,192611,0x7ff6f6bd4694,1280,BigIntAdd
code-creation,Builtin,2,192624,0x7ff6f6bd4bb4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,192637,0x7ff6f6bd5074,1280,BigIntSubtract
code-creation,Builtin,2,192650,0x7ff6f6bd5594,284,BigIntUnaryMinus
code-creation,Builtin,2,192663,0x7ff6f6bd56b4,1360,ToString
code-creation,Builtin,2,192676,0x7ff6f6bd5c14,156,StringPrototypeToString
code-creation,Builtin,2,192689,0x7ff6f6bd5cb4,156,StringPrototypeValueOf
code-creation,Builtin,2,192702,0x7ff6f6bd5d54,2480,StringToList
code-creation,Builtin,2,192715,0x7ff6f6bd6714,1012,StringPrototypeCharAt
code-creation,Builtin,2,192728,0x7ff6f6bd6b14,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,192744,0x7ff6f6bd6dd4,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,192762,0x7ff6f6bd72f4,400,StringPrototypeConcat
code-creation,Builtin,2,192775,0x7ff6f6bd7494,992,StringConstructor
code-creation,Builtin,2,192788,0x7ff6f6bd7894,1436,StringAddConvertLeft
code-creation,Builtin,2,192802,0x7ff6f6bd7e34,1464,StringAddConvertRight
code-creation,Builtin,2,192815,0x7ff6f6bd83f4,816,StringCharAt
code-creation,Builtin,2,192828,0x7ff6f6bd8734,16,FastNewClosureBaseline
code-creation,Builtin,2,192841,0x7ff6f6bd8754,196,FastNewFunctionContextEval
code-creation,Builtin,2,192855,0x7ff6f6bd8834,196,FastNewFunctionContextFunction
code-creation,Builtin,2,192868,0x7ff6f6bd8914,248,CreateRegExpLiteral
code-creation,Builtin,2,192881,0x7ff6f6bd8a14,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,192895,0x7ff6f6bd8e54,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,192908,0x7ff6f6bd9054,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,192921,0x7ff6f6bd9734,384,ObjectConstructor
code-creation,Builtin,2,192934,0x7ff6f6bd98d4,176,CreateEmptyLiteralObject
code-creation,Builtin,2,192948,0x7ff6f6bd9994,536,NumberConstructor
code-creation,Builtin,2,192961,0x7ff6f6bd9bb4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,192975,0x7ff6f6bd9c14,64,StringToNumber
code-creation,Builtin,2,192987,0x7ff6f6bd9c74,184,NonNumberToNumber
code-creation,Builtin,2,193000,0x7ff6f6bd9d34,240,NonNumberToNumeric
code-creation,Builtin,2,193013,0x7ff6f6bd9e34,36,ToNumeric
code-creation,Builtin,2,193026,0x7ff6f6bd9e74,1184,NumberToString
code-creation,Builtin,2,193038,0x7ff6f6bda334,92,ToBoolean
code-creation,Builtin,2,193051,0x7ff6f6bda394,96,ToBooleanForBaselineJump
code-creation,Builtin,2,193065,0x7ff6f6bda414,728,ToLength
code-creation,Builtin,2,193077,0x7ff6f6bda6f4,1312,ToName
code-creation,Builtin,2,193090,0x7ff6f6bdac34,756,ToObject
code-creation,Builtin,2,193102,0x7ff6f6bdaf34,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,193115,0x7ff6f6bdb014,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,193129,0x7ff6f6bdb0f4,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,193142,0x7ff6f6bdb1d4,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,193155,0x7ff6f6bdb314,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,193169,0x7ff6f6bdb454,216,FastConsoleAssert
code-creation,Builtin,2,193182,0x7ff6f6bdb534,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,193197,0x7ff6f6bdb5f4,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,193211,0x7ff6f6bdb754,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,193224,0x7ff6f6bdb8b4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,193238,0x7ff6f6bdbaf4,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,193251,0x7ff6f6bdbd34,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,193264,0x7ff6f6bdbfd4,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,193277,0x7ff6f6bdc274,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,193291,0x7ff6f6bdc5b4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,193304,0x7ff6f6bdc874,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,193318,0x7ff6f6bdcbd4,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,193331,0x7ff6f6bdcf74,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,193347,0x7ff6f6bdd354,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,193362,0x7ff6f6bdd754,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,193375,0x7ff6f6bddb14,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,193389,0x7ff6f6bdded4,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,193402,0x7ff6f6bde2f4,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,193415,0x7ff6f6bde714,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,193429,0x7ff6f6bdeb54,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,193442,0x7ff6f6bdef94,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,193455,0x7ff6f6bdf3b4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,193468,0x7ff6f6bdf814,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,193482,0x7ff6f6bdfbd4,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,193496,0x7ff6f6bdff94,828,FinalizationRegistryConstructor
code-creation,Builtin,2,193509,0x7ff6f6be02d4,1152,FinalizationRegistryRegister
code-creation,Builtin,2,193523,0x7ff6f6be0774,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,193537,0x7ff6f6be0a14,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,193550,0x7ff6f6be0b74,924,FastFunctionPrototypeBind
code-creation,Builtin,2,193564,0x7ff6f6be0f14,88,IncBlockCounter
code-creation,Builtin,2,193577,0x7ff6f6be0f74,228,GetTemplateObject
code-creation,Builtin,2,193590,0x7ff6f6be1074,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,193603,0x7ff6f6be1094,92,ForInNext
code-creation,Builtin,2,193616,0x7ff6f6be10f4,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,193630,0x7ff6f6be1194,116,GetIteratorWithFeedback
code-creation,Builtin,2,193643,0x7ff6f6be1214,100,GetIteratorBaseline
code-creation,Builtin,2,193656,0x7ff6f6be1294,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,193669,0x7ff6f6be13b4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,193683,0x7ff6f6be17f4,288,MathAbs
code-creation,Builtin,2,193695,0x7ff6f6be1934,428,MathCeil
code-creation,Builtin,2,193708,0x7ff6f6be1af4,432,MathFloor
code-creation,Builtin,2,193721,0x7ff6f6be1cb4,488,MathRound
code-creation,Builtin,2,193733,0x7ff6f6be1eb4,428,MathTrunc
code-creation,Builtin,2,193746,0x7ff6f6be2074,368,MathPow
code-creation,Builtin,2,193759,0x7ff6f6be21f4,396,MathMax
code-creation,Builtin,2,193772,0x7ff6f6be2394,404,MathMin
code-creation,Builtin,2,193784,0x7ff6f6be2534,320,MathAcos
code-creation,Builtin,2,193797,0x7ff6f6be2694,320,MathAcosh
code-creation,Builtin,2,193810,0x7ff6f6be27f4,320,MathAsin
code-creation,Builtin,2,193823,0x7ff6f6be2954,320,MathAsinh
code-creation,Builtin,2,193836,0x7ff6f6be2ab4,320,MathAtan
code-creation,Builtin,2,193849,0x7ff6f6be2c14,416,MathAtan2
code-creation,Builtin,2,193861,0x7ff6f6be2dd4,320,MathAtanh
code-creation,Builtin,2,193874,0x7ff6f6be2f34,320,MathCbrt
code-creation,Builtin,2,193887,0x7ff6f6be3094,168,MathClz32
code-creation,Builtin,2,193900,0x7ff6f6be3154,320,MathCos
code-creation,Builtin,2,193912,0x7ff6f6be32b4,320,MathCosh
code-creation,Builtin,2,193925,0x7ff6f6be3414,320,MathExp
code-creation,Builtin,2,193938,0x7ff6f6be3574,320,MathExpm1
code-creation,Builtin,2,193950,0x7ff6f6be36d4,272,MathFround
code-creation,Builtin,2,193963,0x7ff6f6be37f4,304,MathImul
code-creation,Builtin,2,193976,0x7ff6f6be3934,320,MathLog
code-creation,Builtin,2,193989,0x7ff6f6be3a94,320,MathLog1p
code-creation,Builtin,2,194001,0x7ff6f6be3bf4,320,MathLog10
code-creation,Builtin,2,194014,0x7ff6f6be3d54,320,MathLog2
code-creation,Builtin,2,194027,0x7ff6f6be3eb4,320,MathSin
code-creation,Builtin,2,194039,0x7ff6f6be4014,180,MathSign
code-creation,Builtin,2,194052,0x7ff6f6be40d4,320,MathSinh
code-creation,Builtin,2,194064,0x7ff6f6be4234,268,MathSqrt
code-creation,Builtin,2,194077,0x7ff6f6be4354,320,MathTan
code-creation,Builtin,2,194090,0x7ff6f6be44b4,320,MathTanh
code-creation,Builtin,2,194102,0x7ff6f6be4614,1060,MathHypot
code-creation,Builtin,2,194115,0x7ff6f6be4a54,332,MathRandom
code-creation,Builtin,2,194128,0x7ff6f6be4bb4,2956,NumberPrototypeToString
code-creation,Builtin,2,194213,0x7ff6f6be5754,136,NumberIsFinite
code-creation,Builtin,2,194231,0x7ff6f6be57f4,340,NumberIsInteger
code-creation,Builtin,2,194245,0x7ff6f6be5954,116,NumberIsNaN
code-creation,Builtin,2,194258,0x7ff6f6be59d4,372,NumberIsSafeInteger
code-creation,Builtin,2,194271,0x7ff6f6be5b54,156,NumberPrototypeValueOf
code-creation,Builtin,2,194284,0x7ff6f6be5bf4,196,NumberParseFloat
code-creation,Builtin,2,194297,0x7ff6f6be5cd4,248,ParseInt
code-creation,Builtin,2,194309,0x7ff6f6be5dd4,84,NumberParseInt
code-creation,Builtin,2,194322,0x7ff6f6be5e34,860,Add
code-creation,Builtin,2,194334,0x7ff6f6be6194,424,Subtract
code-creation,Builtin,2,194347,0x7ff6f6be6354,608,Multiply
code-creation,Builtin,2,194360,0x7ff6f6be65d4,532,Divide
code-creation,Builtin,2,194372,0x7ff6f6be67f4,592,Modulus
code-creation,Builtin,2,194385,0x7ff6f6be6a54,524,Exponentiate
code-creation,Builtin,2,194397,0x7ff6f6be6c74,344,Negate
code-creation,Builtin,2,194410,0x7ff6f6be6dd4,112,BitwiseNot
code-creation,Builtin,2,194422,0x7ff6f6be6e54,112,Decrement
code-creation,Builtin,2,194435,0x7ff6f6be6ed4,112,Increment
code-creation,Builtin,2,194448,0x7ff6f6be6f54,392,ShiftLeft
code-creation,Builtin,2,194460,0x7ff6f6be70f4,392,ShiftRight
code-creation,Builtin,2,194473,0x7ff6f6be7294,508,ShiftRightLogical
code-creation,Builtin,2,194486,0x7ff6f6be7494,388,BitwiseAnd
code-creation,Builtin,2,194499,0x7ff6f6be7634,388,BitwiseOr
code-creation,Builtin,2,194512,0x7ff6f6be77d4,388,BitwiseXor
code-creation,Builtin,2,194525,0x7ff6f6be7974,796,LessThan
code-creation,Builtin,2,194537,0x7ff6f6be7c94,796,LessThanOrEqual
code-creation,Builtin,2,194550,0x7ff6f6be7fb4,796,GreaterThan
code-creation,Builtin,2,194563,0x7ff6f6be82d4,796,GreaterThanOrEqual
code-creation,Builtin,2,194576,0x7ff6f6be85f4,860,Equal
code-creation,Builtin,2,194588,0x7ff6f6be8954,348,StrictEqual
code-creation,Builtin,2,194601,0x7ff6f6be8ab4,3132,ObjectFromEntries
code-creation,Builtin,2,194614,0x7ff6f6be96f4,756,CreateObjectWithoutProperties
code-creation,Builtin,2,194628,0x7ff6f6be99f4,144,ObjectIsExtensible
code-creation,Builtin,2,194641,0x7ff6f6be9a94,148,ObjectPreventExtensions
code-creation,Builtin,2,194654,0x7ff6f6be9b34,144,ObjectGetPrototypeOf
code-creation,Builtin,2,194667,0x7ff6f6be9bd4,300,ObjectSetPrototypeOf
code-creation,Builtin,2,194680,0x7ff6f6be9d14,80,ObjectPrototypeToString
code-creation,Builtin,2,194693,0x7ff6f6be9d74,96,ObjectPrototypeValueOf
code-creation,Builtin,2,194706,0x7ff6f6be9df4,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,194720,0x7ff6f6be9eb4,868,FulfillPromise
code-creation,Builtin,2,194732,0x7ff6f6bea234,988,RejectPromise
code-creation,Builtin,2,194745,0x7ff6f6bea614,2416,NewPromiseCapability
code-creation,Builtin,2,194758,0x7ff6f6beaf94,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,194771,0x7ff6f6beb054,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,194785,0x7ff6f6beb0f4,1416,PerformPromiseThen
code-creation,Builtin,2,194798,0x7ff6f6beb694,648,PromiseReject
code-creation,Builtin,2,194810,0x7ff6f6beb934,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,194824,0x7ff6f6beba54,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,194837,0x7ff6f6bebad4,4560,PromiseAll
code-creation,Builtin,2,194850,0x7ff6f6beccb4,4880,PromiseAllSettled
code-creation,Builtin,2,194863,0x7ff6f6bedfd4,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,194876,0x7ff6f6bee434,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,194890,0x7ff6f6bee9b4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,194903,0x7ff6f6beef34,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,194917,0x7ff6f6bef3d4,2368,PromiseAny
code-creation,Builtin,2,194929,0x7ff6f6befd34,2908,PromiseConstructor
code-creation,Builtin,2,194942,0x7ff6f6bf0894,296,PromisePrototypeCatch
code-creation,Builtin,2,194955,0x7ff6f6bf09d4,88,PromiseValueThunkFinally
code-creation,Builtin,2,194968,0x7ff6f6bf0a34,84,PromiseThrowerFinally
code-creation,Builtin,2,194981,0x7ff6f6bf0a94,904,PromiseCatchFinally
code-creation,Builtin,2,195035,0x7ff6f6bf0e34,904,PromiseThenFinally
code-creation,Builtin,2,195052,0x7ff6f6bf11d4,1700,PromisePrototypeFinally
code-creation,Builtin,2,195065,0x7ff6f6bf1894,1336,PromiseRace
code-creation,Builtin,2,195078,0x7ff6f6bf1dd4,268,PromiseFulfillReactionJob
code-creation,Builtin,2,195091,0x7ff6f6bf1ef4,364,PromiseRejectReactionJob
code-creation,Builtin,2,195104,0x7ff6f6bf2074,156,PromiseResolveTrampoline
code-creation,Builtin,2,195117,0x7ff6f6bf2114,656,PromiseResolve
code-creation,Builtin,2,195130,0x7ff6f6bf23b4,712,ResolvePromise
code-creation,Builtin,2,195143,0x7ff6f6bf2694,2224,PromisePrototypeThen
code-creation,Builtin,2,195156,0x7ff6f6bf2f54,1144,PromiseResolveThenableJob
code-creation,Builtin,2,195169,0x7ff6f6bf33d4,448,ProxyConstructor
code-creation,Builtin,2,195182,0x7ff6f6bf35b4,1760,ProxyDeleteProperty
code-creation,Builtin,2,195196,0x7ff6f6bf3cb4,2112,ProxyGetProperty
code-creation,Builtin,2,195209,0x7ff6f6bf4514,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,195222,0x7ff6f6bf4954,1668,ProxyHasProperty
code-creation,Builtin,2,195235,0x7ff6f6bf4ff4,760,ProxyIsExtensible
code-creation,Builtin,2,195247,0x7ff6f6bf52f4,800,ProxyPreventExtensions
code-creation,Builtin,2,195261,0x7ff6f6bf5634,1148,ProxyRevocable
code-creation,Builtin,2,195273,0x7ff6f6bf5ab4,120,ProxyRevoke
code-creation,Builtin,2,195286,0x7ff6f6bf5b34,2216,ProxySetProperty
code-creation,Builtin,2,195299,0x7ff6f6bf63f4,1292,ProxySetPrototypeOf
code-creation,Builtin,2,195313,0x7ff6f6bf6914,208,ReflectIsExtensible
code-creation,Builtin,2,195326,0x7ff6f6bf69f4,212,ReflectPreventExtensions
code-creation,Builtin,2,195339,0x7ff6f6bf6ad4,188,ReflectGetPrototypeOf
code-creation,Builtin,2,195352,0x7ff6f6bf6b94,292,ReflectSetPrototypeOf
code-creation,Builtin,2,195365,0x7ff6f6bf6cd4,284,ReflectGet
code-creation,Builtin,2,195377,0x7ff6f6bf6df4,160,ReflectDeleteProperty
code-creation,Builtin,2,195390,0x7ff6f6bf6eb4,148,ReflectHas
code-creation,Builtin,2,195403,0x7ff6f6bf6f54,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,195416,0x7ff6f6bf8374,5104,RegExpPrototypeExec
code-creation,Builtin,2,195429,0x7ff6f6bf9774,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,195442,0x7ff6f6bfa0b4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,195455,0x7ff6f6bfc594,8840,RegExpMatchFast
code-creation,Builtin,2,195468,0x7ff6f6bfe834,3600,RegExpPrototypeMatch
code-creation,Builtin,2,195481,0x7ff6f6bff654,6328,RegExpReplace
code-creation,Builtin,2,195494,0x7ff6f6c00f14,524,RegExpPrototypeReplace
code-creation,Builtin,2,195507,0x7ff6f6c01134,1424,RegExpSearchFast
code-creation,Builtin,2,195520,0x7ff6f6c016d4,1640,RegExpPrototypeSearch
code-creation,Builtin,2,195533,0x7ff6f6c01d54,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,195546,0x7ff6f6c01e34,5872,RegExpSplit
code-creation,Builtin,2,195559,0x7ff6f6c03534,476,RegExpPrototypeSplit
code-creation,Builtin,2,195572,0x7ff6f6c03714,2252,RegExpPrototypeTest
code-creation,Builtin,2,195585,0x7ff6f6c03ff4,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,195598,0x7ff6f6c04554,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,195611,0x7ff6f6c04654,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,195624,0x7ff6f6c04754,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,195638,0x7ff6f6c04854,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,195651,0x7ff6f6c04954,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,195664,0x7ff6f6c04a54,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,195677,0x7ff6f6c04b54,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,195691,0x7ff6f6c04c74,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,195704,0x7ff6f6c04d94,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,195717,0x7ff6f6c05674,1500,StringPrototypeAt
code-creation,Builtin,2,195730,0x7ff6f6c05c54,3008,StringPrototypeEndsWith
code-creation,Builtin,2,195743,0x7ff6f6c06834,480,CreateHTML
code-creation,Builtin,2,195756,0x7ff6f6c06a34,164,StringPrototypeAnchor
code-creation,Builtin,2,195769,0x7ff6f6c06af4,128,StringPrototypeBig
code-creation,Builtin,2,195782,0x7ff6f6c06b94,128,StringPrototypeBlink
code-creation,Builtin,2,195836,0x7ff6f6c06c34,128,StringPrototypeBold
code-creation,Builtin,2,195854,0x7ff6f6c06cd4,168,StringPrototypeFontcolor
code-creation,Builtin,2,195868,0x7ff6f6c06d94,168,StringPrototypeFontsize
code-creation,Builtin,2,195881,0x7ff6f6c06e54,128,StringPrototypeFixed
code-creation,Builtin,2,195894,0x7ff6f6c06ef4,128,StringPrototypeItalics
code-creation,Builtin,2,195907,0x7ff6f6c06f94,168,StringPrototypeLink
code-creation,Builtin,2,195920,0x7ff6f6c07054,128,StringPrototypeSmall
code-creation,Builtin,2,195933,0x7ff6f6c070f4,128,StringPrototypeStrike
code-creation,Builtin,2,195946,0x7ff6f6c07194,128,StringPrototypeSub
code-creation,Builtin,2,195959,0x7ff6f6c07234,128,StringPrototypeSup
code-creation,Builtin,2,195971,0x7ff6f6c072d4,1028,StringPrototypeIncludes
code-creation,Builtin,2,195984,0x7ff6f6c076f4,628,StringPrototypeIndexOf
code-creation,Builtin,2,195998,0x7ff6f6c07974,344,StringPrototypeIterator
code-creation,Builtin,2,196010,0x7ff6f6c07ad4,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,196023,0x7ff6f6c082d4,1304,StringPrototypeMatch
code-creation,Builtin,2,196036,0x7ff6f6c087f4,1304,StringPrototypeSearch
code-creation,Builtin,2,196049,0x7ff6f6c08d14,824,StringPrototypePadStart
code-creation,Builtin,2,196062,0x7ff6f6c09054,824,StringPrototypePadEnd
code-creation,Builtin,2,196075,0x7ff6f6c09394,120,StringRepeat
code-creation,Builtin,2,196088,0x7ff6f6c09414,400,StringPrototypeRepeat
code-creation,Builtin,2,196101,0x7ff6f6c095b4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,196114,0x7ff6f6c0c174,3388,StringPrototypeSlice
code-creation,Builtin,2,196127,0x7ff6f6c0ceb4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,196140,0x7ff6f6c0da94,3328,StringPrototypeSubstr
code-creation,Builtin,2,196153,0x7ff6f6c0e7b4,3260,StringPrototypeSubstring
code-creation,Builtin,2,196166,0x7ff6f6c0f474,6916,StringPrototypeTrim
code-creation,Builtin,2,196179,0x7ff6f6c10f94,6332,StringPrototypeTrimStart
code-creation,Builtin,2,196194,0x7ff6f6c12854,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,196207,0x7ff6f6c13f34,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,196220,0x7ff6f6c13ff4,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,196233,0x7ff6f6c14094,172,SymbolPrototypeToString
code-creation,Builtin,2,196246,0x7ff6f6c14154,156,SymbolPrototypeValueOf
code-creation,Builtin,2,196259,0x7ff6f6c141f4,832,TypedArrayPrototypeAt
code-creation,Builtin,2,196272,0x7ff6f6c14554,10064,CreateTypedArray
code-creation,Builtin,2,196285,0x7ff6f6c16cb4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,196298,0x7ff6f6c170b4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,196311,0x7ff6f6c17234,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,196324,0x7ff6f6c17ff4,996,TypedArrayPrototypeFind
code-creation,Builtin,2,196338,0x7ff6f6c183f4,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,196351,0x7ff6f6c187f4,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,196364,0x7ff6f6c189b4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,196378,0x7ff6f6c18e74,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,196391,0x7ff6f6c19034,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,196404,0x7ff6f6c19514,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,196418,0x7ff6f6c19894,2352,TypedArrayFrom
code-creation,Builtin,2,196430,0x7ff6f6c1a1d4,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,196443,0x7ff6f6c1a354,1028,TypedArrayOf
code-creation,Builtin,2,196456,0x7ff6f6c1a774,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,196469,0x7ff6f6c1ab34,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,196483,0x7ff6f6c1aef4,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,196496,0x7ff6f6c1b8d4,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,196510,0x7ff6f6c1c4d4,992,TypedArrayPrototypeSome
code-creation,Builtin,2,196523,0x7ff6f6c1c8d4,1060,TypedArrayMergeSort
code-creation,Builtin,2,196536,0x7ff6f6c1cd14,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,196549,0x7ff6f6c1d374,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,196601,0x7ff6f6c1de34,372,TypedArrayPrototypeValues
code-creation,Builtin,2,196618,0x7ff6f6c1dfb4,952,WeakRefConstructor
code-creation,Builtin,2,196632,0x7ff6f6c1e374,184,WeakRefDeref
code-creation,Builtin,2,196645,0x7ff6f6c1e434,680,NewSloppyArgumentsElements
code-creation,Builtin,2,196658,0x7ff6f6c1e6f4,296,NewStrictArgumentsElements
code-creation,Builtin,2,196671,0x7ff6f6c1e834,320,NewRestArgumentsElements
code-creation,Builtin,2,196687,0x7ff6f6c1e994,1388,FastNewSloppyArguments
code-creation,Builtin,2,196700,0x7ff6f6c1ef14,524,FastNewStrictArguments
code-creation,Builtin,2,196714,0x7ff6f6c1f134,556,FastNewRestArguments
code-creation,Builtin,2,196727,0x7ff6f6c1f374,676,StringSlowFlatten
code-creation,Builtin,2,196739,0x7ff6f6c1f634,2068,StringIndexOf
code-creation,Builtin,2,196752,0x7ff6f6c1fe54,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,196765,0x7ff6f6c1fe74,20,TestHelperPlus1
code-creation,Builtin,2,196778,0x7ff6f6c1fe94,20,TestHelperPlus2
code-creation,Builtin,2,196791,0x7ff6f6c1feb4,96,NewSmiBox
code-creation,Builtin,2,196803,0x7ff6f6c1ff34,24,ReturnTwoValues
code-creation,Builtin,2,196816,0x7ff6f6c1ff54,32,Load_FastSmiElements_0
code-creation,Builtin,2,196829,0x7ff6f6c1ff94,32,Load_FastObjectElements_0
code-creation,Builtin,2,196841,0x7ff6f6c1ffd4,144,Load_FastDoubleElements_0
code-creation,Builtin,2,196854,0x7ff6f6c20074,32,Store_FastSmiElements_0
code-creation,Builtin,2,196867,0x7ff6f6c200b4,96,Store_FastObjectElements_0
code-creation,Builtin,2,196880,0x7ff6f6c20134,48,Store_FastDoubleElements_0
code-creation,Builtin,2,196893,0x7ff6f6c20174,36,Delete_FastSmiElements_0
code-creation,Builtin,2,196906,0x7ff6f6c201b4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,196919,0x7ff6f6c201f4,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,196932,0x7ff6f6c20234,308,SortCompareDefault
code-creation,Builtin,2,196945,0x7ff6f6c20374,92,SortCompareUserFn
code-creation,Builtin,2,196958,0x7ff6f6c203d4,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,196971,0x7ff6f6c203f4,312,Copy
code-creation,Builtin,2,196984,0x7ff6f6c20534,5776,MergeAt
code-creation,Builtin,2,196996,0x7ff6f6c21bd4,792,GallopLeft
code-creation,Builtin,2,197009,0x7ff6f6c21ef4,832,GallopRight
code-creation,Builtin,2,197021,0x7ff6f6c22254,3832,ArrayTimSort
code-creation,Builtin,2,197034,0x7ff6f6c23154,2112,ArrayPrototypeSort
code-creation,Builtin,2,197046,0x7ff6f6c239b4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,197059,0x7ff6f6c23a34,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,197072,0x7ff6f6c23ab4,76,WasmTaggedToFloat64
code-creation,Builtin,2,197085,0x7ff6f6c23b14,72,WasmMemoryGrow
code-creation,Builtin,2,197098,0x7ff6f6c23b74,100,WasmTableInit
code-creation,Builtin,2,197110,0x7ff6f6c23bf4,100,WasmTableCopy
code-creation,Builtin,2,197123,0x7ff6f6c23c74,84,WasmTableFill
code-creation,Builtin,2,197135,0x7ff6f6c23cd4,72,WasmTableGrow
code-creation,Builtin,2,197148,0x7ff6f6c23d34,144,WasmTableGet
code-creation,Builtin,2,197160,0x7ff6f6c23dd4,236,WasmTableSet
code-creation,Builtin,2,197173,0x7ff6f6c23ed4,88,WasmRefFunc
code-creation,Builtin,2,197187,0x7ff6f6c23f34,144,WasmAllocateFixedArray
code-creation,Builtin,2,197200,0x7ff6f6c23fd4,44,WasmThrow
code-creation,Builtin,2,197212,0x7ff6f6c24014,52,WasmRethrow
code-creation,Builtin,2,197225,0x7ff6f6c24054,44,WasmTriggerTierUp
code-creation,Builtin,2,197238,0x7ff6f6c24094,32,WasmStackGuard
code-creation,Builtin,2,197250,0x7ff6f6c240d4,32,WasmStackOverflow
code-creation,Builtin,2,197263,0x7ff6f6c24114,40,WasmTraceMemory
code-creation,Builtin,2,197276,0x7ff6f6c24154,32,WasmTraceEnter
code-creation,Builtin,2,197288,0x7ff6f6c24194,40,WasmTraceExit
code-creation,Builtin,2,197301,0x7ff6f6c241d4,332,WasmAllocateJSArray
code-creation,Builtin,2,197313,0x7ff6f6c24334,104,WasmAllocatePair
code-creation,Builtin,2,197326,0x7ff6f6c243b4,64,WasmAllocateRtt
code-creation,Builtin,2,197339,0x7ff6f6c24414,72,WasmAllocateFreshRtt
code-creation,Builtin,2,197352,0x7ff6f6c24474,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,197413,0x7ff6f6c244f4,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,197431,0x7ff6f6c24594,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,197444,0x7ff6f6c24654,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,197457,0x7ff6f6c24714,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,197470,0x7ff6f6c24794,60,WasmArrayCopy
code-creation,Builtin,2,197483,0x7ff6f6c247d4,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,197497,0x7ff6f6c248d4,52,WasmSubtypeCheck
code-creation,Builtin,2,197509,0x7ff6f6c24914,8,WasmInt32ToNumber
code-creation,Builtin,2,197522,0x7ff6f6c24934,116,WasmUint32ToNumber
code-creation,Builtin,2,197535,0x7ff6f6c249b4,144,UintPtr53ToNumber
code-creation,Builtin,2,197548,0x7ff6f6c24a54,96,WasmAtomicNotify
code-creation,Builtin,2,197561,0x7ff6f6c24ad4,116,WasmI32AtomicWait64
code-creation,Builtin,2,197574,0x7ff6f6c24b54,116,WasmI64AtomicWait64
code-creation,Builtin,2,197587,0x7ff6f6c24bd4,580,WasmGetOwnProperty
code-creation,Builtin,2,197600,0x7ff6f6c24e34,40,WasmTrap
code-creation,Builtin,2,197612,0x7ff6f6c24e74,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,197625,0x7ff6f6c24e94,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,197638,0x7ff6f6c24eb4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,197651,0x7ff6f6c24ed4,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,197664,0x7ff6f6c24ef4,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,197678,0x7ff6f6c24f14,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,197691,0x7ff6f6c24f34,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,197704,0x7ff6f6c24f54,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,197717,0x7ff6f6c24f74,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,197730,0x7ff6f6c24f94,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,197743,0x7ff6f6c24fb4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,197757,0x7ff6f6c24fd4,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,197770,0x7ff6f6c24ff4,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,197783,0x7ff6f6c25014,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,197796,0x7ff6f6c25034,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,197809,0x7ff6f6c25054,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,197822,0x7ff6f6c25074,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,197836,0x7ff6f6c25134,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,197850,0x7ff6f6c25154,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,197863,0x7ff6f6c251d4,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,197877,0x7ff6f6c25254,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,197890,0x7ff6f6c25274,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,197904,0x7ff6f6c25354,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,197917,0x7ff6f6c25454,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,197931,0x7ff6f6c25474,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,197944,0x7ff6f6c25494,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,197957,0x7ff6f6c254b4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,197971,0x7ff6f6c254d4,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,197984,0x7ff6f6c25574,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,197997,0x7ff6f6c25594,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,198011,0x7ff6f6c255d4,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,198024,0x7ff6f6c25614,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,198037,0x7ff6f6c25654,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,198051,0x7ff6f6c260d4,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,198064,0x7ff6f6c260f4,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,198077,0x7ff6f6c26134,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,198090,0x7ff6f6c26154,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,198106,0x7ff6f6c26214,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,198121,0x7ff6f6c262d4,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,198135,0x7ff6f6c26354,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,198148,0x7ff6f6c26394,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,198162,0x7ff6f6c26434,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,198175,0x7ff6f6c264b4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,198190,0x7ff6f6c264d4,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,198204,0x7ff6f6c26574,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,198217,0x7ff6f6c26594,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,198231,0x7ff6f6c265b4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,198244,0x7ff6f6c26834,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,198258,0x7ff6f6c26914,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,198271,0x7ff6f6c26954,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,198285,0x7ff6f6c26a34,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,198298,0x7ff6f6c26b34,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,198312,0x7ff6f6c26b74,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,198325,0x7ff6f6c26c54,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,198338,0x7ff6f6c26c74,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,198352,0x7ff6f6c26c94,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,198365,0x7ff6f6c26d54,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,198378,0x7ff6f6c26d74,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,198392,0x7ff6f6c26d94,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,198405,0x7ff6f6c26e54,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,198418,0x7ff6f6c26e74,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,198432,0x7ff6f6c26e94,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,198445,0x7ff6f6c26f54,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,198458,0x7ff6f6c26f74,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,198472,0x7ff6f6c26f94,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,198485,0x7ff6f6c27054,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,198499,0x7ff6f6c270f4,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,198513,0x7ff6f6c271b4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,198526,0x7ff6f6c27274,12,CollatorConstructor
code-creation,Builtin,2,198539,0x7ff6f6c27294,12,CollatorInternalCompare
code-creation,Builtin,2,198552,0x7ff6f6c272b4,12,CollatorPrototypeCompare
code-creation,Builtin,2,198565,0x7ff6f6c272d4,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,198578,0x7ff6f6c272f4,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,198591,0x7ff6f6c27314,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,198604,0x7ff6f6c27334,12,DatePrototypeToLocaleString
code-creation,Builtin,2,198617,0x7ff6f6c27354,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,198631,0x7ff6f6c27374,12,DateTimeFormatConstructor
code-creation,Builtin,2,198644,0x7ff6f6c27394,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,198657,0x7ff6f6c273b4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,198670,0x7ff6f6c273d4,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,198684,0x7ff6f6c273f4,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,198698,0x7ff6f6c27414,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,198711,0x7ff6f6c27434,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,198724,0x7ff6f6c27454,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,198737,0x7ff6f6c27474,12,DisplayNamesConstructor
code-creation,Builtin,2,198752,0x7ff6f6c27494,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,198767,0x7ff6f6c274b4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,198781,0x7ff6f6c274d4,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,198794,0x7ff6f6c274f4,12,IntlGetCanonicalLocales
code-creation,Builtin,2,198807,0x7ff6f6c27514,12,ListFormatConstructor
code-creation,Builtin,2,198820,0x7ff6f6c27534,224,ListFormatPrototypeFormat
code-creation,Builtin,2,198833,0x7ff6f6c27634,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,198846,0x7ff6f6c27734,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,198860,0x7ff6f6c27754,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,198873,0x7ff6f6c27774,12,LocaleConstructor
code-creation,Builtin,2,198885,0x7ff6f6c27794,12,LocalePrototypeBaseName
code-creation,Builtin,2,198898,0x7ff6f6c277b4,12,LocalePrototypeCalendar
code-creation,Builtin,2,198911,0x7ff6f6c277d4,12,LocalePrototypeCalendars
code-creation,Builtin,2,198924,0x7ff6f6c277f4,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,198937,0x7ff6f6c27814,12,LocalePrototypeCollation
code-creation,Builtin,2,198951,0x7ff6f6c27834,12,LocalePrototypeCollations
code-creation,Builtin,2,198964,0x7ff6f6c27854,12,LocalePrototypeHourCycle
code-creation,Builtin,2,198977,0x7ff6f6c27874,12,LocalePrototypeHourCycles
code-creation,Builtin,2,198990,0x7ff6f6c27894,12,LocalePrototypeLanguage
code-creation,Builtin,2,199003,0x7ff6f6c278b4,12,LocalePrototypeMaximize
code-creation,Builtin,2,199016,0x7ff6f6c278d4,12,LocalePrototypeMinimize
code-creation,Builtin,2,199028,0x7ff6f6c278f4,12,LocalePrototypeNumeric
code-creation,Builtin,2,199041,0x7ff6f6c27914,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,199055,0x7ff6f6c27934,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,199068,0x7ff6f6c27954,12,LocalePrototypeRegion
code-creation,Builtin,2,199081,0x7ff6f6c27974,12,LocalePrototypeScript
code-creation,Builtin,2,199094,0x7ff6f6c27994,12,LocalePrototypeTextInfo
code-creation,Builtin,2,199106,0x7ff6f6c279b4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,199119,0x7ff6f6c279d4,12,LocalePrototypeToString
code-creation,Builtin,2,199132,0x7ff6f6c279f4,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,199145,0x7ff6f6c27a14,12,NumberFormatConstructor
code-creation,Builtin,2,199158,0x7ff6f6c27a34,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,199171,0x7ff6f6c27a54,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,199186,0x7ff6f6c27a74,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,199199,0x7ff6f6c27a94,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,199213,0x7ff6f6c27ab4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,199226,0x7ff6f6c27ad4,12,PluralRulesConstructor
code-creation,Builtin,2,199239,0x7ff6f6c27af4,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,199252,0x7ff6f6c27b14,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,199265,0x7ff6f6c27b34,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,199278,0x7ff6f6c27b54,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,199291,0x7ff6f6c27b74,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,199305,0x7ff6f6c27b94,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,199318,0x7ff6f6c27bb4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,199332,0x7ff6f6c27bd4,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,199345,0x7ff6f6c27bf4,12,SegmenterConstructor
code-creation,Builtin,2,199358,0x7ff6f6c27c14,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,199371,0x7ff6f6c27c34,12,SegmenterPrototypeSegment
code-creation,Builtin,2,199384,0x7ff6f6c27c54,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,199397,0x7ff6f6c27c74,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,199411,0x7ff6f6c27c94,12,SegmentsPrototypeContaining
code-creation,Builtin,2,199424,0x7ff6f6c27cb4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,199437,0x7ff6f6c27cd4,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,199452,0x7ff6f6c27cf4,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,199467,0x7ff6f6c27d14,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,199480,0x7ff6f6c27d34,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,199494,0x7ff6f6c27e14,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,199507,0x7ff6f6c27e34,636,StringToLowerCaseIntl
code-creation,Builtin,2,199521,0x7ff6f6c280b4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,199534,0x7ff6f6c280d4,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,199547,0x7ff6f6c280f4,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,199560,0x7ff6f6c28114,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,199574,0x7ff6f6c28134,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,199587,0x7ff6f6c28154,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,199600,0x7ff6f6c28174,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,199613,0x7ff6f6c28194,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,199627,0x7ff6f6c281b4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,199640,0x7ff6f6c281d4,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,199653,0x7ff6f6c281f4,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,199666,0x7ff6f6c28214,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,199680,0x7ff6f6c28234,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,199694,0x7ff6f6c28254,24,Wide
code-creation,BytecodeHandler,0,199707,0x7ff6f6c28274,24,ExtraWide
code-creation,BytecodeHandler,0,199720,0x7ff6f6c28294,104,DebugBreakWide
code-creation,BytecodeHandler,0,199733,0x7ff6f6c28314,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,199747,0x7ff6f6c28394,164,DebugBreak0
code-creation,BytecodeHandler,0,199760,0x7ff6f6c28454,104,DebugBreak1
code-creation,BytecodeHandler,0,199773,0x7ff6f6c284d4,104,DebugBreak2
code-creation,BytecodeHandler,0,199786,0x7ff6f6c28554,104,DebugBreak3
code-creation,BytecodeHandler,0,199799,0x7ff6f6c285d4,104,DebugBreak4
code-creation,BytecodeHandler,0,199811,0x7ff6f6c28654,104,DebugBreak5
code-creation,BytecodeHandler,0,199824,0x7ff6f6c286d4,104,DebugBreak6
code-creation,BytecodeHandler,0,199837,0x7ff6f6c28754,32,Ldar
code-creation,BytecodeHandler,0,199850,0x7ff6f6c28794,68,LdaZero
code-creation,BytecodeHandler,0,199863,0x7ff6f6c287f4,76,LdaSmi
code-creation,BytecodeHandler,0,199876,0x7ff6f6c28854,68,LdaUndefined
code-creation,BytecodeHandler,0,199889,0x7ff6f6c288b4,68,LdaNull
code-creation,BytecodeHandler,0,199902,0x7ff6f6c28914,68,LdaTheHole
code-creation,BytecodeHandler,0,199915,0x7ff6f6c28974,20,LdaTrue
code-creation,BytecodeHandler,0,199928,0x7ff6f6c28994,20,LdaFalse
code-creation,BytecodeHandler,0,199941,0x7ff6f6c289b4,76,LdaConstant
code-creation,BytecodeHandler,0,199954,0x7ff6f6c28a14,132,LdaContextSlot
code-creation,BytecodeHandler,0,199967,0x7ff6f6c28ab4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,199980,0x7ff6f6c28b54,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,199994,0x7ff6f6c28bb4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,200007,0x7ff6f6c28c14,32,Star
code-creation,BytecodeHandler,0,200020,0x7ff6f6c28c54,40,Mov
code-creation,BytecodeHandler,0,200033,0x7ff6f6c28c94,40,PushContext
code-creation,BytecodeHandler,0,200046,0x7ff6f6c28cd4,36,PopContext
code-creation,BytecodeHandler,0,200059,0x7ff6f6c28d14,48,TestReferenceEqual
code-creation,BytecodeHandler,0,200072,0x7ff6f6c28d54,52,TestUndetectable
code-creation,BytecodeHandler,0,200085,0x7ff6f6c28d94,36,TestNull
code-creation,BytecodeHandler,0,200098,0x7ff6f6c28dd4,36,TestUndefined
code-creation,BytecodeHandler,0,200111,0x7ff6f6c28e14,336,TestTypeOf
code-creation,BytecodeHandler,0,200123,0x7ff6f6c28f74,6036,LdaGlobal
code-creation,BytecodeHandler,0,200137,0x7ff6f6c2a714,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,200150,0x7ff6f6c2b8d4,168,StaGlobal
code-creation,BytecodeHandler,0,200163,0x7ff6f6c2b994,160,StaContextSlot
code-creation,BytecodeHandler,0,200176,0x7ff6f6c2ba54,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,200192,0x7ff6f6c2bad4,124,LdaLookupSlot
code-creation,BytecodeHandler,0,200207,0x7ff6f6c2bb54,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,200220,0x7ff6f6c2bc54,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,200234,0x7ff6f6c2cf14,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,200248,0x7ff6f6c2cf94,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,200262,0x7ff6f6c2d094,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,200275,0x7ff6f6c2e334,220,StaLookupSlot
code-creation,BytecodeHandler,0,200288,0x7ff6f6c2e414,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,200302,0x7ff6f6c2f894,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,200315,0x7ff6f6c2f954,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,200328,0x7ff6f6c2fa34,160,LdaModuleVariable
code-creation,BytecodeHandler,0,200341,0x7ff6f6c2faf4,292,StaModuleVariable
code-creation,BytecodeHandler,0,200355,0x7ff6f6c2fc34,172,StaNamedProperty
code-creation,BytecodeHandler,0,200368,0x7ff6f6c2fcf4,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,200381,0x7ff6f6c2fdb4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,200394,0x7ff6f6c2fe74,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,200407,0x7ff6f6c2ff34,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,200421,0x7ff6f6c30014,160,CollectTypeProfile
code-creation,BytecodeHandler,0,200434,0x7ff6f6c300d4,1028,Add
code-creation,BytecodeHandler,0,200447,0x7ff6f6c304f4,1064,Sub
code-creation,BytecodeHandler,0,200459,0x7ff6f6c30934,1024,Mul
code-creation,BytecodeHandler,0,200472,0x7ff6f6c30d54,988,Div
code-creation,BytecodeHandler,0,200485,0x7ff6f6c31134,912,Mod
code-creation,BytecodeHandler,0,200498,0x7ff6f6c314d4,964,Exp
code-creation,BytecodeHandler,0,200511,0x7ff6f6c318b4,876,BitwiseOr
code-creation,BytecodeHandler,0,200524,0x7ff6f6c31c34,888,BitwiseXor
code-creation,BytecodeHandler,0,200537,0x7ff6f6c31fb4,888,BitwiseAnd
code-creation,BytecodeHandler,0,200550,0x7ff6f6c32334,900,ShiftLeft
code-creation,BytecodeHandler,0,200563,0x7ff6f6c326d4,900,ShiftRight
code-creation,BytecodeHandler,0,200576,0x7ff6f6c32a74,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,200589,0x7ff6f6c32e74,960,AddSmi
code-creation,BytecodeHandler,0,200602,0x7ff6f6c33254,1000,SubSmi
code-creation,BytecodeHandler,0,200614,0x7ff6f6c33654,916,MulSmi
code-creation,BytecodeHandler,0,200627,0x7ff6f6c339f4,920,DivSmi
code-creation,BytecodeHandler,0,200640,0x7ff6f6c33d94,816,ModSmi
code-creation,BytecodeHandler,0,200653,0x7ff6f6c340d4,872,ExpSmi
code-creation,BytecodeHandler,0,200666,0x7ff6f6c34454,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,200679,0x7ff6f6c34654,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,200692,0x7ff6f6c34854,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,200705,0x7ff6f6c34a54,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,200718,0x7ff6f6c34c54,488,ShiftRightSmi
code-creation,BytecodeHandler,0,200731,0x7ff6f6c34e54,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,200744,0x7ff6f6c350f4,656,Inc
code-creation,BytecodeHandler,0,200757,0x7ff6f6c35394,656,Dec
code-creation,BytecodeHandler,0,200770,0x7ff6f6c35634,640,Negate
code-creation,BytecodeHandler,0,200783,0x7ff6f6c358d4,480,BitwiseNot
code-creation,BytecodeHandler,0,200796,0x7ff6f6c35ad4,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,200809,0x7ff6f6c35b54,36,LogicalNot
code-creation,BytecodeHandler,0,200822,0x7ff6f6c35b94,208,TypeOf
code-creation,BytecodeHandler,0,200835,0x7ff6f6c35c74,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,200848,0x7ff6f6c35cf4,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,200861,0x7ff6f6c35d74,40,GetSuperConstructor
code-creation,BytecodeHandler,0,200874,0x7ff6f6c35db4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,200888,0x7ff6f6c36234,1132,CallProperty
code-creation,BytecodeHandler,0,200900,0x7ff6f6c366b4,1012,CallProperty0
code-creation,BytecodeHandler,0,200913,0x7ff6f6c36ab4,1028,CallProperty1
code-creation,BytecodeHandler,0,200929,0x7ff6f6c36ed4,1040,CallProperty2
code-creation,BytecodeHandler,0,200943,0x7ff6f6c372f4,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,200957,0x7ff6f6c376f4,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,200970,0x7ff6f6c37b14,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,200983,0x7ff6f6c37f14,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,200997,0x7ff6f6c38334,1132,CallWithSpread
code-creation,BytecodeHandler,0,201010,0x7ff6f6c387b4,124,CallRuntime
code-creation,BytecodeHandler,0,201023,0x7ff6f6c38834,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,201036,0x7ff6f6c388d4,80,CallJSRuntime
code-creation,BytecodeHandler,0,201049,0x7ff6f6c38934,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,201062,0x7ff6f6c38e14,1020,Construct
code-creation,BytecodeHandler,0,201075,0x7ff6f6c39214,536,ConstructWithSpread
code-creation,BytecodeHandler,0,201088,0x7ff6f6c39434,1936,TestEqual
code-creation,BytecodeHandler,0,201101,0x7ff6f6c39bd4,1064,TestEqualStrict
code-creation,BytecodeHandler,0,201114,0x7ff6f6c3a014,1624,TestLessThan
code-creation,BytecodeHandler,0,201127,0x7ff6f6c3a674,1624,TestGreaterThan
code-creation,BytecodeHandler,0,201140,0x7ff6f6c3acd4,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,201153,0x7ff6f6c3b334,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,201167,0x7ff6f6c3b994,860,TestInstanceOf
code-creation,BytecodeHandler,0,201180,0x7ff6f6c3bcf4,156,TestIn
code-creation,BytecodeHandler,0,201194,0x7ff6f6c3bd94,112,ToName
code-creation,BytecodeHandler,0,201206,0x7ff6f6c3be14,212,ToNumber
code-creation,BytecodeHandler,0,201219,0x7ff6f6c3bef4,232,ToNumeric
code-creation,BytecodeHandler,0,201232,0x7ff6f6c3bff4,112,ToObject
code-creation,BytecodeHandler,0,201245,0x7ff6f6c3c074,116,ToString
code-creation,BytecodeHandler,0,201258,0x7ff6f6c3c0f4,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,201271,0x7ff6f6c3c294,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,201284,0x7ff6f6c3c854,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,201298,0x7ff6f6c3c8b4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,201311,0x7ff6f6c3cbd4,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,201324,0x7ff6f6c3d434,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,201338,0x7ff6f6c3d534,168,CloneObject
code-creation,BytecodeHandler,0,201351,0x7ff6f6c3d5f4,212,GetTemplateObject
code-creation,BytecodeHandler,0,201364,0x7ff6f6c3d6d4,328,CreateClosure
code-creation,BytecodeHandler,0,201377,0x7ff6f6c3d834,120,CreateBlockContext
code-creation,BytecodeHandler,0,201390,0x7ff6f6c3d8b4,132,CreateCatchContext
code-creation,BytecodeHandler,0,201403,0x7ff6f6c3d954,256,CreateFunctionContext
code-creation,BytecodeHandler,0,201417,0x7ff6f6c3da74,256,CreateEvalContext
code-creation,BytecodeHandler,0,201430,0x7ff6f6c3db94,132,CreateWithContext
code-creation,BytecodeHandler,0,201445,0x7ff6f6c3dc34,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,201458,0x7ff6f6c3e274,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,201472,0x7ff6f6c3e4d4,632,CreateRestParameter
code-creation,BytecodeHandler,0,201485,0x7ff6f6c3e754,424,JumpLoop
code-creation,BytecodeHandler,0,201498,0x7ff6f6c3e914,44,Jump
code-creation,BytecodeHandler,0,201511,0x7ff6f6c3e954,56,JumpConstant
code-creation,BytecodeHandler,0,201524,0x7ff6f6c3e994,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,201537,0x7ff6f6c3e9f4,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,201551,0x7ff6f6c3ea54,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,201564,0x7ff6f6c3eab4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,201577,0x7ff6f6c3eb14,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,201591,0x7ff6f6c3eb74,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,201604,0x7ff6f6c3ebd4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,201617,0x7ff6f6c3ec34,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,201631,0x7ff6f6c3ec94,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,201646,0x7ff6f6c3ed34,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,201663,0x7ff6f6c3edd4,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,201676,0x7ff6f6c3ee74,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,201690,0x7ff6f6c3ef14,64,JumpIfTrue
code-creation,BytecodeHandler,0,201703,0x7ff6f6c3ef74,64,JumpIfFalse
code-creation,BytecodeHandler,0,201716,0x7ff6f6c3efd4,64,JumpIfNull
code-creation,BytecodeHandler,0,201729,0x7ff6f6c3f034,64,JumpIfNotNull
code-creation,BytecodeHandler,0,201742,0x7ff6f6c3f094,64,JumpIfUndefined
code-creation,BytecodeHandler,0,201756,0x7ff6f6c3f0f4,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,201769,0x7ff6f6c3f154,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,201783,0x7ff6f6c3f1b4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,201796,0x7ff6f6c3f214,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,201809,0x7ff6f6c3f294,464,ForInEnumerate
code-creation,BytecodeHandler,0,201822,0x7ff6f6c3f474,252,ForInPrepare
code-creation,BytecodeHandler,0,201835,0x7ff6f6c3f574,60,ForInContinue
code-creation,BytecodeHandler,0,201848,0x7ff6f6c3f5b4,256,ForInNext
code-creation,BytecodeHandler,0,201861,0x7ff6f6c3f6d4,48,ForInStep
code-creation,BytecodeHandler,0,201874,0x7ff6f6c3f714,36,SetPendingMessage
code-creation,BytecodeHandler,0,201887,0x7ff6f6c3f754,116,Throw
code-creation,BytecodeHandler,0,201900,0x7ff6f6c3f7d4,116,ReThrow
code-creation,BytecodeHandler,0,201913,0x7ff6f6c3f854,112,Return
code-creation,BytecodeHandler,0,201926,0x7ff6f6c3f8d4,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,201939,0x7ff6f6c3f9b4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,201953,0x7ff6f6c3fa54,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,201967,0x7ff6f6c3faf4,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,201980,0x7ff6f6c3fb94,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,201993,0x7ff6f6c3fc14,512,SuspendGenerator
code-creation,BytecodeHandler,0,202006,0x7ff6f6c3fe34,128,ResumeGenerator
code-creation,BytecodeHandler,0,202020,0x7ff6f6c3fed4,152,GetIterator
code-creation,BytecodeHandler,0,202033,0x7ff6f6c3ff74,116,Debugger
code-creation,BytecodeHandler,0,202045,0x7ff6f6c3fff4,124,IncBlockCounter
code-creation,BytecodeHandler,0,202059,0x7ff6f6c40074,56,Abort
code-creation,BytecodeHandler,0,202071,0x7ff6f6c400b4,32,Star0
code-creation,BytecodeHandler,0,202084,0x7ff6f6c400f4,60,Illegal
code-creation,BytecodeHandler,0,202098,0x7ff6f6c40134,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,202112,0x7ff6f6c401b4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,202125,0x7ff6f6c40234,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,202139,0x7ff6f6c402b4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,202152,0x7ff6f6c40334,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,202165,0x7ff6f6c403b4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,202178,0x7ff6f6c40434,32,Ldar.Wide
code-creation,BytecodeHandler,0,202192,0x7ff6f6c40474,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,202206,0x7ff6f6c404b4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,202219,0x7ff6f6c404f4,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,202232,0x7ff6f6c40554,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,202246,0x7ff6f6c405b4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,202260,0x7ff6f6c405f4,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,202274,0x7ff6f6c40634,32,Star.Wide
code-creation,BytecodeHandler,0,202287,0x7ff6f6c40674,40,Mov.Wide
code-creation,BytecodeHandler,0,202299,0x7ff6f6c406b4,40,PushContext.Wide
code-creation,BytecodeHandler,0,202313,0x7ff6f6c406f4,36,PopContext.Wide
code-creation,BytecodeHandler,0,202326,0x7ff6f6c40734,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,202339,0x7ff6f6c40774,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,202352,0x7ff6f6c419b4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,202366,0x7ff6f6c42bb4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,202381,0x7ff6f6c42c74,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,202396,0x7ff6f6c42d34,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,202410,0x7ff6f6c42db4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,202424,0x7ff6f6c42e54,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,202437,0x7ff6f6c42f54,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,202451,0x7ff6f6c44254,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,202465,0x7ff6f6c442f4,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,202479,0x7ff6f6c443f4,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,202493,0x7ff6f6c456d4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,202507,0x7ff6f6c457b4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,202521,0x7ff6f6c46c34,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,202535,0x7ff6f6c46cf4,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,202549,0x7ff6f6c46db4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,202563,0x7ff6f6c46e74,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,202576,0x7ff6f6c46fb4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,202590,0x7ff6f6c47074,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,202603,0x7ff6f6c47134,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,202617,0x7ff6f6c471f4,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,202630,0x7ff6f6c472b4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,202644,0x7ff6f6c47394,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,202658,0x7ff6f6c47454,984,Add.Wide
code-creation,BytecodeHandler,0,202671,0x7ff6f6c47834,1020,Sub.Wide
code-creation,BytecodeHandler,0,202684,0x7ff6f6c47c34,972,Mul.Wide
code-creation,BytecodeHandler,0,202697,0x7ff6f6c48014,988,Div.Wide
code-creation,BytecodeHandler,0,202710,0x7ff6f6c483f4,916,Mod.Wide
code-creation,BytecodeHandler,0,202723,0x7ff6f6c48794,988,Exp.Wide
code-creation,BytecodeHandler,0,202736,0x7ff6f6c48b74,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,202749,0x7ff6f6c48f14,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,202762,0x7ff6f6c492b4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,202775,0x7ff6f6c49654,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,202788,0x7ff6f6c49a14,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,202801,0x7ff6f6c49dd4,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,202815,0x7ff6f6c4a1f4,916,AddSmi.Wide
code-creation,BytecodeHandler,0,202828,0x7ff6f6c4a594,960,SubSmi.Wide
code-creation,BytecodeHandler,0,202841,0x7ff6f6c4a974,912,MulSmi.Wide
code-creation,BytecodeHandler,0,202854,0x7ff6f6c4ad14,920,DivSmi.Wide
code-creation,BytecodeHandler,0,202867,0x7ff6f6c4b0b4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,202879,0x7ff6f6c4b3f4,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,202892,0x7ff6f6c4b774,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,202906,0x7ff6f6c4b974,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,202919,0x7ff6f6c4bb74,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,202933,0x7ff6f6c4bd74,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,202946,0x7ff6f6c4bf74,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,202959,0x7ff6f6c4c174,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,202973,0x7ff6f6c4c414,616,Inc.Wide
code-creation,BytecodeHandler,0,202985,0x7ff6f6c4c694,616,Dec.Wide
code-creation,BytecodeHandler,0,202998,0x7ff6f6c4c914,648,Negate.Wide
code-creation,BytecodeHandler,0,203011,0x7ff6f6c4cbb4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,203024,0x7ff6f6c4cdb4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,203038,0x7ff6f6c4ce34,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,203052,0x7ff6f6c4ceb4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,203065,0x7ff6f6c4cef4,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,203079,0x7ff6f6c4d374,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,203094,0x7ff6f6c4d7f4,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,203109,0x7ff6f6c4dbf4,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,203123,0x7ff6f6c4e014,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,203136,0x7ff6f6c4e434,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,203150,0x7ff6f6c4e834,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,203164,0x7ff6f6c4ec54,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,203177,0x7ff6f6c4f074,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,203192,0x7ff6f6c4f494,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,203206,0x7ff6f6c4f914,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,203219,0x7ff6f6c4f9b4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,203232,0x7ff6f6c4fa74,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,203246,0x7ff6f6c4fad4,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,203259,0x7ff6f6c4ffb4,968,Construct.Wide
code-creation,BytecodeHandler,0,203272,0x7ff6f6c50394,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,203286,0x7ff6f6c50574,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,203299,0x7ff6f6c50d34,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,203312,0x7ff6f6c51174,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,203326,0x7ff6f6c51774,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,203339,0x7ff6f6c51d74,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,203353,0x7ff6f6c52374,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,203366,0x7ff6f6c52974,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,203380,0x7ff6f6c52cf4,160,TestIn.Wide
code-creation,BytecodeHandler,0,203393,0x7ff6f6c52db4,116,ToName.Wide
code-creation,BytecodeHandler,0,203406,0x7ff6f6c52e34,216,ToNumber.Wide
code-creation,BytecodeHandler,0,203419,0x7ff6f6c52f14,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,203432,0x7ff6f6c53014,116,ToObject.Wide
code-creation,BytecodeHandler,0,203445,0x7ff6f6c53094,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,203458,0x7ff6f6c53234,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,203472,0x7ff6f6c537b4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,203486,0x7ff6f6c53ad4,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,203500,0x7ff6f6c542d4,172,CloneObject.Wide
code-creation,BytecodeHandler,0,203514,0x7ff6f6c54394,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,203527,0x7ff6f6c54454,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,203541,0x7ff6f6c545b4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,203554,0x7ff6f6c54634,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,203568,0x7ff6f6c546d4,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,203582,0x7ff6f6c547f4,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,203596,0x7ff6f6c54914,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,203609,0x7ff6f6c549b4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,203622,0x7ff6f6c54b74,44,Jump.Wide
code-creation,BytecodeHandler,0,203636,0x7ff6f6c54bb4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,203649,0x7ff6f6c54bf4,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,203662,0x7ff6f6c54c54,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,203676,0x7ff6f6c54cb4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,203690,0x7ff6f6c54d14,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,203704,0x7ff6f6c54d74,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,203718,0x7ff6f6c54dd4,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,203732,0x7ff6f6c54e34,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,203746,0x7ff6f6c54e94,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,203760,0x7ff6f6c54ef4,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,203774,0x7ff6f6c54f94,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,203790,0x7ff6f6c55034,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,203805,0x7ff6f6c550d4,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,203819,0x7ff6f6c55174,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,203832,0x7ff6f6c551d4,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,203846,0x7ff6f6c55234,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,203859,0x7ff6f6c55294,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,203873,0x7ff6f6c552f4,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,203886,0x7ff6f6c55354,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,203900,0x7ff6f6c553b4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,203913,0x7ff6f6c55414,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,203927,0x7ff6f6c55474,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,203940,0x7ff6f6c554f4,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,203954,0x7ff6f6c556d4,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,203967,0x7ff6f6c557d4,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,203980,0x7ff6f6c55814,260,ForInNext.Wide
code-creation,BytecodeHandler,0,203994,0x7ff6f6c55934,48,ForInStep.Wide
code-creation,BytecodeHandler,0,204007,0x7ff6f6c55974,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,204021,0x7ff6f6c55a14,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,204034,0x7ff6f6c55ad4,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,204048,0x7ff6f6c55b54,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,204062,0x7ff6f6c55d74,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,204075,0x7ff6f6c55e14,156,GetIterator.Wide
code-creation,BytecodeHandler,0,204088,0x7ff6f6c55eb4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,204102,0x7ff6f6c55f54,56,Abort.Wide
code-creation,BytecodeHandler,0,204115,0x7ff6f6c55f94,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,204129,0x7ff6f6c56014,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,204142,0x7ff6f6c56094,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,204155,0x7ff6f6c56114,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,204169,0x7ff6f6c56194,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,204182,0x7ff6f6c56214,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,204217,0x7ff6f6c56294,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,204231,0x7ff6f6c562d4,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,204244,0x7ff6f6c562f4,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,204258,0x7ff6f6c56334,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204272,0x7ff6f6c56394,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204285,0x7ff6f6c563f4,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204299,0x7ff6f6c56434,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204313,0x7ff6f6c56474,28,Star.ExtraWide
code-creation,BytecodeHandler,0,204326,0x7ff6f6c56494,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,204339,0x7ff6f6c564d4,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,204353,0x7ff6f6c56514,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,204366,0x7ff6f6c56554,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,204380,0x7ff6f6c56594,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,204393,0x7ff6f6c577d4,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,204407,0x7ff6f6c589d4,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,204421,0x7ff6f6c58a94,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204434,0x7ff6f6c58b34,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204448,0x7ff6f6c58bb4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,204462,0x7ff6f6c58c54,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,204476,0x7ff6f6c58d54,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,204490,0x7ff6f6c5a054,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,204508,0x7ff6f6c5a0f4,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,204524,0x7ff6f6c5a1f4,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,204539,0x7ff6f6c5b4d4,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,204553,0x7ff6f6c5b5b4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,204567,0x7ff6f6c5ca14,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,204581,0x7ff6f6c5cad4,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,204594,0x7ff6f6c5cb74,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,204608,0x7ff6f6c5cc34,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,204622,0x7ff6f6c5cd74,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,204636,0x7ff6f6c5ce34,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,204650,0x7ff6f6c5cef4,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,204664,0x7ff6f6c5cfb4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,204677,0x7ff6f6c5d074,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,204691,0x7ff6f6c5d154,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,204705,0x7ff6f6c5d214,980,Add.ExtraWide
code-creation,BytecodeHandler,0,204718,0x7ff6f6c5d5f4,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,204731,0x7ff6f6c5d9f4,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,204744,0x7ff6f6c5ddd4,988,Div.ExtraWide
code-creation,BytecodeHandler,0,204757,0x7ff6f6c5e1b4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,204770,0x7ff6f6c5e554,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,204784,0x7ff6f6c5e934,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,204797,0x7ff6f6c5ecd4,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,204811,0x7ff6f6c5f074,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,204824,0x7ff6f6c5f414,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,204838,0x7ff6f6c5f7d4,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,204851,0x7ff6f6c5fb94,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,204865,0x7ff6f6c5ffb4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,204878,0x7ff6f6c60354,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,204891,0x7ff6f6c60734,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,204905,0x7ff6f6c60ad4,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,204918,0x7ff6f6c60e74,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,204931,0x7ff6f6c611b4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,204944,0x7ff6f6c61534,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,204958,0x7ff6f6c61734,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,204971,0x7ff6f6c61934,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,204985,0x7ff6f6c61b34,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,204998,0x7ff6f6c61d34,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,205012,0x7ff6f6c61f34,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,205026,0x7ff6f6c621d4,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,205039,0x7ff6f6c62454,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,205052,0x7ff6f6c626d4,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,205066,0x7ff6f6c62974,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,205080,0x7ff6f6c62b74,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,205093,0x7ff6f6c62bf4,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,205108,0x7ff6f6c62c74,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,205121,0x7ff6f6c62cb4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,205135,0x7ff6f6c63134,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,205148,0x7ff6f6c635b4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,205162,0x7ff6f6c639b4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,205176,0x7ff6f6c63dd4,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,205192,0x7ff6f6c641f4,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,205208,0x7ff6f6c645f4,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,205222,0x7ff6f6c64a14,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,205236,0x7ff6f6c64e14,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,205250,0x7ff6f6c65234,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,205263,0x7ff6f6c656b4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,205277,0x7ff6f6c65754,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,205291,0x7ff6f6c65814,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,205304,0x7ff6f6c65874,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,205318,0x7ff6f6c65d54,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,205331,0x7ff6f6c66134,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,205345,0x7ff6f6c66314,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,205358,0x7ff6f6c66ad4,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,205372,0x7ff6f6c66f14,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,205386,0x7ff6f6c67514,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,205399,0x7ff6f6c67b14,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,205414,0x7ff6f6c68114,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,205428,0x7ff6f6c68714,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,205441,0x7ff6f6c68a94,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,205455,0x7ff6f6c68b34,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,205468,0x7ff6f6c68bb4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,205482,0x7ff6f6c68c94,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,205495,0x7ff6f6c68d94,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,205510,0x7ff6f6c68e14,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,205524,0x7ff6f6c68fb4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,205539,0x7ff6f6c69534,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,205569,0x7ff6f6c69854,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,205584,0x7ff6f6c6a054,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,205598,0x7ff6f6c6a114,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,205612,0x7ff6f6c6a1d4,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,205626,0x7ff6f6c6a334,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,205640,0x7ff6f6c6a3b4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,205654,0x7ff6f6c6a454,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,205668,0x7ff6f6c6a574,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,205682,0x7ff6f6c6a694,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,205696,0x7ff6f6c6a734,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,205710,0x7ff6f6c6a8f4,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,205723,0x7ff6f6c6a934,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,205737,0x7ff6f6c6a974,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,205751,0x7ff6f6c6a9d4,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,205766,0x7ff6f6c6aa34,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,205780,0x7ff6f6c6aa94,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,205794,0x7ff6f6c6aaf4,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,205809,0x7ff6f6c6ab54,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,205823,0x7ff6f6c6abb4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,205837,0x7ff6f6c6ac14,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,205852,0x7ff6f6c6ac74,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,205866,0x7ff6f6c6ad14,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,205884,0x7ff6f6c6adb4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,205900,0x7ff6f6c6ae54,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,205914,0x7ff6f6c6aef4,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,205929,0x7ff6f6c6af54,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,205943,0x7ff6f6c6afb4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,205957,0x7ff6f6c6b014,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,205970,0x7ff6f6c6b074,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,205984,0x7ff6f6c6b0d4,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,205999,0x7ff6f6c6b134,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,206013,0x7ff6f6c6b194,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,206027,0x7ff6f6c6b1f4,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,206041,0x7ff6f6c6b274,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,206055,0x7ff6f6c6b454,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,206069,0x7ff6f6c6b554,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,206083,0x7ff6f6c6b594,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,206096,0x7ff6f6c6b6b4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,206110,0x7ff6f6c6b6f4,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,206124,0x7ff6f6c6b794,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,206138,0x7ff6f6c6b854,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,206152,0x7ff6f6c6b8d4,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,206166,0x7ff6f6c6baf4,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,206179,0x7ff6f6c6bb74,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,206194,0x7ff6f6c6bc14,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,206208,0x7ff6f6c6bc94,56,Abort.ExtraWide
new,MemoryChunk,0x3f5e2600000,262144
new,MemoryChunk,0xb627f80000,262144
tick,0x7ff6f70a1370,208266,0,0x0,5
new,MemoryChunk,0x1a907240000,262144
new,MemoryChunk,0x7a70180000,262144
code-creation,Eval,10,211544,0x7a701bee8e,5, node:internal/main/run_main_module:1:1,0x7a701bed48,~
script-source,94,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x7a701bee8e,94,0,649,C0O0C4O649,,
code-creation,Function,10,211638,0x7a701bef36,58, node:internal/main/run_main_module:1:1,0x7a701bee08,~
code-source-info,0x7a701bef36,94,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,211956,0x7a701bf176,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x2de3944fd30,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x7a701bf176,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,212756,0x7a701bfe86,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x2de3944fc60,~
code-source-info,0x7a701bfe86,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
new,MemoryChunk,0x6ba51c0000,262144
code-creation,Eval,10,213240,0x6ba51c1ede,5, node:internal/bootstrap/pre_execution:1:1,0x6ba51c1b48,~
script-source,95,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x6ba51c1ede,95,0,16254,C0O0C4O16254,,
code-creation,Function,10,214249,0x6ba51c29de,426, node:internal/bootstrap/pre_execution:1:1,0x6ba51c1e58,~
code-source-info,0x6ba51c29de,95,0,16254,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O15839C324O15861C330O15884C336O15907C342O15931C348O15949C354O15968C360O15999C366O16026C372O16050C378O16081C384O16114C390O16137C396O16165C402O16189C408O16210C414O16234C420O15854C425O16253,,
code-creation,Eval,10,214509,0x6ba51c432e,5, node:internal/options:1:1,0x6ba51c4158,~
script-source,96,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x6ba51c432e,96,0,1892,C0O0C4O1892,,
code-creation,Function,10,214682,0x6ba51c46fe,154, node:internal/options:1:1,0x6ba51c42a8,~
code-source-info,0x6ba51c46fe,96,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
code-creation,LazyCompile,10,214816,0x6ba51c4c0e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x2de3944f7b0,~
code-source-info,0x6ba51c4c0e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,215053,0x6ba51c545e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x6ba51c1f10,~
code-source-info,0x6ba51c545e,95,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,215223,0x6ba51c664e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x1b3a04cbdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x6ba51c664e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,217381,0x6ba51c8e86,397,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x6ba51c1f60,~
code-source-info,0x6ba51c8e
code-creation,LazyCompile,10,217573,0x6ba51c931e,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x1b3a04d8538,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x6ba51c931e,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,218644,0x6ba51ca3de,832,resolve node:path:158:10,0x20acf64d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x6ba51ca3de
code-creation,LazyCompile,10,221815,0x6ba51cd9f6,30,validateString node:internal/validators:118:24,0x2de3947c958,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x6ba51cd9f6,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,222401,0x6ba51ce396,17,isPathSeparator node:path:52:25,0x20acf64cf90,~
code-source-info,0x6ba51ce396,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,222468,0x6ba51ce496,35,isWindowsDeviceRoot node:path:60:29,0x20acf64d408,~
code-source-info,0x6ba51ce496,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,222635,0x6ba51ce6e6,442,normalizeString node:path:66:25,0x20acf64d458,~
code-source-info,0x6ba51ce6e
code-creation,LazyCompile,10,222859,0x6ba51cee06,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:122:33,0x6ba51c1fb0,~
code-source-info,0x6ba51cee06,95,4177,4412,C16O4230C21O4230C26O4257C28O4275C36O4305C43O4371C49O4390C56O4275C62O4411,,
code-creation,LazyCompile,10,222950,0x6ba51cef86,82,getOptionValue node:internal/options:39:24,0x6ba51c4450,~
code-source-info,0x6ba51cef86,96,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,223028,0x6ba51cf336,33,getCLIOptionsFromBinding node:internal/options:18:34,0x6ba51c4360,~
code-source-info,0x6ba51cf336,96,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,223427,0x6ba51cf4b6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:214:33,0x6ba51c2258,~
code-source-info,0x6ba51cf4b6,95,6737,6968,C0O6780C6O6780C11O6753C16O6853C22O6853C27O6824C32O6896C35O6921C40O6896C45O6967,,
code-creation,LazyCompile,10,223514,0x6ba51cf64e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x1b3a04d8c58,~
code-source-info,0x6ba51cf64e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,223588,0x6ba51cf7fe,42,setupPerfHooks node:internal/bootstrap/pre_execution:220:24,0x6ba51c22a8,~
code-source-info,0x6ba51cf7fe,95,6995,7118,C0O7003C6O7003C11O7039C16O7040C20O7064C26O7064C31O7094C36O7095C41O7117,,
code-creation,LazyCompile,10,223665,0x6ba51cf97e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x9c49b6b760,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x6ba51cf97e,73,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,224050,0x6ba51d008e,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x20acf662148,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x6ba51d008e,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,224185,0x6ba51d02fe,62,setupInspectorHooks node:internal/bootstrap/pre_execution:225:29,0x6ba51c22f8,~
code-source-info,0x6ba51d02fe,95,7150,7716,C0O7499C6O7503C11O7528C17O7597C23O7597C28O7565C33O7580C38O7644C44O7644C49O7672C54O7673C61O7715,,
tick,0x7ffd597cce44,224298,0,0x0,3,0x7ff6f6704670,0x6ba51c5486,0x7a701bef45
code-creation,Eval,10,224419,0x6ba51d06ae,5, node:internal/inspector_async_hook:1:1,0x6ba51d04f8,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x6ba51d06ae,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,224622,0x6ba51d08ce,79, node:internal/inspector_async_hook:1:1,0x6ba51d0628,~
code-source-info,0x6ba51d08ce,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,224773,0x6ba51d0f46,69,setupWarningHandler node:internal/bootstrap/pre_execution:134:29,0x6ba51c2000,~
code-source-info,0x6ba51d0f46,95,4444,4649,C0O4482C6O4482C11O4465C16O4522C24O4526C33O4571C38O4575C45O4592C50O4608C53O4616C61O4616C68O4648,,
code-creation,LazyCompile,10,224932,0x6ba51d10a6,20,addListener node:events:622:58,0x3d62a02b738,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x6ba51d10a6,23,18981,19055,C0O19003C14O19010C19O19052,,
code-creation,LazyCompile,10,227359,0x6ba51d3746,387,_addListener node:events:554:22,0x3d62a02b698,~
code-source-info,0x6ba51d
code-creation,LazyCompile,10,227504,0x6ba51d3a7e,15,checkListener node:events:257:23,0x3d62a02aff8,~
code-source-info,0x6ba51d3a7e,23,7863,7921,C0O7879C8O7879C14O7920,,
code-creation,LazyCompile,10,227569,0x6ba51d3b6e,30, node:internal/validators:236:42,0x2de3947cdf0,~
code-source-info,0x6ba51d3b6e,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,227755,0x6ba51d3dee,380,emit node:events:474:44,0x3d62a02b5d8,~
code-source-info,0x6ba51d3dee
code-creation,LazyCompile,10,227954,0x6ba51d4196,172,startListeningIfSignal node:internal/process/signal:22:32,0x15162b3f7a8,~
script-source,92,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x6ba51d4196,92,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,228154,0x6ba51d4556,19,isSignal node:internal/process/signal:17:18,0x15162b3f5f0,~
code-source-info,0x6ba51d4556,92,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,228240,0x6ba51d46f6,75,setupDebugEnv node:internal/bootstrap/pre_execution:186:23,0x6ba51c2168,~
code-source-info,0x6ba51d46f6,95,5959,6174,C0O5967C6O5967C11O6000C19O6028C24O6032C29O6001C34O6048C42O6052C48O6097C54O6097C59O6134C64O6147C69O6148C74O6173,,
code-creation,LazyCompile,10,228365,0x6ba51d4a8e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x3d62a021680,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x6ba51d4a8e,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x1ca1ecc0000,262144
code-creation,Function,11,228764,0x1ca1ecc3060,572,getOptionValue node:internal/options:39:24,0x6ba51c4450,^
code-source-info,0x1ca1ecc3060,96,940,1190,,,
code-creation,Function,11,228814,0x1ca1ecc3300,216,isPathSeparator node:path:52:25,0x20acf64cf90,^
code-source-info,0x1ca1ecc3300,41,1794,1876,,,
code-creation,Function,11,228901,0x1ca1ecc3440,3076,normalizeString node:path:66:25,0x20acf64d458,^
code-source-info,0x1ca1ecc3440,41,2226,4212,,,
code-creation,LazyCompile,10,228988,0x6ba51d53d6,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:165:40,0x6ba51c20a0,~
code-source-info,0x6ba51d53d6,95,5502,5696,C0O5510C8O5515C14O5556C15O5563C16O5599C22O5599C27O5580C32O5651C38O5685C43O5685C48O5695,,
code-creation,LazyCompile,10,229085,0x6ba51d5646,62,initializeReport node:internal/bootstrap/pre_execution:175:26,0x6ba51c20f0,~
code-source-info,0x6ba51d5646,95,5725,5933,C0O5725C8O5752C16O5752C21O5741C27O5791C42O5812C47O5887C55O5791C61O5932,,
code-creation,Eval,10,229314,0x6ba51d5bb6,5, node:internal/process/report:1:1,0x6ba51d59c0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x6ba51d5bb6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,229568,0x6ba51d66c6,306, node:internal/process/report:1:1,0x6ba51d5b30,~
code-source-info,0x6ba51d66c6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,229823,0x6ba51d839e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:194:40,0x6ba51c21b8,~
code-source-info,0x6ba51d839e,95,6278,6378,C0O6315C6O6315C11O6294C16O6356C20O6377,,
code-creation,LazyCompile,10,229917,0x6ba51d84e6,57,addSignalHandler node:internal/process/report:98:26,0x6ba51d5be8,~
code-source-info,0x6ba51d84e6,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,230010,0x6ba51d8aae,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:200:46,0x6ba51c2208,~
code-source-info,0x6ba51d8aae,95,6427,6701,C0O6427C8O6450C18O6450C23O6496C25O6514C26O6521C27O6527C35O6527C40O6557C45O6558C50O6619C58O6619C63O6597C69O6639C74O6647C79O6650C84O6647C91O6700,,
code-creation,LazyCompile,10,230119,0x6ba51d8d3e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:330:37,0x6ba51c23d8,~
code-source-info,0x6ba51d8d3e,95,10571,11117,C0O10579C3O10591C8O10595C14O10634C20O10634C25O10680C33O10703C38O10707C46O10680C52O10734C53O10744C57O10734C61O10828C64O10843C73O10904C76O10912C81O10916C90O10964C93O10979C102O11023C108O11023C113O11047C118O11048C124O11088C127O11103C132O11088C137O11116,,
code-creation,LazyCompile,10,230236,0x6ba51d8ece,21,assert node:internal/assert:11:16,0x3d62a020658,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x6ba51d8ece,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,231020,0x6ba51d9d66,5, node:child_process:1:1,0x6ba51d9890,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x6ba51d9d66,99,0,25520,C0O0C4O25520,,
code-creation,Function,10,232810,0x6ba51da7c6,748, node:child_process:1:1,0x6ba51d9ce0,~
code-source-info,0x6ba51da7c
code-creation,LazyCompile,10,233122,0x6ba51dcdae,82,debuglog node:internal/util/debuglog:71:18,0x3d62a0219d0,~
code-source-info,0x6ba51dcdae,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,234200,0x6ba51e003e,5, node:internal/child_process:1:1,0x6ba51df940,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x6ba51e003e,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,236469,0x6ba51e165e,1265, node:internal/child_process:1:1,0x6ba51dffb8,~
code-source-info,0x6ba51e165e
code-creation,Function,10,236692,0x6ba51e1dd6,35,<instance_members_initializer> node:internal/child_process:525:3,0x6ba51e0d20,~
code-source-info,0x6ba51e1dd6,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,238268,0x6ba51e6066,5, node:net:1:1,0x6ba51e5888,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x6ba51e6066,101,0,49462,C0O0C4O49462,,
tick,0x7ff6f60d0532,241671,1,0x7ff6f618d620,3,0x7ff6f6ad5f50,0x7a701bfecc,0x7a701bf1bd,0x6ba51e184c,0x7a701bfeed,0x7a701bf1bd,0x6ba51daa0a,0x7a701bfeed,0x7a701bf1bd,0x6ba51d8daa,0x6ba51c54de,0x7a701bef45
code-creation,Function,10,241713,0x6ba51e8f36,2513, node:net:1:1,0x6ba51e5fe0,~
code-source-info,0x6ba51e8f36,101,0,49462,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33157C1831O33185C1843O33209C1852O33157C1862O33222C1868O33222C1878O37343C1881O37350C1892O37369C1900O38873C1903O38880C1916O38897C1924O42966C1930O42994C1951O43028C1963O42966C1973O43126C1976O43133C1989O43151C1997O44273C2000O44280C2013O44305C2021O45102C2024O45109C2037O45125C2045O46036C2048O46043C2061O46073C2069O46573C2072O46580C2084O46603C2097O46627C2105O46960C2111O46985C2132O47010C2144O47051C2156O46960C2166O47101C2172O47129C2189O47156C2201O47192C2213O47101C2223O47237C2226O47244C2239O47267C2247O47522C2250O47529C2263O47543C2271O47655C2274O47662C2287O47678C2295O47795C2297O47851C2298O47851C2300O47860C2311O47884C2312O47884C2314O47910C2323O48640C2328O48922C2338O48965C2348O49004C2358O49022C2368O49290C2378O49320C2388O49332C2398O49355C2408O49372C2418O49391C2428O49402C2438O49413C2448O49432C2503O48937C2512O49461,,
code-creation,Eval,10,242554,0x6ba51ee706,5, node:internal/net:1:1,0x6ba51ee540,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x6ba51ee706,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,242726,0x6ba51eeaf6,617, node:internal/net:1:1,0x6ba51ee680,~
code-source-info,0x6ba51eeaf6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,243116,0x6ba51f044e,5, node:internal/dtrace:1:1,0x6ba51f0308,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x6ba51f044e,103,0,589,C0O0C4O589,,
code-creation,Function,10,243208,0x6ba51f0926,140, node:internal/dtrace:1:1,0x6ba51f03c8,~
code-source-info,0x6ba51f0926,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,243502,0x6ba51f18be,34,protoGetter node:net:718:21,0x6ba51e64a8,~
code-source-info,0x6ba51f18be,101,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,244437,0x6ba51f6bce,5, node:dgram:1:1,0x6ba51f6668,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x6ba51f6bce,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,246388,0x6ba51f8ade,1501, node:dgram:1:1,0x6ba51f6b48,~
code-source-info,0x6ba51f8ade
code-creation,Eval,10,246925,0x6ba51fbee6,5, node:internal/dgram:1:1,0x6ba51fbce0,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x6ba51fbee6,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,247110,0x6ba51fc1ae,196, node:internal/dgram:1:1,0x6ba51fbe60,~
code-source-info,0x6ba51fc1ae,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,247410,0x6ba51fea7e,152,deprecate node:internal/util:96:19,0x3d62a0057f8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x6ba51fea7e,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
new,MemoryChunk,0x7b015c0000,262144
code-creation,Function,11,248562,0x1ca1ecc40c0,1344,deprecate node:internal/util:96:19,0x3d62a0057f8,^
code-source-info,0x1ca1ecc40c0,16,2503,3720,,,
code-creation,Function,11,248613,0x1ca1ecc4660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x2de3944fd30,^
code-source-info,0x1ca1ecc4660,9,10647,11000,,,
code-creation,Function,11,248665,0x1ca1ecc4960,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x2de3944fc60,^
code-source-info,0x1ca1ecc4960,9,9827,10410,,,
code-creation,Function,11,248713,0x1ca1ecc4ec0,548,internalBinding node:internal/bootstrap/loaders:164:45,0x2de3944f7b0,^
code-source-info,0x1ca1ecc4ec0,9,5278,5523,,,
code-creation,Eval,10,248972,0x7b015c23e6,5, node:internal/socket_list:1:1,0x7b015c2290,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x7b015c23e6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,249225,0x7b015c2a26,126, node:internal/socket_list:1:1,0x7b015c2360,~
code-source-info,0x7b015c2a26,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,249493,0x7b015c33e6,14,customPromiseExecFunction node:child_process:230:35,0x6ba51da348,~
code-source-info,0x7b015c33e6,99,6792,7172,C0O6792C9O6807C13O7169,,
code-creation,LazyCompile,10,249616,0x7b015c541e,129,_forkChild node:child_process:169:20,0x6ba51d9de8,~
code-source-info,0x7b015c541e,99,5047,5529,C0O5047C8O5111C19O5120C22O5134C29O5111C35O5145C40O5145C45O5160C50O5160C54O5188C72O5188C77O5188C79O5236C84O5244C97O5244C103O5379C108O5387C121O5387C128O5528,,
tick,0x7ffd582a24c8,256286,1,0x7ff6f61093d0,6,0x7ff6f6ad5f50,0x7b015c5446,0x6ba51d8db4,0x6ba51c54de,0x7a701bef45
code-creation,LazyCompile,10,257141,0x7b015c5e1e,396,setupChannel node:internal/child_process:571:22,0x6ba51e02f0,~
code-source-info,0x7b015c5e1e
code-creation,LazyCompile,10,257293,0x7b015c85f6,72,Control node:internal/child_process:529:14,0x6ba51e0b28,~
code-source-info,0x7b015c85f6,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,257370,0x7b015c872e,21,EventEmitter node:events:207:22,0x3d62a02aeb0,~
code-source-info,0x7b015c872e,23,6453,6503,C0O6465C3O6478C8O6483C13O6483C20O6502,,
code-creation,LazyCompile,10,257474,0x7b015c8876,149,EventEmitter.init node:events:326:29,0x3d62a02b2a8,~
code-source-info,0x7b015c8876,23,9985,10593,C0O10008C6O10045C13O10057C16O10057C21O10083C25O10053C30O10100C32O10115C37O10115C41O10113C45O10140C46O10158C50O10199C60O10192C64O10234C71O10242C80O10270C85O10291C93O10270C98O10345C100O10350C105O10362C108O10375C113O10362C117O10360C123O10535C125O10540C131O10565C138O10575C140O10574C143O10550C148O10592,,
code-creation,Eval,10,257843,0x7b015c90fe,5, node:internal/child_process/serialization:1:1,0x7b015c8e18,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x7b015c90fe,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,258156,0x7b015c9966,369, node:internal/child_process/serialization:1:1,0x7b015c9078,~
code-source-info,0x7b015c9966,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,258393,0x7b015ca616,23,initMessageChannel node:internal/child_process/serialization:100:21,0x7b015c9360,~
code-source-info,0x7b015ca616,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,258514,0x7b015cac6e,19,_getMaxListeners node:events:403:26,0x3d62a02b478,~
code-source-info,0x7b015cac6e,23,12251,12379,C0O12272C6O12306C9O12326C13O12346C14O12362C18O12376,,
code-creation,LazyCompile,10,258575,0x7b015cad66,5,get node:events:263:16,0x3d62a02b098,~
code-source-info,0x7b015cad66,23,8022,8064,C0O8032C4O8059,,
code-creation,LazyCompile,10,258677,0x7b015cb0c6,322,arrayClone node:events:883:20,0x3d62a02bd40,~
code-source-info,0x7b015cb0c6,23,26206,26671,C0O26348C42O26371C50O26382C62O26390C71O26395C72O26409C80O26420C92O26428C104O26436C113O26441C114O26455C122O26466C134O26474C146O26482C158O26490C167O26495C168O26509C176O26520C188O26528C200O26536C212O26544C224O26552C233O26557C234O26571C242O26582C254O26590C266O26598C278O26606C290O26614C302O26622C311O26627C312O26636C317O26643C321O26668,,
code-creation,LazyCompile,10,258793,0x7b015cb396,22, node:internal/child_process:706:36,0x7b015c5938,~
code-source-info,0x7b015cb396,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,258929,0x7b015cb636,368,nextTick node:internal/process/task_queues:104:18,0x1b3a04da9f0,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x7b015cb
code-creation,LazyCompile,10,259347,0x7b015cbea6,21, node:internal/validators:222:42,0x2de3947cd50,~
code-source-info,0x7b015cbea6,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,259418,0x7b015cbfa6,15,isEmpty node:internal/fixed_queue:95:10,0x1b3a04dfc20,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x7b015cbfa6,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,259726,0x7b015cc45e,13,isEmpty node:internal/fixed_queue:67:10,0x1b3a04df9b0,~
code-source-info,0x7b015cc45e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,259786,0x7b015cc54e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x1b3a04da900,~
code-source-info,0x7b015cc54e,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,259878,0x7b015cc646,23,newAsyncId node:internal/async_hooks:417:20,0x2de39478320,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x7b015cc646,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,261214,0x7b015cdb26,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x2de394783c0,~
code-source-info,0x7b015cdb26,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,261290,0x7b015cdc36,13,initHooksExist node:internal/async_hooks:479:24,0x2de394785b0,~
code-source-info,0x7b015cdc36,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,261352,0x7b015cdd1e,16,hasHooks node:internal/async_hooks:471:18,0x2de39478510,~
code-source-info,0x7b015cdd1e,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,261421,0x7b015cde2e,59,push node:internal/fixed_queue:99:7,0x1b3a04dfc70,~
code-source-info,0x7b015cde2e,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,261493,0x7b015cdf76,24,isFull node:internal/fixed_queue:71:9,0x1b3a04dfa00,~
code-source-info,0x7b015cdf76,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,261562,0x7b015ce086,37,push node:internal/fixed_queue:75:7,0x1b3a04dfa68,~
code-source-info,0x7b015ce086,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,261652,0x7b015ce1a6,30,onNewListener node:child_process:175:51,0x7b015c52d8,~
code-source-info,0x7b015ce1a6,99,5284,5373,C0O5298C2O5307C9O5329C14O5347C19O5355C24O5355C29O5372,,
code-creation,LazyCompile,10,261819,0x7b015ce4f6,455,initializePolicy node:internal/bootstrap/pre_execution:358:26,0x6ba51c2478,~
code-source-info,0x7b015ce4f
code-creation,LazyCompile,10,261980,0x7b015ce8c6,63,initializeClusterIPC node:internal/bootstrap/pre_execution:349:30,0x6ba51c2428,~
code-source-info,0x7b015ce8c6,95,11150,11398,C0O11158C3O11170C10O11174C18O11189C23O11193C29O11232C35O11232C40O11265C45O11265C49O11356C52O11371C62O11397,,
code-creation,LazyCompile,10,262070,0x7b015cea36,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:453:38,0x6ba51c25b8,~
code-source-info,0x7b015cea36,95,15053,15206,C0O15099C6O15099C11O15069C16O15151C21O15180C26O15205,,
code-creation,Eval,10,262379,0x7b015cf36e,5, node:internal/source_map/source_map_cache:1:1,0x7b015cf008,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x7b015cf36e,108,0,7905,C0O0C4O7905,,
code-creation,Function,10,262915,0x7b015cf9e6,435, node:internal/source_map/source_map_cache:1:1,0x7b015cf2e8,~
code-source-info,0x7b015cf9e6,108,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,Eval,10,263218,0x7b015d0a26,5, node:internal/util/iterable_weak_map:1:1,0x7b015d07d8,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x7b015d0a26,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,263406,0x7b015d1186,196, node:internal/util/iterable_weak_map:1:1,0x7b015d09a0,~
code-source-info,0x7b015d1186,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,263451,0x7b015d1306,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x7b015d0cb0,~
code-source-info,0x7b015d1306,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,263805,0x7b015d1f3e,5, node:internal/modules/cjs/helpers:1:1,0x7b015d1c88,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x7b015d1f3e,110,0,6975,C0O0C4O6975,,
code-creation,Function,10,264298,0x7b015d24be,536, node:internal/modules/cjs/helpers:1:1,0x7b015d1eb8,~
code-source-info,0x7b015d24be,110,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,264530,0x7b015d30fe,27,SafeSet node:internal/per_context/primordials:364:16,0x2de3944a1a0,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x7b015d30fe,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,265389,0x7b015d3f3e,27,SafeMap node:internal/per_context/primordials:351:16,0x2de3944a018,~
code-source-info,0x7b015d3f3e,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,265478,0x7b015d40d6,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x7b015d0aa8,~
code-source-info,0x7b015d40d6,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,265541,0x7b015d445e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x2de3944a0d8,~
code-source-info,0x7b015d445e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,265609,0x7b015d4566,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x2de3944a328,~
code-source-info,0x7b015d4566,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,265786,0x7b015d4d06,492,initializeDeprecations node:internal/bootstrap/pre_execution:243:32,0x6ba51c2348,~
code-source-info,0x7b015d4d
code-creation,LazyCompile,10,265950,0x7b015d525e,53,initializeWASI node:internal/bootstrap/pre_execution:407:24,0x6ba51c24c8,~
code-source-info,0x7b015d525e,95,13299,13510,C0O13332C6O13332C11O13315C16O13399C21O13403C29O13403C35O13419C37O13451C43O13451C47O13444C52O13509,,
code-creation,LazyCompile,10,266039,0x7b015d545e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:414:29,0x6ba51c2518,~
code-source-info,0x7b015d545e,95,13542,13865,C0O13568C6O13568C11O13611C16O13616C20O13636C26O13675C31O13682C36O13682C40O13781C51O13803C56O13839C60O13796C65O13864,,
code-creation,Eval,10,267193,0x7b015d73c6,5, node:internal/modules/cjs/loader:1:1,0x7b015d6ae0,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x7b015d73c6,111,0,41663,C0O0C4O41663,,
code-creation,Function,10,269831,0x7b015d9166,2547, node:internal/modules/cjs/loader:1:1,0x7b015d7340,~
code-source-info,0x7b015d
code-creation,Eval,10,270485,0x7b015dd116,5, node:internal/modules/package_json_reader:1:1,0x7b015dcf70,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x7b015dd116,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,270605,0x7b015dd266,113, node:internal/modules/package_json_reader:1:1,0x7b015dd090,~
code-source-info,0x7b015dd266,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,270837,0x7b015ddafe,5, node:internal/process/esm_loader:1:1,0x7b015dd908,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x7b015ddafe,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,271062,0x7b015ddd9e,182, node:internal/process/esm_loader:1:1,0x7b015dda78,~
code-source-info,0x7b015ddd9e,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,271566,0x7b015df00e,5, node:internal/modules/esm/loader:1:1,0x7b015deba0,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(\x0d\n        url\x2C { format\x2C importAssertions });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL\x2C\x0d\n                importAssertions = ObjectCreate(null)) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x7b015df00e,114,0,17034,C0O0C4O17034,,
code-creation,Function,10,272796,0x7b015df856,624, node:internal/modules/esm/loader:1:1,0x7b015def88,~
code-source-info,0x7b015df
code-creation,Function,10,272897,0x7b015dfcce,154,<instance_members_initializer> node:internal/modules/esm/loader:64:3,0x7b015df3b0,~
code-source-info,0x7b015dfcce,114,1844,2727,C3O1864C17O2026C28O2033C45O2215C56O2222C73O2274C88O2373C95O2373C109O2496C119O2588C126O2588C140O2716C153O2727,,
tick,0x7ff6f60d0701,272947,1,0x7ff6f618d620,3,0x7ff6f6ad5f50,0x1ca1ecc4b9b,0x1ca1ecc48e5,0x7b015dddec,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015d9611,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015d5464,0x6ba51c5502,0x7a701bef45
code-creation,Eval,10,273157,0x7b015e14f6,5, node:internal/modules/esm/module_map:1:1,0x7b015e1308,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x7b015e14f6,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,273299,0x7b015e192e,175, node:internal/modules/esm/module_map:1:1,0x7b015e1470,~
code-source-info,0x7b015e192e,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,273628,0x7b015e23d6,5, node:internal/modules/esm/module_job:1:1,0x7b015e20e0,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x7b015e23d6,116,0,8407,C0O0C4O8407,,
code-creation,Function,10,274168,0x7b015e28ce,343, node:internal/modules/esm/module_job:1:1,0x7b015e2350,~
code-source-info,0x7b015e28ce,116,0,8407,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8359C330O8328C335O8378C337O8393C342O8406,,
code-creation,Eval,10,274480,0x7b015e451e,5, node:internal/modules/esm/assert:1:1,0x7b015e4328,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x7b015e451e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,274756,0x7b015e47f6,201, node:internal/modules/esm/assert:1:1,0x7b015e4498,~
code-source-info,0x7b015e47f6,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,274905,0x7b015e4e06,9, node:internal/modules/esm/assert:43:3,0x7b015e45f0,~
code-source-info,0x7b015e4e06,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,275856,0x7b015e6826,5, node:internal/modules/esm/resolve:1:1,0x7b015e6100,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined)\x0d\n        continue;\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    url: `${url}`\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0x7b015e6826,118,0,37756,C0O0C4O37756,,
code-creation,Function,10,278240,0x7b015e782e,1110, node:internal/modules/esm/resolve:1:1,0x7b015e67a0,~
code-source-info,0x7b015e782e
code-creation,Eval,10,278746,0x7b015eac3e,5, node:internal/modules/esm/get_format:1:1,0x7b015ea9f8,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null]; // eslint-disable-line no-sparse-arrays\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  if (\x0d\n    experimentalSpecifierResolution === 'node' &&\x0d\n    !experimentalSpecifierResolutionWarned\x0d\n  ) {\x0d\n    process.emitWarning(\x0d\n      'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n      'ExperimentalWarning');\x0d\n    experimentalSpecifierResolutionWarned = true;\x0d\n  }\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nfunction getFileProtocolModuleFormat(url\x2C ignoreErrors) {\x0d\n  const ext = extname(url.pathname);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors)\x0d\n      return undefined;\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n  }\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C true);\x0d\n}\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x7b015eac3e,119,0,3433,C0O0C4O3433,,
code-creation,Function,10,279003,0x7b015eb136,340, node:internal/modules/esm/get_format:1:1,0x7b015eabb8,~
code-source-info,0x7b015eb136,119,0,3433,C0O0C72O26C77O43C82O60C88O94C94O154C97O154C102O142C108O199C111O199C116O180C121O263C124O263C128O263C130O354C133O354C137O354C139O442C142O442C146O442C148O517C151O517C156O498C162O590C165O590C170O567C176O572C182O655C185O655C190O681C195O624C201O719C205O719C207O846C211O846C213O1034C214O1034C216O1044C220O1076C229O1140C235O1104C239O1153C243O1185C252O1249C258O1213C262O1287C264O1300C274O1325C284O1804C288O1836C296O1287C301O1287C303O3302C310O3324C316O3345C322O3379C328O3402C334O3317C339O3432,,
code-creation,Eval,10,279273,0x7b015ebb3e,5, node:internal/modules/esm/initialize_import_meta:1:1,0x7b015eb9a8,~
script-source,120,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\ngetOptionValue('--experimental-import-meta-resolve');\x0d\nconst { PromisePrototypeThen\x2C PromiseReject } = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x7b015ebb3e,120,0,932,C0O0C4O932,,
code-creation,Function,10,279387,0x7b015ebd06,90, node:internal/modules/esm/initialize_import_meta:1:1,0x7b015ebab8,~
code-source-info,0x7b015ebd06,120,0,932,C0O0C28O44C31O44C36O25C41O113C44O113C48O113C50O176C56O198C62O247C65O247C69O247C71O884C78O906C84O899C89O931,,
code-creation,Eval,10,279549,0x7b015ec1c6,5, node:internal/modules/esm/load:1:1,0x7b015ec050,~
script-source,121,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n  const { importAssertions } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = defaultGetFormat(url);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x7b015ec1c6,121,0,891,C0O0C4O891,,
code-creation,Function,10,279664,0x7b015ec30e,80, node:internal/modules/esm/load:1:1,0x7b015ec140,~
code-source-info,0x7b015ec30e,121,0,891,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O851C68O873C74O866C79O890,,
code-creation,Eval,10,279836,0x7b015ec8ce,5, node:internal/modules/esm/get_source:1:1,0x7b015ec6f8,~
script-source,122,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x7b015ec8ce,122,0,1394,C0O0C4O1394,,
code-creation,Function,10,279972,0x7b015eca3e,169, node:internal/modules/esm/get_source:1:1,0x7b015ec848,~
code-source-info,0x7b015eca3e,122,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,280843,0x7b015edd86,5, node:internal/fs/promises:1:1,0x7b015ed5e8,~
script-source,123,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = bufferOrOptions.length ?? buffer.byteLength;\x0d\n    position = bufferOrOptions.position ?? null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x7b015edd86,123,0,23741,C0O0C4O23741,,
code-creation,Function,10,282406,0x7b015f04be,1659, node:internal/fs/promises:1:1,0x7b015edd00,~
code-source-info,0x7b015f04be
code-creation,Function,10,282627,0x7b015f0e6e,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x7b015ef360,~
code-source-info,0x7b015f0e6e,123,4390,5219,C0O4390C12O4398C26O5219,,
code-creation,Eval,10,283091,0x7b015f390e,5, node:internal/fs/rimraf:1:1,0x7b015f35a8,~
script-source,124,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x7b015f390e,124,0,7392,C0O0C4O7392,,
code-creation,Function,10,283638,0x7b015f3f0e,409, node:internal/fs/rimraf:1:1,0x7b015f3888,~
code-source-info,0x7b015f3f0e,124,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,283934,0x7b015f4da6,188,from node:buffer:296:28,0x3d62a036c40,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x7b015f4da6,24,8723,9706,C3O8762C9O8798C12O8805C17O8841C18O8847C28O8903C33O8907C39O8939C51O8946C56O8995C57O9025C63O9042C68O9042C73O9058C78O9098C95O9191C104O9198C109O9238C110O9263C113O9263C118O9287C120O9301C122O9310C123O9318C125O9335C127O9334C134O9397C136O9403C138O9402C145O9421C151O9440C155O9486C158O9493C163O9533C164O9560C182O9566C187O9560,,
code-creation,LazyCompile,10,286472,0x7b015f77b6,110,fromString node:buffer:432:20,0x3d62a037028,~
code-source-info,0x7b015f77b6,24,12910,13359,C0O12938C2O12946C8O12991C14O12998C19O13023C25O13030C30O13044C35O13051C40O13068C41O13074C46O13092C51O13103C56O13142C59O13148C64O13179C66O13209C73O13215C78O13209C79O13267C85O13274C90O13288C95O13295C100O13312C101O13321C104O13328C109O13356,,
code-creation,LazyCompile,10,286597,0x7b015f796e,177,fromStringFast node:buffer:413:24,0x3d62a036f88,~
code-source-info,0x7b015f796e,24,12347,12887,C0O12385C5O12385C11O12410C14O12432C18O12441C21O12421C26O12454C31O12490C36O12461C41O12503C42O12509C44O12523C49O12534C51O12532C54O12520C59O12552C62O12552C65O12577C72O12592C77O12603C85O12577C91O12646C110O12646C116O12678C118O12689C123O12775C130O12794C135O12805C143O12779C149O12834C156O12848C162O12845C168O12859C171O12859C174O12875C176O12884,,
code-creation,LazyCompile,10,286700,0x7b015f7b5e,36,FastBuffer node:internal/buffer:958:14,0x1b3a04cbb00,~
code-source-info,0x7b015f7b5e,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,286762,0x7b015f7c5e,23,write node:buffer:593:12,0x3d62a037398,~
code-source-info,0x7b015f7c5e,24,17139,17203,C0O17173C17O17173C22O17203,,
code-creation,LazyCompile,10,286831,0x7b015f7d4e,42,alignPool node:buffer:159:19,0x3d62a0369c0,~
code-source-info,0x7b015f7d4e,24,4178,4288,C0O4214C4O4229C9O4243C19O4254C25O4267C34O4277C41O4287,,
code-creation,LazyCompile,10,286991,0x7b015f810e,251,promisify node:internal/util:324:19,0x3d62a005f48,~
code-source-info,0x7b015f810e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,287215,0x7b015f869e,65,EventEmitterMixin node:internal/event_target:966:27,0x20acf65e3a8,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x7b015f869e,44,26757,27191,C0O26810C23O27001C30O27033C33O27046C38O27001C43O27061C47O27095C52O27136C57O27095C62O27163C64O27188,,
tick,0x7ffd5975fab3,289136,0,0x0,3,0x7ff6f6704670,0x7b015f097f,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015ecaa2,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015ec332,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015df9e6,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015dddec,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015d9611,0x1ca1ecc4c63,0x1ca1ecc48e5,0x7b015d5464,0x6ba51c5502,0x7a701bef45
code-creation,Eval,10,289728,0x7b015fb3c6,5, node:internal/modules/esm/translators:1:1,0x7b015faf60,~
script-source,125,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x7b015fb3c6,125,0,11025,C0O0C4O11025,,
code-creation,Function,10,290464,0x7b015fbb66,715, node:internal/modules/esm/translators:1:1,0x7b015fb340,~
code-source-info,0x7b015fbb66,125,0,11025,C0O0C180O28C186O54C192O76C198O88C204O102C210O127C216O161C222O176C228O198C233O210C239O222C245O249C251O274C257O304C268O343C274O392C275O392C277O543C283O543C288O526C294O591C300O591C305O567C311O576C317O673C323O673C328O620C334O637C340O658C346O767C352O767C357O734C363O748C369O834C375O834C379O834C381O888C387O888C391O888C393O979C399O979C404O956C410O971C416O1008C422O1008C427O1041C440O1042C446O1008C448O1125C454O1125C459O1097C465O1233C471O1233C476O1259C481O1163C487O1194C493O1300C499O1300C504O1276C510O1369C513O1369C517O1369C519O1425C522O1410C528O1455C534O1455C538O1455C540O1524C546O1524C551O1504C557O1586C563O1586C568O1570C574O1623C575O1623C577O1959C579O1959C585O1975C587O1995C591O2011C593O2034C597O2069C598O2069C600O3107C613O3107C619O4409C626O4418C629O4401C631O4452C635O4452C637O4472C650O4472C656O7670C669O7670C675O8132C688O8132C694O10136C707O10136C714O11024,,
code-creation,Eval,10,290820,0x7b015fd05e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x7b015fce88,~
script-source,126,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x7b015fd05e,126,0,1828,C0O0C4O1828,,
code-creation,Function,10,290994,0x7b015fd286,111, node:internal/modules/esm/create_dynamic_module:1:1,0x7b015fcfd8,~
code-source-info,0x7b015fd286,126,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
new,MemoryChunk,0x376a1940000,262144
code-creation,Eval,10,291601,0x7b015fe1be,5, node:internal/vm/module:1:1,0x7b015fdc78,~
script-source,127,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x7b015fe1be,127,0,12768,C0O0C4O12768,,
code-creation,Function,10,292445,0x7b015ff41e,872, node:internal/vm/module:1:1,0x7b015fe138,~
code-source-info,0x7b015ff41e
code-creation,Function,10,292594,0x7b015ff95e,30,<instance_members_initializer> node:internal/vm/module:256:3,0x7b015fe7a8,~
code-source-info,0x7b015ff95e,127,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,292828,0x376a19424d6,30,ESMLoader node:internal/modules/esm/loader:57:1,0x7b015df090,~
code-source-info,0x376a19424d6,114,1618,1618,C9O1618C29O1618,,
code-creation,LazyCompile,10,292914,0x376a19437fe,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x7b015e1578,~
code-source-info,0x376a19437fe,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,292994,0x376a1943aa6,13,desc.value node:internal/per_context/primordials:325:32,0x2de39449f70,~
code-source-info,0x376a1943aa6,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,293056,0x376a1943bae,13,SafeIterator node:internal/per_context/primordials:270:16,0x2de394499c0,~
code-source-info,0x376a1943bae,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,293121,0x376a1943ce6,13,next node:internal/per_context/primordials:273:9,0x2de39449a88,~
code-source-info,0x376a1943ce6,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,293371,0x376a194435e,28,getEmbedderOptions node:internal/options:32:28,0x6ba51c4400,~
code-source-info,0x376a194435e,96,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,293576,0x376a1944606,315,Module._initPaths node:internal/modules/cjs/loader:1231:29,0x7b015d8648,~
code-source-info,0x376a
code-creation,Eval,10,293864,0x376a194750e,5, node:internal/modules/run_main:1:1,0x376a19472e8,~
script-source,128,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x376a194750e,128,0,2621,C0O0C4O2621,,
code-creation,Function,10,294067,0x376a19477f6,178, node:internal/modules/run_main:1:1,0x376a1947488,~
code-source-info,0x376a19477f6,128,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,294255,0x376a1947de6,163,initializeESMLoader node:internal/bootstrap/pre_execution:424:29,0x6ba51c2568,~
code-source-info,0x376a1947de6,95,13897,15012,C0O13981C6O13981C13O14030C16O14026C21O14024C25O14050C30O14054C34O14074C40O14103C41O14110C42O14215C48O14215C53O14129C58O14170C63O14262C69O14262C74O14466C79O14424C83O14537C88O14498C92O14707C100O14711C106O14830C112O14830C117O14778C122O14786C127O14804C132O14877C138O14877C143O14897C145O14907C149O14922C151O14942C155O14967C157O14986C162O15011,,
code-creation,LazyCompile,10,294373,0x376a1947ffe,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x7b015d7b38,~
code-source-info,0x376a1947ffe,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,294445,0x376a19480e6,53,loadPreloadModules node:internal/bootstrap/pre_execution:467:28,0x6ba51c2658,~
code-source-info,0x376a19480e6,95,15504,15835,C0O15593C8O15593C13O15625C15O15662C21O15669C26O15750C32O15750C37O15750C42O15715C47O15795C52O15834,,
code-creation,LazyCompile,10,294526,0x376a19482d6,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:459:36,0x6ba51c2608,~
code-source-info,0x376a19482d6,95,15245,15473,C0O15253C8O15257C14O15303C17O15311C28O15311C34O15425C40O15425C45O15462C49O15472,,
code-creation,LazyCompile,10,294620,0x376a19483fe,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x376a1947680,~
code-source-info,0x376a19483fe,128,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,294706,0x376a194882e,68,resolveMainPath node:internal/modules/run_main:15:25,0x376a1947540,~
code-source-info,0x376a194882e,128,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,294907,0x376a1948a2e,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x7b015d7e58,~
code-source-info,0x376a1948a2e
code-creation,LazyCompile,10,295091,0x376a1948dde,109,isAbsolute node:path:402:13,0x20acf64d5d0,~
code-source-info,0x376a1948dde,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,295284,0x376a19490d6,85,stat node:internal/modules/cjs/loader:151:14,0x7b015d73f8,~
code-source-info,0x376a19490d6,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,295408,0x376a19492e6,232,toNamespacedPath node:path:618:19,0x20acf64d6f8,~
code-source-info,0x376a19492e6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,295662,0x376a1949546,42,toRealPath node:internal/modules/cjs/loader:393:20,0x7b015d76c8,~
code-source-info,0x376a1949546,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,296067,0x376a194995e,1036,realpathSync node:fs:2412:22,0x15162b19320,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x376a194995e
code-creation,LazyCompile,10,301801,0x376a1950026,123,getOptions node:internal/fs/utils:314:20,0x15162b21a88,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x376a1950026,81,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,303539,0x376a1951f7e,48,assertEncoding node:internal/fs/utils:151:24,0x15162b21490,~
code-source-info,0x376a1951f7e,81,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,303682,0x376a1952096,20,toPathIfFileURL node:internal/url:1496:25,0x1b3a04f9088,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x376a1952096,39,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
tick,0x7ff6f60d0615,306675,0,0x0,3,0x7ff6f6704670,0x376a1949977,0x376a1949569,0x376a1948b59,0x376a194884c,0x376a1948417,0x7a701bef69
code-creation,LazyCompile,10,306742,0x376a19551c6,17,isURLInstance node:internal/url:1492:23,0x1b3a04f9038,~
code-source-info,0x376a19551c6,39,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,306851,0x376a1955326,81, node:internal/fs/utils:668:38,0x15162b224b0,~
code-source-info,0x376a1955326,81,18830,19110,C14O18864C22O18897C25O18897C31O18924C36O18955C49O18930C54O18924C55O19023C68O19023C74O19062C76O19092C78O19092C80O19109,,
code-creation,LazyCompile,10,306955,0x376a1955536,110, node:internal/fs/utils:357:35,0x15162b21b28,~
code-source-info,0x376a1955536,81,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,307041,0x376a19556ae,16,isUint8Array node:internal/util/types:13:22,0x3d62a007088,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x376a19556ae,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,307317,0x376a1955b56,23,splitRoot node:fs:2362:33,0x15162b191d8,~
code-source-info,0x376a1955b56,80,65151,65217,C0O65164C9O65191C12O65171C19O65208C22O65212,,
code-creation,LazyCompile,10,307616,0x376a1955d7e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x15162b21ad8,~
code-source-info,0x376a1955d7e,81,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,307735,0x376a1955ef6,53,nextPart node:fs:2388:31,0x15162b192d0,~
code-source-info,0x376a1955ef6,80,65908,66159,C0O65935C4O65931C9O65968C14O65968C20O66052C22O66063C24O66059C31O66093C33O66089C38O66122C40O66131C41O65945C47O65922C50O66144C52O66154,,
code-creation,LazyCompile,10,307911,0x376a1956056,34,isFileType node:fs:205:20,0x15162b16f40,~
code-source-info,0x376a1956056,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,308643,0x1ca1ecc5160,6232,resolve node:path:158:10,0x20acf64d510,^
code-source-info,0x1ca1ecc5160,41,4875,9786,,,
code-creation,Function,11,308697,0x1ca1ecc6a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x6ba51c4360,^
code-source-info,0x1ca1ecc6a20,96,514,620,,,
code-creation,Function,11,308736,0x1ca1ecc6c40,104,next node:internal/per_context/primordials:273:9,0x2de39449a88,^
code-source-info,0x1ca1ecc6c40,6,8126,8173,,,
code-creation,Function,11,308776,0x1ca1ecc6d20,252,SafeMap node:internal/per_context/primordials:351:16,0x2de3944a018,^
code-source-info,0x1ca1ecc6d20,6,10550,10567,,,
code-creation,Function,11,308820,0x1ca1ecc6e80,412,isWindowsDeviceRoot node:path:60:29,0x20acf64d408,^
code-source-info,0x1ca1ecc6e80,41,1991,2136,,,
code-creation,Function,11,308863,0x1ca1ecc7080,272,validateString node:internal/validators:118:24,0x2de3947c958,^
code-source-info,0x1ca1ecc7080,15,3534,3646,,,
code-creation,Function,11,308906,0x1ca1ecc7200,544,nextPart node:fs:2388:31,0x15162b192d0,^
code-source-info,0x1ca1ecc7200,80,65908,66159,,,
code-creation,LazyCompile,10,309277,0x376a1956dae,72,encodeRealpathResult node:fs:2375:30,0x15162b19280,~
code-source-info,0x376a1956dae,80,65497,65763,C0O65520C4O65545C10O65565C17O65574C22O65591C24O65605C25O65626C30O65633C35O65633C41O65662C48O65671C53O65692C55O65708C56O65733C61O65750C66O65733C71O65760,,
code-creation,LazyCompile,10,309419,0x376a1956f5e,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x376a1947590,~
code-source-info,0x376a1956f5e,128,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,309555,0x376a195717e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x7b015d75d8,~
code-source-info,0x376a195717e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,309710,0x376a19574de,234,readPackage node:internal/modules/cjs/loader:290:21,0x7b015d7588,~
code-source-info,0x376a19574de,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,309886,0x376a19577e6,199,read node:internal/modules/package_json_reader:16:14,0x7b015dd148,~
code-source-info,0x376a19577e6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,310506,0x376a195870e,619,Module._load node:internal/modules/cjs/loader:757:24,0x7b015d8138,~
code-source-info,0x376a195870e
code-creation,LazyCompile,10,310865,0x376a1958e76,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x7b015d81c0,~
code-source-info,0x376a1958e
code-creation,LazyCompile,10,311090,0x376a1959436,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x2de3944fa90,~
code-source-info,0x376a1959436,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,311218,0x376a19596ee,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x7b015d8008,~
code-source-info,0x376a19596ee
code-creation,LazyCompile,10,311355,0x376a19599b6,89,logger node:internal/util/debuglog:95:18,0x3d62a021c20,~
code-source-info,0x376a19599b6,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,311437,0x376a1959af6,3, node:internal/per_context/primordials:276:21,0x2de39449b30,~
code-source-info,0x376a1959af6,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,311527,0x376a1959bce,140,debug node:internal/util/debuglog:76:15,0x3d62a021b80,~
code-source-info,0x376a1959bce,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,311615,0x376a1959d7e,41,init node:internal/util/debuglog:72:16,0x3d62a021b30,~
code-source-info,0x376a1959d7e,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,311672,0x376a1959e6e,2,testEnabled node:internal/util/debuglog:32:19,0x6ba51d4968,~
code-source-info,0x376a1959e6e,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,311768,0x376a195a006,116,debuglogImpl node:internal/util/debuglog:49:22,0x3d62a021980,~
code-source-info,0x376a195a006,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,311847,0x376a195a1be,10, node:internal/modules/cjs/loader:272:66,0x7b015d7e08,~
code-source-info,0x376a195a1be,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,311901,0x376a195a26e,2,noop node:internal/util/debuglog:47:14,0x3d62a021930,~
code-source-info,0x376a195a26e,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,311971,0x376a195a3ae,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x7b015d77b8,~
code-source-info,0x376a195a3ae,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,312100,0x376a195a5ee,235,trySelf node:internal/modules/cjs/loader:441:17,0x7b015d7808,~
code-source-info,0x376a195a5ee,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,312248,0x376a195a886,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x7b015d1f70,~
code-source-info,0x376a195a886,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,312342,0x376a195b146,94,Module node:internal/modules/cjs/loader:172:16,0x7b015d7498,~
code-source-info,0x376a195b146,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,312530,0x376a195b33e,449,dirname node:path:653:10,0x20acf64d768,~
code-source-info,0x376a195b33e
code-creation,LazyCompile,10,312718,0x376a195b6f6,45,updateChildren node:internal/modules/cjs/loader:165:24,0x7b015d7448,~
code-source-info,0x376a195b6f6,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,312842,0x376a195b8ee,246,Module.load node:internal/modules/cjs/loader:969:33,0x7b015d8250,~
code-source-info,0x376a195b8ee,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,313015,0x376a195bbf6,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x7b015d7ee8,~
code-source-info,0x376a195bbf
code-creation,Function,11,313210,0x1ca1ecc7480,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x7b015d7ee8,^
code-source-info,0x1ca1ecc7480,111,17765,19316,,,
code-creation,Function,11,313262,0x1ca1ecc7d00,320,isFileType node:fs:205:20,0x15162b16f40,^
code-source-info,0x1ca1ecc7d00,80,5489,5737,,,
code-creation,Function,11,313325,0x1ca1ecc7ea0,1936,toNamespacedPath node:path:618:19,0x20acf64d6f8,^
code-source-info,0x1ca1ecc7ea0,41,20086,21201,,,
code-creation,LazyCompile,10,313435,0x376a195c25e,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x7b015d7768,~
code-source-info,0x376a195c25e,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,313625,0x376a195c43e,415,basename node:path:749:11,0x20acf64d7d0,~
code-source-info,0x376a195c43e
code-creation,LazyCompile,10,313894,0x376a195c95e,485,Module._extensions..js node:internal/modules/cjs/loader:1112:37,0x7b015d83f0,~
code-source-info,0x376a195c95e
code-creation,LazyCompile,10,314117,0x376a195cdbe,376,readFileSync node:fs:450:22,0x15162b173f8,~
code-source-info,0x376a195cdbe
code-creation,LazyCompile,10,314272,0x376a195d0de,30,isEncoding node:buffer:530:40,0x3d62a037270,~
code-source-info,0x376a195d0de,24,15325,15460,C0O15341C6O15389C12O15396C20O15415C23O15415C28O15443C29O15457,,
code-creation,LazyCompile,10,314343,0x376a195d1e6,30,normalizeEncoding node:internal/util:160:27,0x3d62a005aa8,~
code-source-info,0x376a195d1e6,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,314406,0x376a195d2ce,9,isUint32 node:internal/validators:40:18,0x2de3947c7a8,~
code-source-info,0x376a195d2ce,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,314492,0x376a195d426,113,openSync node:fs:576:18,0x15162b175e0,~
code-source-info,0x376a195d426,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,314578,0x376a195d5a6,37, node:internal/fs/utils:680:42,0x15162b22500,~
code-source-info,0x376a195d5a6,81,19157,19296,C14O19213C19O19213C24O19248C29O19248C34O19281C36O19293,,
code-creation,LazyCompile,10,314705,0x376a195d97e,515,stringToFlags node:internal/fs/utils:555:23,0x15162b22320,~
code-source-info,0x376a195d97e
code-creation,LazyCompile,10,314889,0x376a195dd6e,97,parseFileMode node:internal/validators:59:23,0x2de3947c7f8,~
code-source-info,0x376a195dd6e,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,315034,0x376a195df3e,206, node:internal/validators:84:3,0x2de3947c8b8,~
code-source-info,0x376a195df3e,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,315118,0x376a195e106,9,isInt32 node:internal/validators:36:17,0x2de3947c298,~
code-source-info,0x376a195e106,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,315307,0x376a195e20e,66,tryStatSync node:fs:404:21,0x15162b17308,~
code-source-info,0x376a195e20e,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,315432,0x376a195e386,96,tryCreateBuffer node:fs:414:25,0x15162b17358,~
code-source-info,0x376a195e386,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,315526,0x376a195e4de,17,allocUnsafe node:buffer:373:42,0x3d62a036de8,~
code-source-info,0x376a195e4de,24,11265,11323,C0O11277C5O11277C9O11298C12O11305C16O11320,,
code-creation,LazyCompile,10,315597,0x376a195e5e6,54, node:buffer:349:36,0x3d62a036d30,~
code-source-info,0x376a195e5e6,24,10539,10699,C0O10554C8O10554C13O10587C14O10598C21O10614C23O10611C28O10634C33O10666C46O10640C51O10634C53O10698,,
code-creation,LazyCompile,10,315666,0x376a195e70e,30,validateNumber node:internal/validators:123:24,0x2de3947c9f8,~
code-source-info,0x376a195e70e,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,315748,0x376a195e826,119,allocate node:buffer:398:18,0x3d62a036f38,~
code-source-info,0x376a195e826,24,11992,12320,C0O12004C1O12013C6O12026C11O12033C16O12050C17O12059C20O12078C24O12087C27O12068C32O12102C34O12114C39O12125C41O12123C44O12111C49O12145C52O12145C55O12174C62O12189C67O12200C75O12174C81O12224C88O12238C94O12235C100O12249C103O12249C106O12267C108O12276C109O12285C114O12292C118O12317,,
code-creation,LazyCompile,10,315863,0x376a195e9e6,86,tryReadSync node:fs:429:21,0x15162b173a8,~
code-source-info,0x376a195e9e6,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,315988,0x376a195ebce,239,readSync node:fs:684:18,0x15162b176b0,~
code-source-info,0x376a195ebce,80,17803,18775,C0O17803C2O17847C7O17852C13O17877C18O17877C22O17920C29O17927C34O18000C40O18024C52O18036C58O18052C64O18064C70O18097C75O18124C80O18153C93O18153C98O18201C105O18219C106O18230C111O18244C112O18253C113O18275C119O18286C124O18300C140O18306C145O18300C146O18432C151O18480C162O18432C167O18498C172O18525C176O18545C184O18545C189O18602C191O18624C196O18632C221O18632C227O18726C232O18726C236O18758C238O18772,,
code-creation,LazyCompile,10,316106,0x376a195ee26,52, node:internal/fs/utils:686:40,0x15162b22550,~
code-source-info,0x376a195ee26,81,19341,19470,C14O19371C22O19375C29O19400C30O19409C31O19420C44O19420C49O19457C51O19467,,
code-creation,LazyCompile,10,316188,0x376a195ef96,51, node:internal/validators:191:40,0x2de3947cc20,~
code-source-info,0x376a195ef96,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,316276,0x376a195f0ee,151, node:internal/validators:73:3,0x2de3947c868,~
code-source-info,0x376a195f0ee,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,316377,0x376a195f2f6,103, node:internal/fs/utils:636:3,0x15162b22410,~
code-source-info,0x376a195f2f6,81,17915,18305,C0O17956C1O17967C6O17981C22O17987C27O17981C28O18047C29O18058C34O18072C50O18078C55O18072C56O18138C58O18149C64O18158C69O18183C82O18273C95O18189C100O18183C102O18304,,
code-creation,LazyCompile,10,316482,0x376a195f5fe,151, node:internal/fs/utils:886:42,0x15162b22870,~
code-source-info,0x376a195f5fe,81,24872,25444,C0O24897C6O24938C14O24938C21O24987C27O25028C32O25051C35O25046C37O25043C47O25077C53O25084C56O25071C61O25100C77O25184C80O25179C98O25204C104O25211C117O25106C122O25100C125O25288C143O25294C148O25288C150O25443,,
code-creation,LazyCompile,10,316614,0x376a195f7b6,47,closeSync node:fs:526:19,0x15162b17508,~
code-source-info,0x376a195f7b6,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,316744,0x376a195f8ee,162,toString node:buffer:783:46,0x3d62a038c70,~
code-source-info,0x376a195f8ee,24,24068,24660,C0O24068C2O24110C8O24117C13O24143C20O24161C25O24143C31O24169C32O24197C37O24210C38O24220C43O24231C48O24250C50O24260C55O24273C57O24283C58O24297C65O24314C71O24343C76O24355C83O24379C90O24394C92O24402C97O24417C99O24427C100O24433C104O24478C109O24478C115O24500C116O24518C119O24518C124O24547C126O24575C133O24581C138O24575C139O24633C156O24633C161O24657,,
code-creation,LazyCompile,10,316926,0x376a195fbae,499,getEncodingOps node:buffer:679:24,0x3d62a038ac8,~
code-source-info,0x376a195fbae
code-creation,LazyCompile,10,317112,0x376a195ff96,12,slice node:buffer:594:12,0x3d62a037490,~
code-source-info,0x376a195ff96,24,17217,17263,C0O17242C5O17242C11O17263,,
code-creation,LazyCompile,10,317350,0x376a1960216,499,Module._compile node:internal/modules/cjs/loader:1057:37,0x7b015d8360,~
code-source-info,0x376a
code-creation,LazyCompile,10,317630,0x376a1960786,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x7b015cf490,~
code-source-info,0x376a1960786,108,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,317743,0x376a19611e6,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x7b015cf3f0,~
code-source-info,0x376a19611e6,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,317832,0x376a196135e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x7b015cf440,~
code-source-info,0x376a196135e,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,317912,0x376a19614d6,30,validateBoolean node:internal/validators:139:25,0x2de3947ca98,~
code-source-info,0x376a19614d6,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,318038,0x376a19618ce,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x7b015d79e8,~
code-source-info,0x376a19618ce,111,32708,33738,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33180C74O33200C81O33210C86O33226C98O33348C102O33365C113O33210C118O33607C130O33632C135O33644C142O33655C147O33685C157O33685C162O33720C164O33720,,
code-creation,LazyCompile,10,318275,0x376a19620be,472,compileFunction node:vm:308:25,0x15162b34360,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x376a19620be
code-creation,LazyCompile,10,319276,0x376a1963286,95, node:internal/validators:168:39,0x2de3947cb58,~
code-source-info,0x376a1963286,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,319350,0x376a19633e6,27, node:vm:313:27,0x376a1961d90,~
code-source-info,0x376a19633e6,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,LazyCompile,10,319434,0x376a1963576,149, node:internal/validators:101:40,0x2de3947c908,~
code-source-info,0x376a1963576,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,Eval,10,319561,0x376a19638fe,5, C:\\Users\\facun\\OneDrive\\Escritorio\\programacion\\CoderHouse\\EntregaChildProcess\\src\\server\\fork.js:1:1,0x376a19637b8,~
script-source,129,C:\\Users\\facun\\OneDrive\\Escritorio\\programacion\\CoderHouse\\EntregaChildProcess\\src\\server\\fork.js,process.on('exit'\x2C () => {\x0d\n    console.log(`worker ${process.pid} cerrado`)\x0d\n})\x0d\n\x0d\nprocess.send('start')\x0d\n\x0d\nprocess.on('message'\x2C ({ PORT }) => {\x0d\n    console.log(`Proceso Fork: Puerto: ${PORT} - pid: ${process.pid}`)\x0d\n})\x0d\n\x0d\n
code-source-info,0x376a19638fe,129,0,226,C0O0C4O226,,
code-creation,Function,10,319638,0x376a1963a56,65, C:\\Users\\facun\\OneDrive\\Escritorio\\programacion\\CoderHouse\\EntregaChildProcess\\src\\server\\fork.js:1:1,0x376a1963878,~
code-source-info,0x376a1963a56,129,0,226,C0O0C4O8C17O8C23O84C27O92C35O92C40O109C44O117C57O117C64O225,,
code-creation,LazyCompile,10,319782,0x376a1963d3e,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x7b015fe1f0,~
code-source-info,0x376a1963d3e,127,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,319909,0x376a1964f16,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x7b015d1fc0,~
code-source-info,0x376a1964f16,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,320023,0x376a19652a6,5,get node:internal/bootstrap/pre_execution:307:8,0x7b015d4860,~
code-source-info,0x376a19652a6,95,10162,10197,C0O10174C4O10190,,
code-creation,LazyCompile,10,320151,0x376a196544e,178,target.send node:internal/child_process:724:25,0x7b015c5988,~
code-source-info,0x376a196544e,100,20538,21274,C0O20538C12O20582C18O20625C21O20651C24O20678C29O20711C35O20755C38O20782C43O20815C47O20851C57O20851C62O20901C73O20938C80O20956C83O20965C89O20985C92O20997C109O20997C114O21039C115O21063C122O21063C127O21063C129O21098C135O21143C140O21151C148O21151C156O21196C161O21204C171O21204C176O21256C177O21269,,
tick,0x7ff6f66a85af,320259,0,0x0,3,0x7ff6f6704670,0x376a1963a79,0x376a19603e1,0x376a195cb3b,0x376a195b97e,0x376a19588a7,0x376a1948447,0x7a701bef69
code-creation,LazyCompile,10,320496,0x376a1965b76,925,target._send node:internal/child_process:750:26,0x7b015c5a10,~
code-source-info,0x376a1965b
code-creation,LazyCompile,10,320741,0x376a19661fe,39,writeChannelMessage node:internal/child_process/serialization:126:22,0x7b015c9400,~
code-source-info,0x376a19661fe,107,4141,4288,C0O4195C5O4195C12O4218C16O4246C33O4246C38O4283,,
code-creation,LazyCompile,10,320855,0x376a196638e,44,refCounted node:internal/child_process:539:13,0x6ba51e0b78,~
code-source-info,0x376a196638e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,321039,0x376a196654e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x1b3a04da9a0,~
code-source-info,0x376a196654e
code-creation,LazyCompile,10,321179,0x376a1966826,43,shift node:internal/fixed_queue:108:8,0x1b3a04dfcc0,~
code-source-info,0x376a1966826,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,321263,0x376a196696e,54,shift node:internal/fixed_queue:80:8,0x1b3a04dfad0,~
code-source-info,0x376a196696e,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,321348,0x376a1966aa6,42,emitBeforeScript node:internal/async_hooks:510:26,0x2de39478760,~
code-source-info,0x376a1966aa6,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,321438,0x376a1966bf6,180,pushAsyncContext node:internal/async_hooks:540:26,0x2de39478908,~
code-source-info,0x376a1966bf6,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,321572,0x376a1966e0e,125, node:internal/child_process:708:22,0x7b015cb2f0,~
code-source-info,0x376a1966e0e,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,321677,0x376a1966fce,31,listenerCount node:events:858:23,0x3d62a02bc80,~
code-source-info,0x376a1966fce,23,25642,25924,C0O25674C5O25688C7O25740C9O25746C13O25761C17O25808C19O25817C20O25830C24O25887C28O25894C29O25912C30O25921,,
code-creation,LazyCompile,10,321747,0x376a19670d6,13,destroyHooksExist node:internal/async_hooks:487:27,0x2de39478670,~
code-source-info,0x376a19670d6,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,321808,0x376a19671c6,32,emitAfterScript node:internal/async_hooks:518:25,0x2de394787b0,~
code-source-info,0x376a19671c6,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,321898,0x376a196732e,167,popAsyncContext node:internal/async_hooks:554:25,0x2de39478958,~
code-source-info,0x376a196732e,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,321997,0x376a196750e,13,enabledHooksExist node:internal/async_hooks:475:27,0x2de39478560,~
code-source-info,0x376a196750e,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,322241,0x376a1967876,627,processPromiseRejections node:internal/process/promises:211:34,0x1b3a04de3d8,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x376a
code-creation,LazyCompile,10,323074,0x376a19687ce,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x1b3a04dd948,~
code-source-info,0x376a19687ce,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,323158,0x376a19688c6,33,req.oncomplete node:internal/child_process:851:26,0x376a19656c0,~
code-source-info,0x376a19688c6,100,24770,24899,C0O24789C7O24797C12O24797C16O24824C22O24873C27O24873C32O24898,,
code-creation,LazyCompile,10,323234,0x376a19689d6,56,unrefCounted node:internal/child_process:545:15,0x6ba51e0bc8,~
code-source-info,0x376a19689d6,100,14852,14983,C0O14862C3O14872C9O14873C14O14879C21O14894C26O14922C28O14927C32O14936C37O14936C41O14957C49O14957C55O14982,,
code-creation,LazyCompile,10,323392,0x376a1968be6,383,channel.onread node:internal/child_process:601:28,0x7b015c5860,~
code-source-info,0x376a1968be6,100,16285,17489,C0O16325C3O16333C8O16353C12O16375C16O16388C20O16428C31O16444C33O16443C37O16486C48O16502C50O16501C54O16543C72O16543C78O16594C82O16619C84O16633C90O16678C98O16678C128O16667C156O16667C159O16949C164O16953C173O16999C180O17003C185O17037C190O17060C200O17037C205O17095C209O17109C217O17150C229O17150C236O17233C248O17233C253O16656C319O17316C320O17331C324O17347C327O17354C332O17354C336O17375C343O17392C345O17390C349O17404C352O17412C357O17412C361O17428C365O17443C369O17458C377O17458C382O17488,,
code-creation,LazyCompile,10,323565,0x376a1968f3e,277,parseChannelMessages node:internal/child_process/serialization:105:24,0x7b015c93b0,~
code-source-info,0x376a1968f3e,107,3333,4115,C10O3333C15O3333C35O3333C39O3373C45O3380C50O3387C51O3394C52O3402C54O3414C56O3413C61O3452C63O3460C68O3482C76O3478C81O3476C85O3532C92O3561C94O3560C98O3577C103O3577C112O3532C118O3639C122O3646C126O3731C128O3737C132O3763C133O3785C138O3801C140O3809C149O3825C152O3822C158O3863C162O3883C164O3882C169O3904C172O3896C175O3873C179O3929C181O3934C183O3934C188O3969C195O3991C199O3975C210O3969C230O3969C234O3956C239O3916C242O4004C244O4012C249O4025C253O4056C255O4084C257O4083C261O4097C267O4104C271O4074C276O4114,,
code-creation,LazyCompile,10,323715,0x376a19691f6,71,StringDecoder node:string_decoder:83:23,0x9c49b52f20,~
script-source,61,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n *\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n *\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x376a19691f6,61,2793,2974,C0O2809C3O2825C7O2823C11O2857C13O2862C18O2880C21O2887C28O2893C31O2887C36O2878C40O2904C42O2909C44O2908C50O2925C55O2943C58O2961C62O2955C65O2941C70O2973,,
code-creation,LazyCompile,10,324134,0x376a19698ae,73,normalizeEncoding node:string_decoder:62:27,0x9c49b52c20,~
code-source-info,0x376a19698ae,61,2197,2441,C0O2221C5O2234C10O2234C16O2261C18O2292C23O2303C30O2318C32O2314C39O2333C42O2340C47O2340C54O2364C61O2370C66O2364C67O2406C69O2417C70O2426C72O2438,,
code-creation,LazyCompile,10,324258,0x376a1969a46,73,alloc node:buffer:360:30,0x3d62a036d80,~
code-source-info,0x376a1969a46,24,10822,11060,C0O10850C5O10850C9O10871C14O10902C20O10916C25O10940C30O10940C35O10971C40O11002C54O10978C59O11020C60O11029C67O11036C72O11057,,
code-creation,LazyCompile,10,324356,0x376a1969bee,63,write node:string_decoder:97:47,0x9c49b52f70,~
code-source-info,0x376a1969bee,61,3324,3619,C0O3335C6O3369C8O3380C9O3384C14O3389C20O3418C38O3424C43O3418C44O3575C51O3594C53O3593C57O3582C62O3616,,
code-creation,LazyCompile,10,324461,0x376a1969d2e,80,isInternal node:internal/child_process:962:20,0x6ba51e03d8,~
code-source-info,0x376a1969d2e,100,27923,28221,C0O27938C3O27954C12O28034C20O28073C25O28077C32O28086C35O28102C39O28084C46O28123C49O28152C58O28160C61O28176C66O28123C74O28201C76O28184C79O28218,,
code-creation,LazyCompile,10,324547,0x376a1969e8e,51,handleMessage node:internal/child_process:948:25,0x7b015c5770,~
code-source-info,0x376a1969e8e,100,27615,27818,C0O27650C3O27662C9O27678C10O27685C11O27711C22O27762C27O27770C44O27770C50O27817,,
code-creation,LazyCompile,10,324665,0x376a196a026,115,emit node:internal/child_process:936:16,0x7b015c5720,~
code-source-info,0x376a196a026,100,27307,27587,C0O27339C5O27361C13O27381C21O27381C28O27416C31O27423C45O27423C50O27460C51O27467C52O27482C62O27516C71O27524C73O27523C86O27551C95O27558C104O27567C108O27482C114O27586,,
code-creation,LazyCompile,10,324753,0x376a196a1c6,50, C:\\Users\\facun\\OneDrive\\Escritorio\\programacion\\CoderHouse\\EntregaChildProcess\\src\\server\\fork.js:7:23,0x376a1963980,~
code-source-info,0x376a196a1c6,129,131,221,C0O134C5O152C9O160C19O189C30O204C34O212C43O160C49O220,,
code-creation,LazyCompile,10,324871,0x376a196a326,38,log node:internal/console/constructor:359:6,0x1b3a04e99a8,~
script-source,37,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (!new.target) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { ...consolePropAttributes\x2C value: stderr }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = StringPrototypeReplace(string\x2C /\\n/g\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    if (cliTable === undefined) cliTable = require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          if (map[key] === undefined)\x0d\n            map[key] = [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x376a196a326,37,11365,11451,C0O11365C3O11382C5O11387C7O11386C13O11404C18O11421C20O11420C24O11438C30O11403C37O11450,,
code-creation,LazyCompile,10,326255,0x376a196b99e,50,value node:internal/console/constructor:321:20,0x1b3a04e9750,~
code-source-info,0x376a196b99e,37,9894,10070,C0O9923C2O9928C4O9927C8O9953C13O9947C19O9970C24O9970C29O10012C36O10032C44O10019C49O10063,,
code-creation,LazyCompile,10,326326,0x376a196bab6,27,get node:internal/console/constructor:203:14,0x1b3a04e9420,~
code-source-info,0x376a196bab6,37,5963,6058,C0O5981C6O5994C9O6010C16O6001C22O6031C26O6045,,
code-creation,LazyCompile,10,326420,0x376a196bc56,97,getStdout node:internal/bootstrap/switches/is_main_thread:125:19,0x15162b3ed48,~
script-source,91,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C () => stdout._refreshSize());\x0d\n  }\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C () => stderr._refreshSize());\x0d\n  }\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd\x2C {\x0d\n        highWaterMark: 0\x2C\x0d\n        readable: true\x2C\x0d\n        writable: false\x0d\n      });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n
code-source-info,0x376a196bc56,91,3463,3786,C0O3471C6O3483C10O3497C11O3501C17O3510C24O3508C30O3543C37O3564C40O3571C44O3562C48O3648C55O3664C59O3683C64O3694C70O3708C73O3716C86O3716C92O3769C96O3783,,
code-creation,LazyCompile,10,326986,0x376a196c886,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:41:35,0x15162b3eca8,~
code-source-info,0x376a196c886,91,1352,2979,C0O1366C2O1438C7O1446C42O1507C48O1507C53O1547C60O1539C66O1571C68O1584C72O1600C74O1667C80O1667C85O1745C95O1725C101O1779C103O1792C107O1807C109O1879C115O1879C120O2116C123O2128C132O2147C137O2155C144O2158C149O2204C155O2204C160O2185C165O2265C180O2300C189O2257C197O2427C209O2447C215O2419C221O2536C223O2549C227O2566C229O2723C235O2723C240O2710C245O2749C250O2782C260O2758C266O2912C268O2922C272O2933C273O2949C277O2962C279O2976,,
code-creation,Eval,10,327328,0x376a196cf56,5, node:tty:1:1,0x376a196cd50,~
script-source,130,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C true\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    highWaterMark: 0\x2C\x0d\n    readable: true\x2C\x0d\n    writable: false\x2C\x0d\n    handle: tty\x2C\x0d\n    ...options\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C false\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    handle: tty\x2C\x0d\n    readable: false\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x376a196cf56,130,0,5230,C0O0C4O5230,,
code-creation,Function,10,327698,0x376a196d62e,426, node:tty:1:1,0x376a196ced0,~
code-source-info,0x376a196d62e,130,0,5230,C0O0C53O1183C59O1193C65O1213C70O1268C76O1268C80O1268C82O1308C85O1308C90O1293C96O1298C102O1353C108O1353C112O1353C114O1430C117O1437C122O1390C128O1406C134O1489C140O1489C145O1456C150O1474C155O1562C156O1562C158O2198C161O2230C169O2245C174O2252C179O2198C184O2265C190O2302C195O2265C200O2314C203O2325C212O2346C216O3579C219O3612C227O3627C232O3634C237O3579C242O3647C248O3685C253O3647C258O3697C261O3709C267O3725C271O3736C274O3748C281O3772C285O3792C288O3804C295O3824C299O3840C302O3852C311O3875C315O4354C318O4366C327O4385C331O4533C334O4545C343O4566C347O4720C350O4732C359O4752C363O4899C366O4911C375O4937C379O5080C382O5092C391O5116C395O5175C402O5194C408O5202C414O5214C420O5190C425O5229,,
code-creation,Eval,10,328060,0x376a196e61e,5, node:internal/tty:1:1,0x376a196e3c8,~
script-source,131,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeTest(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeTest(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION)\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeTest(/^xterm-256/\x2C env.TERM)) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeTest(term\x2C termEnv))) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x0d\n};\x0d\n
code-source-info,0x376a196e61e,131,0,6683,C0O0C4O6683,,
code-creation,Function,10,328527,0x376a196ea7e,358, node:internal/tty:1:1,0x376a196e598,~
code-source-info,0x376a196ea7e,131,0,6683,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2488C328O2488C330O2620C331O2620C333O6628C340O6650C346O6668C352O6643C357O6682,,
code-creation,LazyCompile,10,328823,0x376a196f87e,194,WriteStream node:tty:85:21,0x376a196d028,~
code-source-info,0x376a196f87e,130,2598,3575,C0O2608C2O2619C7O2649C12O2656C17O2676C18O2680C20O2687C26O2692C32O2705C37O2715C44O2721C49O2715C50O2762C52O2781C67O2781C73O2817C79O2844C86O2850C91O2844C92O2890C97O2894C102O2901C114O2927C118O2901C124O3378C129O3386C136O3386C141O3426C151O3426C157O3460C162O3468C167O3468C173O3495C175O3512C176O3534C179O3525C183O3544C185O3563C188O3554C193O3574,,
code-creation,LazyCompile,10,329088,0x376a1970436,793,Socket node:net:283:16,0x6ba51e6318,~
code-source-info,0x376a
code-creation,LazyCompile,10,329362,0x376a1970a46,109,Duplex node:internal/streams/duplex:52:16,0x20acf676028,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x376a1970a46,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
code-creation,LazyCompile,10,329809,0x376a19710ee,220,Readable node:internal/streams/readable:181:18,0x9c49b4c230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x376a19710ee,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,332484,0x376a1973ebe,18,Stream node:internal/streams/legacy:10:16,0x9c49b4ea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x376a1973ebe,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,333038,0x376a197499e,354,ReadableState node:internal/streams/readable:78:23,0x9c49b4c1e0,~
code-source-info,0x376a197499e
code-creation,LazyCompile,10,333244,0x376a1974dae,98,getHighWaterMark node:internal/streams/state:19:26,0x9c49b51578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x376a1974dae,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,333405,0x376a1975046,26,highWaterMarkFrom node:internal/streams/state:10:27,0x9c49b51418,~
code-source-info,0x376a1975046,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,333468,0x376a197511e,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x9c49b51528,~
code-source-info,0x376a197511e,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,333538,0x376a19751fe,17,BufferList node:internal/streams/buffer_list:14:14,0x9c49b508d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x376a19751fe,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,333984,0x376a197594e,98,construct node:internal/streams/destroy:225:19,0x20acf674ce8,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x376a197594e,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,334654,0x376a1976626,266,Writable node:internal/streams/writable:219:18,0x9c49b5ae48,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x376a1976626,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
tick,0x7ff6f60d0618,336621,0,0x0,3,0x7ff6f6704670,0x376a1970a72,0x376a1970572,0x376a196f8f4,0x376a196c8c2,0x376a196bc67,0x376a196babf,0x376a196b9a6,0x376a196a33e,0x7ff6f60d96b0,0x376a196a1f1,0x6ba51d3efa,0x376a196a053,0x376a19665ea
code-creation,LazyCompile,10,336780,0x376a1978696,341,WritableState node:internal/streams/writable:77:23,0x9c49b5ace8,~
code-source-info,0x376a1978696,63,2558,7182,C0O2898C6O2938C8O2967C11O2974C15O2956C20O3086C25O3107C27O3126C33O3102C37O3144C41O3186C52O3210C54O3229C60O3179C64O3443C69O3464C73O3479C88O3479C97O3553C102O3553C106O3462C110O3623C111O3640C115O3678C116O3693C120O3741C121O3753C125O3813C126O3824C130O3868C131O3882C135O3924C136O3939C140O4143C144O4165C150O4179C156O4194C158O4216C159O4213C163O4429C168O4453C170O4472C178O4450C182O4655C183O4667C187O4734C188O4747C192O4827C193O4839C197O5109C198O5119C202O5327C203O5349C207O5418C210O5441C217O5441C223O5431C227O5544C228O5557C232O5632C233O5646C237O5765C238O5789C242O5802C245O5802C249O5933C250O5948C254O6144C255O6161C259O6303C260O6320C264O6410C265O6428C269O6502C271O6520C277O6539C283O6549C287O6517C291O6639C293O6659C299O6678C305O6690C309O6656C313O6918C314O6931C318O7004C319O7016C323O7124C324O7142C328O7156C330O7161C335O7174C340O7181,,
code-creation,LazyCompile,10,336989,0x376a1978aa6,23,resetBuffer node:internal/streams/writable:202:21,0x9c49b5ad38,~
code-source-info,0x376a1978aa6,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,337102,0x376a1978bae,21,set node:internal/streams/readable:1174:8,0x9c49b4d1d8,~
code-source-info,0x376a1978bae,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,337177,0x376a1978ca6,14,set node:net:1703:6,0x6ba51e8128,~
code-source-info,0x376a1978ca6,101,47195,47228,C0O47201C2O47213C7O47222C13O47226,,
code-creation,LazyCompile,10,337241,0x376a1978d96,8,get node:net:1702:6,0x6ba51e80d8,~
code-source-info,0x376a1978d96,101,47159,47187,C0O47164C2O47176C4O47175C7O47185,,
code-creation,LazyCompile,10,337309,0x376a1978e7e,32,getNewAsyncId node:net:156:23,0x6ba51e6138,~
code-source-info,0x376a1978e7e,101,4137,4256,C0O4151C4O4184C14O4218C17O4218C22O4240C27O4240C31O4253,,
code-creation,LazyCompile,10,337431,0x376a197904e,196,Readable.on node:internal/streams/readable:874:33,0x9c49b4cb10,~
code-source-info,0x376a197904e,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,337577,0x376a19792c6,135,initSocketHandle node:net:254:26,0x6ba51e62c8,~
code-source-info,0x376a19792c6,101,6574,7174,C0O6591C5O6591C9O6608C10O6623C14O6712C20O6733C27O6741C32O6755C36O6773C43O6790C45O6788C49O6809C51O6814C57O6852C62O6833C66O6831C70O6883C72O6888C74O6887C78O6903C80O6940C82O6945C84O6944C88O6965C90O7007C94O7026C99O7031C105O7065C106O7072C107O7082C109O7087C114O7096C118O7128C123O7136C128O7136C134O7173,,
code-creation,LazyCompile,10,337703,0x376a19794f6,120,undestroy node:internal/streams/destroy:160:19,0x20acf674c28,~
code-source-info,0x376a19794f6,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,338017,0x376a1979bf6,96,value node:internal/console/constructor:300:20,0x1b3a04e96c8,~
code-source-info,0x376a1979bf6,37,9312,9811,C0O9342C2O9347C4O9346C8O9367C10O9377C15O9415C21O9451C29O9502C34O9502C41O9518C48O9565C53O9576C58O9576C64O9594C66O9630C72O9665C74O9680C78O9709C80O9724C81O9743C87O9758C93O9781C95O9804,,
code-creation,LazyCompile,10,338255,0x376a197a396,762,getColorDepth node:internal/tty:106:23,0x376a196e6a0,~
code-source-info,0x376a197a
code-creation,Eval,10,338802,0x376a197ba36,5, node:os:1:1,0x376a197b6e0,~
script-source,132,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst constants = internalBinding('constants').os;\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SYSTEM_ERROR\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst { validateInt32 } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getCPUs\x2C\x0d\n  getFreeMem\x2C\x0d\n  getHomeDirectory: _getHomeDirectory\x2C\x0d\n  getHostname: _getHostname\x2C\x0d\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\x0d\n  getLoadAvg\x2C\x0d\n  getPriority: _getPriority\x2C\x0d\n  getOSInformation: _getOSInformation\x2C\x0d\n  getTotalMem\x2C\x0d\n  getUserInfo\x2C\x0d\n  getUptime\x2C\x0d\n  isBigEndian\x2C\x0d\n  setPriority: _setPriority\x0d\n} = internalBinding('os');\x0d\n\x0d\nfunction getCheckedFunction(fn) {\x0d\n  return hideStackFrames(function checkError(...args) {\x0d\n    const ctx = {};\x0d\n    const ret = fn(...args\x2C ctx);\x0d\n    if (ret === undefined) {\x0d\n      throw new ERR_SYSTEM_ERROR(ctx);\x0d\n    }\x0d\n    return ret;\x0d\n  });\x0d\n}\x0d\n\x0d\nconst {\x0d\n  0: type\x2C\x0d\n  1: version\x2C\x0d\n  2: release\x2C\x0d\n} = _getOSInformation();\x0d\n\x0d\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\x0d\nconst getHostname = getCheckedFunction(_getHostname);\x0d\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSRelease = () => release;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSType = () => type;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSVersion = () => version;\x0d\n\x0d\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\x0d\ngetHostname[SymbolToPrimitive] = () => getHostname();\x0d\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\x0d\ngetOSType[SymbolToPrimitive] = () => getOSType();\x0d\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\x0d\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\x0d\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\x0d\ngetUptime[SymbolToPrimitive] = () => getUptime();\x0d\n\x0d\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\x0d\n\x0d\nconst avgValues = new Float64Array(3);\x0d\n\x0d\n/**\x0d\n * @returns {[number\x2C number\x2C number]}\x0d\n */\x0d\nfunction loadavg() {\x0d\n  getLoadAvg(avgValues);\x0d\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array of objects containing information about each\x0d\n * logical CPU core.\x0d\n *\x0d\n * @returns {Array<{\x0d\n *  model: string\x0d\n *  speed: number\x0d\n *  times: {\x0d\n *    user: number\x0d\n *    nice: number\x0d\n *    sys: number\x0d\n *    idle: number\x0d\n *    irq: number\x0d\n *  }\x0d\n * }>}\x0d\n */\x0d\nfunction cpus() {\x0d\n  // [] is a bugfix for a regression introduced in 51cea61\x0d\n  const data = getCPUs() || [];\x0d\n  const result = [];\x0d\n  let i = 0;\x0d\n  while (i < data.length) {\x0d\n    ArrayPrototypePush(result\x2C {\x0d\n      model: data[i++]\x2C\x0d\n      speed: data[i++]\x2C\x0d\n      times: {\x0d\n        user: data[i++]\x2C\x0d\n        nice: data[i++]\x2C\x0d\n        sys: data[i++]\x2C\x0d\n        idle: data[i++]\x2C\x0d\n        irq: data[i++]\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction arch() {\x0d\n  return process.arch;\x0d\n}\x0d\narch[SymbolToPrimitive] = () => process.arch;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction platform() {\x0d\n  return process.platform;\x0d\n}\x0d\nplatform[SymbolToPrimitive] = () => process.platform;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction tmpdir() {\x0d\n  var path;\x0d\n  if (isWindows) {\x0d\n    path = process.env.TEMP ||\x0d\n           process.env.TMP ||\x0d\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\x0d\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  } else {\x0d\n    path = safeGetenv('TMPDIR') ||\x0d\n           safeGetenv('TMP') ||\x0d\n           safeGetenv('TEMP') ||\x0d\n           '/tmp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  }\x0d\n\x0d\n  return path;\x0d\n}\x0d\ntmpdir[SymbolToPrimitive] = () => tmpdir();\x0d\n\x0d\n/**\x0d\n * @returns {'BE' | 'LE'}\x0d\n */\x0d\nfunction endianness() {\x0d\n  return kEndianness;\x0d\n}\x0d\nendianness[SymbolToPrimitive] = () => kEndianness;\x0d\n\x0d\n// Returns the number of ones in the binary representation of the decimal\x0d\n// number.\x0d\nfunction countBinaryOnes(n) {\x0d\n  // Count the number of bits set in parallel\x2C which is faster than looping\x0d\n  n = n - ((n >>> 1) & 0x55555555);\x0d\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\x0d\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\x0d\n}\x0d\n\x0d\nfunction getCIDR(address\x2C netmask\x2C family) {\x0d\n  let ones = 0;\x0d\n  let split = '.';\x0d\n  let range = 10;\x0d\n  let groupLength = 8;\x0d\n  let hasZeros = false;\x0d\n\x0d\n  if (family === 'IPv6') {\x0d\n    split = ':';\x0d\n    range = 16;\x0d\n    groupLength = 16;\x0d\n  }\x0d\n\x0d\n  const parts = StringPrototypeSplit(netmask\x2C split);\x0d\n  for (var i = 0; i < parts.length; i++) {\x0d\n    if (parts[i] !== '') {\x0d\n      const binary = NumberParseInt(parts[i]\x2C range);\x0d\n      const tmp = countBinaryOnes(binary);\x0d\n      ones += tmp;\x0d\n      if (hasZeros) {\x0d\n        if (tmp !== 0) {\x0d\n          return null;\x0d\n        }\x0d\n      } else if (tmp !== groupLength) {\x0d\n        if ((binary & 1) !== 0) {\x0d\n          return null;\x0d\n        }\x0d\n        hasZeros = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return `${address}/${ones}`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {Record<string\x2C Array<{\x0d\n *  address: string\x0d\n *  netmask: string\x0d\n *  family: 'IPv4' | 'IPv6'\x0d\n *  mac: string\x0d\n *  internal: boolean\x0d\n *  scopeid: number\x0d\n *  cidr: string | null\x0d\n * }>>}\x0d\n */\x0d\nfunction networkInterfaces() {\x0d\n  const data = getInterfaceAddresses();\x0d\n  const result = {};\x0d\n\x0d\n  if (data === undefined)\x0d\n    return result;\x0d\n  for (var i = 0; i < data.length; i += 7) {\x0d\n    const name = data[i];\x0d\n    const entry = {\x0d\n      address: data[i + 1]\x2C\x0d\n      netmask: data[i + 2]\x2C\x0d\n      family: data[i + 3]\x2C\x0d\n      mac: data[i + 4]\x2C\x0d\n      internal: data[i + 5]\x2C\x0d\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\x0d\n    };\x0d\n    const scopeid = data[i + 6];\x0d\n    if (scopeid !== -1)\x0d\n      entry.scopeid = scopeid;\x0d\n\x0d\n    const existing = result[name];\x0d\n    if (existing !== undefined)\x0d\n      ArrayPrototypePush(existing\x2C entry);\x0d\n    else\x0d\n      result[name] = [entry];\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @param {number} priority\x0d\n * @returns {void}\x0d\n */\x0d\nfunction setPriority(pid\x2C priority) {\x0d\n  if (priority === undefined) {\x0d\n    priority = pid;\x0d\n    pid = 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(pid\x2C 'pid');\x0d\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getPriority(pid) {\x0d\n  if (pid === undefined)\x0d\n    pid = 0;\x0d\n  else\x0d\n    validateInt32(pid\x2C 'pid');\x0d\n\x0d\n  const ctx = {};\x0d\n  const priority = _getPriority(pid\x2C ctx);\x0d\n\x0d\n  if (priority === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return priority;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\x0d\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\x0d\n * be `Buffer` instances.\x0d\n * @returns {{\x0d\n *   uid: number\x0d\n *   gid: number\x0d\n *   username: string\x0d\n *   homedir: string\x0d\n *   shell: string | null\x0d\n * }}\x0d\n */\x0d\nfunction userInfo(options) {\x0d\n  if (typeof options !== 'object')\x0d\n    options = null;\x0d\n\x0d\n  const ctx = {};\x0d\n  const user = getUserInfo(options\x2C ctx);\x0d\n\x0d\n  if (user === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return user;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  arch\x2C\x0d\n  cpus\x2C\x0d\n  endianness\x2C\x0d\n  freemem: getFreeMem\x2C\x0d\n  getPriority\x2C\x0d\n  homedir: getHomeDirectory\x2C\x0d\n  hostname: getHostname\x2C\x0d\n  loadavg\x2C\x0d\n  networkInterfaces\x2C\x0d\n  platform\x2C\x0d\n  release: getOSRelease\x2C\x0d\n  setPriority\x2C\x0d\n  tmpdir\x2C\x0d\n  totalmem: getTotalMem\x2C\x0d\n  type: getOSType\x2C\x0d\n  userInfo\x2C\x0d\n  uptime: getUptime\x2C\x0d\n  version: getOSVersion\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n\x0d\n  EOL: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\r\\n' : '\\n'\x0d\n  }\x2C\x0d\n\x0d\n  devNull: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x376a197ba36,132,0,9455,C0O0C4O9455,,
code-creation,Function,10,339508,0x376a197cbee,823, node:os:1:1,0x376a197b9b0,~
code-source-info,0x376a197cbee
code-creation,LazyCompile,10,339941,0x376a197ee4e,26,getCheckedFunction node:os:63:28,0x376a197ba68,~
code-source-info,0x376a197ee4e,132,2097,2320,C0O2097C9O2107C21O2114C25O2317,,
new,MemoryChunk,0x15a18a40000,262144
code-creation,LazyCompile,10,340155,0x376a197fc16,43,hideStackFrames node:internal/errors:382:25,0x2de394655b0,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nconst kNoOverride = Symbol('kNoOverride');\x0d\nlet userStackTraceLimit;\x0d\nconst nodeInternalPrefix = '__node_internal_';\x0d\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  const firstFrame = trace[0]?.getFunctionName();\x0d\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\x0d\n    for (let l = trace.length - 1; l >= 0; l--) {\x0d\n      const fn = trace[l]?.getFunctionName();\x0d\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\x0d\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\x0d\n    // it is updated at every new exception in `captureLargerStackTrace`.\x0d\n    if (trace.length > userStackTraceLimit)\x0d\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\x0d\n  }\x0d\n\x0d\n  const globalOverride =\x0d\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\x0d\n  if (globalOverride !== kNoOverride) return globalOverride;\x0d\n\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n};\x0d\n\x0d\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  return kNoOverride;\x0d\n};\x0d\n\x0d\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\x0d\n  if (innerError && outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new AggregateError(new SafeArrayIterator([\x0d\n      outerError\x2C\x0d\n      innerError\x2C\x0d\n    ])\x2C outerError.message);\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n});\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\nlet assert;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  if (!internalUtil) {\x0d\n    internalUtil = require('internal/util');\x0d\n  }\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (buffer === undefined)\x0d\n    buffer = require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    super();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    captureLargerStackTrace(this);\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  return function NodeError(...args) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    const error = new Base();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const message = getMessage(key\x2C args\x2C error);\x0d\n    ObjectDefineProperties(error\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      toString: {\x0d\n        value() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    captureLargerStackTrace(error);\x0d\n    error.code = key;\x0d\n    return error;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: any[]) => any} T\x0d\n * @type {(fn: T) => T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  // We rename the functions that will be hidden to cut off the stacktrace\x0d\n  // at the outermost one\x0d\n  const hidden = nodeInternalPrefix + fn.name;\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { value: hidden });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n  if (def === SystemError) {\x0d\n    def = makeSystemErrorWithCode(sym);\x0d\n  } else {\x0d\n    def = makeNodeErrorWithCode(def\x2C sym);\x0d\n  }\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    otherClasses.forEach((clazz) => {\x0d\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n    });\x0d\n  }\x0d\n  codes[sym] = def;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (assert === undefined) assert = require('internal/assert');\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength =\x0d\n    (StringPrototypeMatch(msg\x2C /%[dfijoOs]/g) || []).length;\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  if (!uvBinding) {\x0d\n    uvBinding = internalBinding('uv');\x0d\n  }\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  if (!uvBinding.errmap) {\x0d\n    uvBinding.errmap = uvBinding.getErrorMap();\x0d\n  }\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\nconst captureLargerStackTrace = hideStackFrames(\x0d\n  function captureLargerStackTrace(err) {\x0d\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\x0d\n    if (stackTraceLimitIsWritable) {\x0d\n      userStackTraceLimit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = Infinity;\x0d\n    }\x0d\n    ErrorCaptureStackTrace(err);\x0d\n    // Reset the limit\x0d\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\x0d\n\x0d\n    return err;\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n *\x0d\n * @param {object} ctx\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvException = hideStackFrames(function uvException(ctx) {\x0d\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n  let path;\x0d\n  let dest;\x0d\n  if (ctx.path) {\x0d\n    path = ctx.path.toString();\x0d\n    message += ` '${path}'`;\x0d\n  }\x0d\n  if (ctx.dest) {\x0d\n    dest = ctx.dest.toString();\x0d\n    message += ` -> '${dest}'`;\x0d\n  }\x0d\n\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // Pass the message to the constructor instead of setting it on the object\x0d\n  // to make sure it is the same as the one created in C++\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n\x0d\n  for (const prop of ObjectKeys(ctx)) {\x0d\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n      continue;\x0d\n    }\x0d\n    err[prop] = ctx[prop];\x0d\n  }\x0d\n\x0d\n  err.code = code;\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  if (dest) {\x0d\n    err.dest = dest;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(err);\x0d\n});\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvExceptionWithHostPort = hideStackFrames(\x0d\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${message}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.code = code;\x0d\n    ex.errno = err;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} [original]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst errnoException = hideStackFrames(\x0d\n  function errnoException(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(message);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst exceptionWithHostPort = hideStackFrames(\x0d\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${syscall} ${code}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n * @param {string} syscall\x0d\n * @param {string} [hostname]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\x0d\n  let errno;\x0d\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n  // c-ares error code.\x0d\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n  // make them available in a property that's not error.errno (since they\x0d\n  // can be in conflict with libuv error codes). Also make sure\x0d\n  // util.getSystemErrorName() can understand them when an being informed that\x0d\n  // the number is a c-ares error code.\x0d\n  if (typeof code === 'number') {\x0d\n    errno = code;\x0d\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n    // long enough that it's not practical to remove it.\x0d\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n      code = 'ENOTFOUND'; // Fabricated error name.\x0d\n    } else {\x0d\n      code = lazyInternalUtil().getSystemErrorName(code);\x0d\n    }\x0d\n  }\x0d\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n  ex.errno = errno;\x0d\n  ex.code = code;\x0d\n  ex.syscall = syscall;\x0d\n  if (hostname) {\x0d\n    ex.hostname = hostname;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(ex);\x0d\n});\x0d\n\x0d\nfunction connResetException(msg) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(msg);\x0d\n  ex.code = 'ECONNRESET';\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n *\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (process.platform === 'win32') {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x0d\n      }\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors &&\x0d\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\x0d\n                   require('internal/tty').hasColors()) ||\x0d\n                   defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Ensures the printed error line is from user code.\x0d\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  if (!_kArrowMessagePrivateSymbol) {\x0d\n    ({\x0d\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\x0d\n      setHiddenValue: _setHiddenValue\x2C\x0d\n    } = internalBinding('util'));\x0d\n  }\x0d\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor() {\x0d\n    super('The operation was aborted');\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\nmodule.exports = {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes\x2C\x0d\n  dnsException\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  getMessage\x2C\x0d\n  hideStackFrames\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  setArrowMessage\x2C\x0d\n  connResetException\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n  SystemError\x2C\x0d\n  AbortError\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  E\x2C\x0d\n  kNoOverride\x2C\x0d\n  prepareStackTrace\x2C\x0d\n  maybeOverridePrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  kIsNodeError\x2C\x0d\n  captureLargerStackTrace\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\x0d\n  'Module "%s" is not of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\x0d\n  'Module "%s" needs an import assertion of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\x0d\n  'Import assertion type "%s" is unsupported'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeTest(classRegExp\x2C value)) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      if (types.length > 2) {\x0d\n        const last = ArrayPrototypePop(types);\x0d\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (types.length === 2) {\x0d\n        msg += `one of type ${types[0]} or ${types[1]}`;\x0d\n      } else {\x0d\n        msg += `of type ${types[0]}`;\x0d\n      }\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      if (instances.length > 2) {\x0d\n        const last = ArrayPrototypePop(instances);\x0d\n        msg +=\x0d\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else {\x0d\n        msg += `an instance of ${instances[0]}`;\x0d\n        if (instances.length === 2) {\x0d\n          msg += ` or ${instances[1]}`;\x0d\n        }\x0d\n      }\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 2) {\x0d\n        const last = ArrayPrototypePop(other);\x0d\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (other.length === 2) {\x0d\n        msg += `one of ${other[0]} or ${other[1]}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (actual == null) {\x0d\n      msg += `. Received ${actual}`;\x0d\n    } else if (typeof actual === 'function' && actual.name) {\x0d\n      msg += `. Received function ${actual.name}`;\x0d\n    } else if (typeof actual === 'object') {\x0d\n      if (actual.constructor && actual.constructor.name) {\x0d\n        msg += `. Received an instance of ${actual.constructor.name}`;\x0d\n      } else {\x0d\n        const inspected = lazyInternalUtilInspect()\x0d\n          .inspect(actual\x2C { depth: -1 });\x0d\n        msg += `. Received ${inspected}`;\x0d\n      }\x0d\n    } else {\x0d\n      let inspected = lazyInternalUtilInspect()\x0d\n        .inspect(actual\x2C { colors: false });\x0d\n      if (inspected.length > 25)\x0d\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`;\x0d\n      msg += `. Received type ${typeof actual} (${inspected})`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CALLBACK'\x2C\x0d\n  'Callback must be a function. Received %O'\x2C TypeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${value}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${type}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input) {\x0d\n  this.input = input;\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x0d\n    );\x0d\n    switch (len) {\x0d\n      case 1:\x0d\n        msg += `${args[0]} argument`;\x0d\n        break;\x0d\n      case 2:\x0d\n        msg += `${args[0]} and ${args[1]} arguments`;\x0d\n        break;\x0d\n      default:\x0d\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\x0d\n        msg += `\x2C and ${args[len - 1]} arguments`;\x0d\n        break;\x0d\n    }\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\x0d\n  return `Cannot find ${type} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C\x0d\n  'Unknown file extension "%s" for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s'\x2C RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\x0d\n'resolving ES modules imported from %s'\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url) => {\x0d\n  let msg = 'Only file and data URLs are supported by the default ESM loader';\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINKING_ERRORED'\x2C\x0d\n  'Linking has already failed for the provided module'\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x376a197fc16,11,11007,11237,C0O11135C5O11159C9O11154C13O11168C21O11189C28O11210C35O11168C40O11224C42O11234,,
code-creation,LazyCompile,10,343854,0x15a18a44bde,5,getOSRelease node:os:86:22,0x376a197bea0,~
code-source-info,0x15a18a44bde,132,2651,2664,C0O2657C4O2664,,
code-creation,LazyCompile,10,344063,0x15a18a44ce6,49,formatWithOptions node:internal/util/inspect:2024:27,0x3d62a01ff38,~
script-source,20,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  kPending\x2C\x0d\n  kRejected\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x0d\n  }\x2C\x0d\n  isStackOverflowError\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeTest(/^[A-Z][a-zA-Z0-9]+$/\x2C e)\x0d\n  )\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n *\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n});\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${charCode.toString(16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && !RegExpPrototypeTest(escapeTest\x2C str))\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = StringPrototypeReplace(str\x2C escapeReplace\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}${`\\\\u${point.toString(16)}`}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return descriptor.value.name;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return ret.replace(/\\n/g\x2C `\\n${' '.repeat(ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (value[SymbolIterator] || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatSet.bind(null\x2C value) :\x0d\n        formatSet.bind(null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatMap.bind(null\x2C value) :\x0d\n        formatMap.bind(null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = formatTypedArray.bind(null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      output.push(\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType));\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      output.push(...protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      output = output.sort(comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = output.slice(output.length - keys.length).sort(comparator);\x0d\n      output.splice(output.length - keys.length\x2C keys.length\x2C ...sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (stringified.startsWith('class') && stringified.endsWith('}')) {\x0d\n    const slice = stringified.slice(5\x2C -1);\x0d\n    const bracketIndex = slice.indexOf('{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!slice.slice(0\x2C bracketIndex).includes('(') ||\x0d\n          // Slow path to guarantee that it's indeed a class.\x0d\n          classRegExp.test(slice.replace(stripCommentsRegExp)))) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = b.indexOf(a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = stack.split('\\n');\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (err.cause && isError(err.cause)) {\x0d\n    const causeStack = getStackString(err.cause);\x0d\n    const causeStackStart = causeStack.indexOf('\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = causeStack.slice(causeStackStart + 1).split('\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (name.endsWith('Error') &&\x0d\n      stack.startsWith(name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/) ||\x0d\n        stack.match(/^([a-z_A-Z0-9-]*Error)$/);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = getPrefix(constructor\x2C tag\x2C fallback).slice(0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (prefix.includes(name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${stack.slice(len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${stack.slice(len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = keys.indexOf(name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && stack.includes(err[name])) {\x0d\n        keys.splice(index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !keys.includes('cause'))) {\x0d\n    keys.push('cause');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && stack.indexOf(err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = stack.indexOf('\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = stack.slice(0\x2C stackStart);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stack.slice(stackStart + 1));\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      for (const line of lines) {\x0d\n        const core = line.match(coreModuleRegExp);\x0d\n        if (core !== null && NativeModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          // This adds underscores to all node_modules to quickly identify them.\x0d\n          let nodeModule;\x0d\n          newStack += '\\n';\x0d\n          let pos = 0;\x0d\n          while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n            // '/node_modules/'.length === 14\x0d\n            newStack += line.slice(pos\x2C nodeModule.index + 14);\x0d\n            newStack += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n            pos = nodeModule.index + nodeModule[0].length;\x0d\n          }\x0d\n          newStack += pos === 0 ? line : line.slice(pos);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${lines.join('\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = ' '.repeat(ctx.indentationLvl);\x0d\n    stack = stack.replace(/\\n/g\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x0d\n        ) / biasedMax\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = integerString.startsWith('-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${integerString.slice(i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${integerString.slice(0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${integerString.slice(i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${integerString.slice(i)}`;\x0d\n}\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || string.includes('e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(String(number).slice(string.length + 1))\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = value.slice(0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n        // function.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return value\x0d\n        .split(/(?<=\\n)/)\x0d\n        .map((line) => fn(strEscape(line)\x2C 'string'))\x0d\n        .join(` +\\n${' '.repeat(ctx.indentationLvl + 2)}`) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = output[i].lastIndexOf(' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = output[i].slice(0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (!numberRegExp.test(key)) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    /(.{2})/g\x2C '$1 '));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0)\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const v of value) {\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    output.push(\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x0d\n    );\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C\x0d\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  let output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      output = output.sort();\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = braces[0].replace(/ Iterator] {$/\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${' '.repeat(ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = StringPrototypeReplace(\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      strEscapeSequencesReplacer\x2C escapeFn\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = StringPrototypeReplace(key\x2C\x0d\n                                       strEscapeSequencesReplacer\x2C escapeFn);\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeTest(keyStrRegExp\x2C key)) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!joinedOutput.includes('\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) =>\x0d\n  StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {}; a.a = a; JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  if (typeof inspectOptions !== 'object' || inspectOptions === null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'inspectOptions'\x2C 'object'\x2C inspectOptions);\x0d\n  }\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(str.slice(i).normalize('NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n  const isZeroWidthCodePoint = (code) => {\x0d\n    return code <= 0x1F || // C0 control codes\x0d\n      (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n      (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n      (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n      // Combining Diacritical Marks for Symbols\x0d\n      (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n      (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n      (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n      (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return str.replace(ansi\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  inspect\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  stripVTControlCharacters\x0d\n};\x0d\n
code-source-info,0x15a18a44ce6,20,69981,70236,C0O69981C8O70012C18O70086C34O70092C39O70086C40O70178C43O70185C48O70233,,
code-creation,LazyCompile,10,348974,0x15a18a49726,763,formatWithOptionsInternal node:internal/util/inspect:2048:35,0x3d62a020050,~
code-source-info,0x15a18a
code-creation,LazyCompile,10,349352,0x15a18a49e0e,269,value node:internal/console/constructor:258:20,0x1b3a04e9640,~
code-source-info,0x15a18a49e0e,37,7751,9227,C0O7809C5O7851C7O7856C9O7855C13O7898C15O7915C17O7911C21O7949C23O7966C29O7981C34O8018C38O8044C44O8071C49O8117C55O8124C60O8142C68O8146C75O8198C80O8230C90O8250C98O8207C105O8286C107O8307C112O8333C122O8358C123O8375C128O8400C133O8400C138O8414C145O8739C153O8739C160O8762C165O8787C176O8787C182O8826C187O8826C206O9026C216O9030C222O9066C224O9066C238O9174C239O9181C250O9181C268O9226,,
code-creation,LazyCompile,10,349480,0x15a18a4a076,39,once node:events:664:44,0x3d62a02b910,~
code-source-info,0x15a18a4a076,23,20199,20317,C0O20221C3O20221C7O20256C24O20265C30O20256C36O20302C38O20314,,
code-creation,LazyCompile,10,349561,0x15a18a4a226,60,_onceWrap node:events:650:19,0x3d62a02b8c0,~
code-source-info,0x15a18a4a226,23,19758,19987,C0O19802C6O19826C12O19837C18O19845C24O19851C31O19882C34O19894C39O19894C45O19910C47O19927C51O19942C53O19955C57O19969C59O19984,,
code-creation,LazyCompile,10,349667,0x15a18a4a34e,26,Writable.write node:internal/streams/writable:333:36,0x9c49b5aff8,~
code-source-info,0x15a18a4a34e,63,11081,11161,C0O11108C15O11115C22O11149C25O11158,,
code-creation,LazyCompile,10,349804,0x15a18a4a536,338,_write node:internal/streams/writable:283:16,0x9c49b5afa8,~
code-source-info,0x15a18a4a
code-creation,LazyCompile,10,349985,0x15a18a4a8fe,217,writeOrBuffer node:internal/streams/writable:365:23,0x9c49b5b208,~
code-source-info,0x15a18a4a8fe,63,12032,13054,C0O12098C10O12121C15O12134C22O12150C25O12147C29O12218C34O12233C38O12225C42O12324C44O12339C45O12355C49O12378C55O12395C61O12411C67O12429C73O12455C78O12464C90O12471C96O12478C102O12488C106O12464C111O12516C119O12539C124O12562C125O12579C129O12610C137O12630C142O12648C143O12662C149O12695C151O12710C155O12722C157O12736C161O12753C162O12767C166O12780C167O12791C171O12811C176O12841C190O12811C195O12856C196O12867C200O13002C204O13023C211O13041C216O13051,,
code-creation,LazyCompile,10,350106,0x15a18a4ab36,26,Socket._write node:net:806:35,0x6ba51e7950,~
code-source-info,0x15a18a4ab36,101,21501,21576,C0O21532C19O21532C25O21575,,
code-creation,LazyCompile,10,350206,0x15a18a4ad36,186,Socket._writeGeneric node:net:769:42,0x6ba51e7810,~
code-source-info,0x15a18a4ad36,101,20574,21356,C0O20574C21O20780C27O20799C29O20817C33O20830C35O20852C39O20874C52O20874C58O20980C59O20987C60O20996C61O21014C65O21025C67O21047C71O21068C77O21084C84O21091C87O21087C93O21084C97O21118C98O21131C99O21147C104O21147C108O21171C110O21179C114O21196C130O21202C138O21246C157O21252C163O21303C169O21315C173O21320C176O21347C180O21341C185O21355,,
code-creation,LazyCompile,10,350323,0x15a18a4af9e,45,_unrefTimer node:net:417:52,0x6ba51e6b38,~
code-source-info,0x15a18a4af9e,101,11709,11824,C0O11730C5O11738C9O11770C11O11776C13O11775C18O11794C20O11796C22O11795C26O11806C31O11806C35O11754C40O11717C44O11823,,
code-creation,LazyCompile,10,350418,0x15a18a4b0be,55,writeGeneric node:internal/stream_base_commons:147:22,0x15162b300d0,~
script-source,87,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  errnoException\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateCallback } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(errnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(errnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateCallback(callback);\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateCallback(callback);\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n};\x0d\n
code-source-info,0x15a18a4b0be,87,3743,3933,C0O3787C5O3808C7O3807C11O3787C17O3838C29O3838C35O3880C47O3880C52O3919C54O3930,,
code-creation,LazyCompile,10,350961,0x15a18a4bae6,47,createWriteWrap node:internal/stream_base_commons:109:25,0x15162b30010,~
code-source-info,0x15a18a4bae6,87,2827,3052,C0O2863C5O2863C11O2885C13O2896C17O2909C19O2924C23O2946C24O2956C28O2968C29O2978C33O2986C34O2997C38O3008C40O3021C44O3038C46O3049,,
code-creation,LazyCompile,10,351092,0x15a18a4bce6,215,handleWriteReq node:internal/stream_base_commons:45:24,0x15162b2ff70,~
code-source-info,0x15a18a4bce6,87,1218,2083,C0O1253C5O1274C80O1347C85O1347C92O1378C99O1398C101O1397C106O1428C108O1439C112O1454C114O1465C115O1534C120O1534C126O1563C127O1622C132O1622C138O1649C139O1690C144O1690C150O1718C151O1820C156O1820C162O1847C163O1891C168O1898C173O1898C180O1946C185O1946C192O1979C199O1999C201O1998C206O2029C208O2040C212O2057C214O2068,,
code-creation,LazyCompile,10,351299,0x15a18a4bf2e,92,afterWriteDispatched node:internal/stream_base_commons:155:30,0x15162b30140,~
code-source-info,0x15a18a4bf2e,87,3966,4250,C0O3986C2O3998C7O4014C9O4013C12O3996C16O4033C18O4047C23O4063C25O4062C30O4043C34O4089C35O4097C40O4109C42O4119C48O4152C56O4119C62O4116C66O4160C67O4175C73O4195C81O4231C86O4231C91O4249,,
code-creation,LazyCompile,10,351461,0x15a18a4c186,323,onwrite node:internal/streams/writable:425:17,0x9c49b5b2f8,~
code-source-info,0x15a18a4c
code-creation,LazyCompile,10,351639,0x15a18a4c486,62,Readable.removeListener node:internal/streams/readable:904:45,0x9c49b4cb80,~
code-source-info,0x15a18a4c486,56,29653,30225,C0O29679C5O29686C10O29696C15O29711C29O29711C35O29788C37O29795C42O30152C45O30160C53O30160C59O30211C61O30222,,
code-creation,LazyCompile,10,351782,0x15a18a4c606,307,removeListener node:events:693:28,0x3d62a02b9d8,~
code-source-info,0x15a18a4c
code-creation,LazyCompile,10,351955,0x15a18a4c8ee,46,afterWriteTick node:internal/streams/writable:482:24,0x9c49b5b348,~
code-source-info,0x15a18a4c8ee,63,15573,15692,C0O15576C5O15584C10O15591C15O15598C20O15609C21O15634C25O15645C40O15652C45O15689,,
code-creation,LazyCompile,10,352048,0x15a18a4ca46,104,afterWrite node:internal/streams/writable:487:20,0x9c49b5b398,~
code-source-info,0x15a18a4ca46,63,15715,16089,C0O15772C7O15790C14O15809C20O15816C25O15836C30O15850C32O15872C33O15888C37O15909C45O15909C50O15949C60O15949C65O15961C71O15976C75O15985C78O15934C81O16011C87O16029C90O16029C94O16059C97O16059C103O16088,,
code-creation,LazyCompile,10,352135,0x15a18a4cbd6,35,get node:internal/streams/duplex:94:8,0x20acf676148,~
code-source-info,0x15a18a4cbd6,55,3367,3582,C0O3388C6O3434C12O3475C13O3488C14O3517C19O3532C25O3550C30O3565C34O3575,,
code-creation,LazyCompile,10,352218,0x15a18a4cd16,87, node:internal/console/constructor:339:10,0x1b3a04e9958,~
code-source-info,0x15a18a4cd16,37,10492,11326,C0O10713C7O10730C9O10726C17O10759C26O10778C31O10792C35O10820C40O10835C46O11237C54O11237C61O11260C66O11285C79O11285C86O11325,,
tick,0x7ff6f70af2ed,352335,0,0x0,3,0x7ff6f6704670,0x15a18a4ca91,0x15a18a4c916,0x376a19665c1
code-creation,LazyCompile,10,352400,0x15a18a4ce6e,85,finishMaybe node:internal/streams/writable:731:21,0x9c49b5b670,~
code-source-info,0x15a18a4ce6e,63,22076,22380,C0O22103C3O22107C9O22133C12O22133C17O22174C23O22184C31O22193C37O22221C43O22236C47O22247C51O22268C54O22276C68O22276C75O22334C78O22334C84O22379,,
code-creation,LazyCompile,10,352495,0x15a18a4cffe,73,needFinish node:internal/streams/writable:650:20,0x9c49b5b580,~
code-source-info,0x15a18a4cffe,63,20010,20311,C0O20037C6O20064C12O20096C18O20103C23O20130C30O20158C35O20167C41O20174C46O20201C53O20231C60O20260C67O20294C72O20308,,
tick,0x7ffd597cfb34,368333,0,0x0,8
tick,0x7ffd597cfb34,383462,0,0x0,8
tick,0x7ffd597cfb34,399554,0,0x0,8
tick,0x7ffd597cfb34,414522,0,0x0,8
tick,0x7ffd597cfb34,429709,0,0x0,8
tick,0x7ffd597cfb34,445425,0,0x0,8
tick,0x7ffd597cfb34,460570,0,0x0,8
tick,0x7ffd597cfb34,476518,0,0x0,8
tick,0x7ffd597cfb34,492575,0,0x0,8
tick,0x7ffd597cfb34,508484,0,0x0,8
tick,0x7ffd597cfb34,524123,0,0x0,8
tick,0x7ffd597cfb34,539533,0,0x0,8
tick,0x7ffd597cfb34,555536,0,0x0,8
tick,0x7ffd597cfb34,571595,0,0x0,8
tick,0x7ffd597cfb34,587561,0,0x0,8
tick,0x7ffd597cfb34,603649,0,0x0,8
tick,0x7ffd597cfb34,619554,0,0x0,8
tick,0x7ffd597cfb34,635660,0,0x0,8
tick,0x7ffd597cfb34,651579,0,0x0,8
tick,0x7ffd597cfb34,667536,0,0x0,8
tick,0x7ffd597cfb34,682718,0,0x0,8
tick,0x7ffd597cfb34,697762,0,0x0,8
tick,0x7ffd597cfb34,713477,0,0x0,8
tick,0x7ffd597cfb34,728710,0,0x0,8
tick,0x7ffd597cfb34,744494,0,0x0,8
tick,0x7ffd597cfb34,760665,0,0x0,8
tick,0x7ffd597cfb34,776555,0,0x0,8
tick,0x7ffd597cfb34,792561,0,0x0,8
tick,0x7ffd597cfb34,808536,0,0x0,8
tick,0x7ffd597cfb34,824525,0,0x0,8
tick,0x7ffd597cfb34,840527,0,0x0,8
tick,0x7ffd597cfb34,856555,0,0x0,8
tick,0x7ffd597cfb34,872554,0,0x0,8
tick,0x7ffd597cfb34,887659,0,0x0,8
tick,0x7ffd597cfb34,903814,0,0x0,8
tick,0x7ffd597cfb34,919122,0,0x0,8
tick,0x7ffd597cfb34,935001,0,0x0,8
tick,0x7ffd597cfb34,950569,0,0x0,8
tick,0x7ffd597cfb34,966192,0,0x0,8
tick,0x7ffd597cfb34,982169,0,0x0,8
tick,0x7ffd597cfb34,998375,0,0x0,8
tick,0x7ffd597cfb34,1014127,0,0x0,8
tick,0x7ffd597cfb34,1029440,0,0x0,8
tick,0x7ffd597cfb34,1044770,0,0x0,8
tick,0x7ffd597cfb34,1060541,0,0x0,8
tick,0x7ffd597cfb34,1075985,0,0x0,8
tick,0x7ffd597cfb34,1091613,0,0x0,8
tick,0x7ffd597cfb34,1106994,0,0x0,8
tick,0x7ffd597cfb34,1122103,0,0x0,8
tick,0x7ffd597cfb34,1137370,0,0x0,8
tick,0x7ffd597cfb34,1153280,0,0x0,8
tick,0x7ffd597cfb34,1168953,0,0x0,8
tick,0x7ffd597cfb34,1184504,0,0x0,8
tick,0x7ffd597cfb34,1199658,0,0x0,8
tick,0x7ffd597cfb34,1215567,0,0x0,8
tick,0x7ffd597cfb34,1231583,0,0x0,8
tick,0x7ffd597cfb34,1247592,0,0x0,8
tick,0x7ffd597cfb34,1263584,0,0x0,8
tick,0x7ffd597cfb34,1279598,0,0x0,8
tick,0x7ffd597cfb34,1295534,0,0x0,8
tick,0x7ffd597cfb34,1311389,0,0x0,8
tick,0x7ffd597cfb34,1326520,0,0x0,8
tick,0x7ffd597cfb34,1342381,0,0x0,8
tick,0x7ffd597cfb34,1357571,0,0x0,8
tick,0x7ffd597cfb34,1373534,0,0x0,8
tick,0x7ffd597cfb34,1388760,0,0x0,8
tick,0x7ffd597cfb34,1404548,0,0x0,8
tick,0x7ffd597cfb34,1420124,0,0x0,8
tick,0x7ffd597cfb34,1435629,0,0x0,8
tick,0x7ffd597cfb34,1451632,0,0x0,8
tick,0x7ffd597cfb34,1466749,0,0x0,8
tick,0x7ffd597cfb34,1481999,0,0x0,8
tick,0x7ffd597cfb34,1497535,0,0x0,8
tick,0x7ffd597cfb34,1512937,0,0x0,8
tick,0x7ffd597cfb34,1528540,0,0x0,8
tick,0x7ffd597cfb34,1544153,0,0x0,8
tick,0x7ffd597cfb34,1559563,0,0x0,8
tick,0x7ffd597cfb34,1575561,0,0x0,8
tick,0x7ffd597cfb34,1590677,0,0x0,8
tick,0x7ffd597cfb34,1606539,0,0x0,8
tick,0x7ffd597cfb34,1621560,0,0x0,8
tick,0x7ffd597cfb34,1636766,0,0x0,8
tick,0x7ffd597cfb34,1652805,0,0x0,8
tick,0x7ffd597cfb34,1667645,0,0x0,8
tick,0x7ffd597cfb34,1682780,0,0x0,8
tick,0x7ffd597cfb34,1698071,0,0x0,8
tick,0x7ffd597cfb34,1713604,0,0x0,8
tick,0x7ffd597cfb34,1729727,0,0x0,8
tick,0x7ffd597cfb34,1745519,0,0x0,8
tick,0x7ffd597cfb34,1761538,0,0x0,8
tick,0x7ffd597cfb34,1777615,0,0x0,8
tick,0x7ffd597cfb34,1793125,0,0x0,8
tick,0x7ffd597cfb34,1808515,0,0x0,8
tick,0x7ffd597cfb34,1823883,0,0x0,8
tick,0x7ffd597cfb34,1839661,0,0x0,8
tick,0x7ffd597cfb34,1855635,0,0x0,8
tick,0x7ffd597cfb34,1871478,0,0x0,8
tick,0x7ffd597cfb34,1886644,0,0x0,8
tick,0x7ffd597cfb34,1901535,0,0x0,8
tick,0x7ffd597cfb34,1917641,0,0x0,8
tick,0x7ffd597cfb34,1933646,0,0x0,8
tick,0x7ffd597cfb34,1949637,0,0x0,8
tick,0x7ffd597cfb34,1965443,0,0x0,8
tick,0x7ffd597cfb34,1981507,0,0x0,8
tick,0x7ffd597cfb34,1997200,0,0x0,8
tick,0x7ffd597cfb34,2012598,0,0x0,8
tick,0x7ffd597cfb34,2028695,0,0x0,8
tick,0x7ffd597cfb34,2044629,0,0x0,8
tick,0x7ffd597cfb34,2060532,0,0x0,8
tick,0x7ffd597cfb34,2076658,0,0x0,8
tick,0x7ffd597cfb34,2092569,0,0x0,8
tick,0x7ffd597cfb34,2108664,0,0x0,8
tick,0x7ffd597cfb34,2124566,0,0x0,8
tick,0x7ffd597cfb34,2139842,0,0x0,8
tick,0x7ffd597cfb34,2155523,0,0x0,8
tick,0x7ffd597cfb34,2170544,0,0x0,8
tick,0x7ffd597cfb34,2186540,0,0x0,8
tick,0x7ffd597cfb34,2201706,0,0x0,8
tick,0x7ffd597cfb34,2216872,0,0x0,8
tick,0x7ffd597cfb34,2232915,0,0x0,8
tick,0x7ffd597cfb34,2248888,0,0x0,8
tick,0x7ffd597cfb34,2264559,0,0x0,8
tick,0x7ffd597cfb34,2280519,0,0x0,8
tick,0x7ffd597cfb34,2295828,0,0x0,8
tick,0x7ffd597cfb34,2311544,0,0x0,8
tick,0x7ffd597cfb34,2326519,0,0x0,8
tick,0x7ffd597cfb34,2342554,0,0x0,8
tick,0x7ffd597cfb34,2358364,0,0x0,8
tick,0x7ffd597cfb34,2374042,0,0x0,8
tick,0x7ffd597cfb34,2389853,0,0x0,8
tick,0x7ffd597cfb34,2405379,0,0x0,8
tick,0x7ffd597cfb34,2421160,0,0x0,8
tick,0x7ffd597cfb34,2435750,0,0x0,8
tick,0x7ffd597cfb34,2451469,0,0x0,8
tick,0x7ffd597cfb34,2466652,0,0x0,8
tick,0x7ffd597cfb34,2482533,0,0x0,8
tick,0x7ffd597cfb34,2498529,0,0x0,8
tick,0x7ffd597cfb34,2513781,0,0x0,8
tick,0x7ffd597cfb34,2528719,0,0x0,8
tick,0x7ffd597cfb34,2543713,0,0x0,8
tick,0x7ffd597cfb34,2559713,0,0x0,8
tick,0x7ffd597cfb34,2574768,0,0x0,8
tick,0x7ffd597cfb34,2590736,0,0x0,8
tick,0x7ffd597cfb34,2606707,0,0x0,8
tick,0x7ffd597cfb34,2621731,0,0x0,8
tick,0x7ffd597cfb34,2637728,0,0x0,8
tick,0x7ffd597cfb34,2652748,0,0x0,8
tick,0x7ffd597cfb34,2668721,0,0x0,8
tick,0x7ffd597cfb34,2684773,0,0x0,8
tick,0x7ffd597cfb34,2700738,0,0x0,8
tick,0x7ffd597cfb34,2716765,0,0x0,8
tick,0x7ffd597cfb34,2732723,0,0x0,8
tick,0x7ffd597cfb34,2748764,0,0x0,8
tick,0x7ffd597cfb34,2764737,0,0x0,8
tick,0x7ffd597cfb34,2780776,0,0x0,8
tick,0x7ffd597cfb34,2796757,0,0x0,8
tick,0x7ffd597cfb34,2812763,0,0x0,8
tick,0x7ffd597cfb34,2828772,0,0x0,8
tick,0x7ffd597cfb34,2844783,0,0x0,8
tick,0x7ffd597cfb34,2860776,0,0x0,8
tick,0x7ffd597cfb34,2876777,0,0x0,8
tick,0x7ffd597cfb34,2892878,0,0x0,8
tick,0x7ffd597cfb34,2908806,0,0x0,8
tick,0x7ffd597cfb34,2924789,0,0x0,8
tick,0x7ffd597cfb34,2940816,0,0x0,8
tick,0x7ffd597cfb34,2956520,0,0x0,8
tick,0x7ffd597cfb34,2971737,0,0x0,8
tick,0x7ffd597cfb34,2987455,0,0x0,8
tick,0x7ffd597cfb34,3002738,0,0x0,8
tick,0x7ffd597cfb34,3018742,0,0x0,8
tick,0x7ffd597cfb34,3034533,0,0x0,8
tick,0x7ffd597cfb34,3050645,0,0x0,8
tick,0x7ffd597cfb34,3066407,0,0x0,8
tick,0x7ffd597cfb34,3081593,0,0x0,8
tick,0x7ffd597cfb34,3096555,0,0x0,8
tick,0x7ffd597cfb34,3112495,0,0x0,8
tick,0x7ffd597cfb34,3128257,0,0x0,8
tick,0x7ffd597cfb34,3143551,0,0x0,8
tick,0x7ffd597cfb34,3158734,0,0x0,8
tick,0x7ffd597cfb34,3173859,0,0x0,8
tick,0x7ffd597cfb34,3189880,0,0x0,8
tick,0x7ffd597cfb34,3205744,0,0x0,8
tick,0x7ffd597cfb34,3221755,0,0x0,8
tick,0x7ffd597cfb34,3237523,0,0x0,8
tick,0x7ffd597cfb34,3253434,0,0x0,8
tick,0x7ffd597cfb34,3269274,0,0x0,8
tick,0x7ffd597cfb34,3285291,0,0x0,8
tick,0x7ffd597cfb34,3301132,0,0x0,8
tick,0x7ffd597cfb34,3316547,0,0x0,8
tick,0x7ffd597cfb34,3331644,0,0x0,8
tick,0x7ffd597cfb34,3346751,0,0x0,8
tick,0x7ffd597cfb34,3362765,0,0x0,8
tick,0x7ffd597cfb34,3377898,0,0x0,8
tick,0x7ffd597cfb34,3393518,0,0x0,8
tick,0x7ffd597cfb34,3409011,0,0x0,8
tick,0x7ffd597cfb34,3424166,0,0x0,8
tick,0x7ffd597cfb34,3439543,0,0x0,8
tick,0x7ffd597cfb34,3455553,0,0x0,8
tick,0x7ffd597cfb34,3470949,0,0x0,8
tick,0x7ffd597cfb34,3486179,0,0x0,8
tick,0x7ffd597cfb34,3501518,0,0x0,8
tick,0x7ffd597cfb34,3516766,0,0x0,8
tick,0x7ffd597cfb34,3532792,0,0x0,8
tick,0x7ffd597cfb34,3548775,0,0x0,8
tick,0x7ffd597cfb34,3564759,0,0x0,8
tick,0x7ffd597cfb34,3579924,0,0x0,8
tick,0x7ffd597cfb34,3595276,0,0x0,8
tick,0x7ffd597cfb34,3611276,0,0x0,8
tick,0x7ffd597cfb34,3626812,0,0x0,8
tick,0x7ffd597cfb34,3642729,0,0x0,8
tick,0x7ffd597cfb34,3658616,0,0x0,8
tick,0x7ffd597cfb34,3673622,0,0x0,8
tick,0x7ffd597cfb34,3688655,0,0x0,8
tick,0x7ffd597cfb34,3704626,0,0x0,8
tick,0x7ffd597cfb34,3720637,0,0x0,8
tick,0x7ffd597cfb34,3735772,0,0x0,8
tick,0x7ffd597cfb34,3750769,0,0x0,8
tick,0x7ffd597cfb34,3766764,0,0x0,8
tick,0x7ffd597cfb34,3782774,0,0x0,8
tick,0x7ffd597cfb34,3798761,0,0x0,8
tick,0x7ffd597cfb34,3814818,0,0x0,8
tick,0x7ffd597cfb34,3830797,0,0x0,8
tick,0x7ffd597cfb34,3846787,0,0x0,8
tick,0x7ffd597cfb34,3862771,0,0x0,8
tick,0x7ffd597cfb34,3878787,0,0x0,8
tick,0x7ffd597cfb34,3894785,0,0x0,8
tick,0x7ffd597cfb34,3910092,0,0x0,8
tick,0x7ffd597cfb34,3924828,0,0x0,8
tick,0x7ffd597cfb34,3939941,0,0x0,8
tick,0x7ffd597cfb34,3955913,0,0x0,8
tick,0x7ffd597cfb34,3970678,0,0x0,8
tick,0x7ffd597cfb34,3985820,0,0x0,8
tick,0x7ffd597cfb34,4001337,0,0x0,8
tick,0x7ffd597cfb34,4016222,0,0x0,8
tick,0x7ffd597cfb34,4031767,0,0x0,8
tick,0x7ffd597cfb34,4046976,0,0x0,8
tick,0x7ffd597cfb34,4062571,0,0x0,8
tick,0x7ffd597cfb34,4077957,0,0x0,8
tick,0x7ffd597cfb34,4093656,0,0x0,8
tick,0x7ffd597cfb34,4109281,0,0x0,8
tick,0x7ffd597cfb34,4124613,0,0x0,8
tick,0x7ffd597cfb34,4140158,0,0x0,8
tick,0x7ffd597cfb34,4155133,0,0x0,8
tick,0x7ffd597cfb34,4170844,0,0x0,8
tick,0x7ffd597cfb34,4186805,0,0x0,8
tick,0x7ffd597cfb34,4202839,0,0x0,8
tick,0x7ffd597cfb34,4218848,0,0x0,8
tick,0x7ffd597cfb34,4234811,0,0x0,8
tick,0x7ffd597cfb34,4250829,0,0x0,8
tick,0x7ffd597cfb34,4265831,0,0x0,8
tick,0x7ffd597cfb34,4281247,0,0x0,8
tick,0x7ffd597cfb34,4296537,0,0x0,8
tick,0x7ffd597cfb34,4311837,0,0x0,8
tick,0x7ffd597cfb34,4326997,0,0x0,8
tick,0x7ffd597cfb34,4342827,0,0x0,8
tick,0x7ffd597cfb34,4358839,0,0x0,8
tick,0x7ffd597cfb34,4374811,0,0x0,8
tick,0x7ffd597cfb34,4389955,0,0x0,8
tick,0x7ffd597cfb34,4405222,0,0x0,8
tick,0x7ffd597cfb34,4421316,0,0x0,8
tick,0x7ffd597cfb34,4436576,0,0x0,8
tick,0x7ffd597cfb34,4452107,0,0x0,8
tick,0x7ffd597cfb34,4466998,0,0x0,8
tick,0x7ffd597cfb34,4482557,0,0x0,8
tick,0x7ffd597cfb34,4497819,0,0x0,8
tick,0x7ffd597cfb34,4512989,0,0x0,8
tick,0x7ffd597cfb34,4528197,0,0x0,8
tick,0x7ffd597cfb34,4543964,0,0x0,8
tick,0x7ffd597cfb34,4558840,0,0x0,8
tick,0x7ffd597cfb34,4575072,0,0x0,8
tick,0x7ffd597cfb34,4590084,0,0x0,8
tick,0x7ffd597cfb34,4605065,0,0x0,8
tick,0x7ffd597cfb34,4620705,0,0x0,8
tick,0x7ffd597cfb34,4635860,0,0x0,8
tick,0x7ffd597cfb34,4651883,0,0x0,8
tick,0x7ffd597cfb34,4667028,0,0x0,8
tick,0x7ffd597cfb34,4682967,0,0x0,8
tick,0x7ffd597cfb34,4698049,0,0x0,8
tick,0x7ffd597cfb34,4713860,0,0x0,8
tick,0x7ffd597cfb34,4729838,0,0x0,8
tick,0x7ffd597cfb34,4745020,0,0x0,8
tick,0x7ffd597cfb34,4760141,0,0x0,8
tick,0x7ffd597cfb34,4776039,0,0x0,8
tick,0x7ffd597cfb34,4791100,0,0x0,8
tick,0x7ffd597cfb34,4807055,0,0x0,8
tick,0x7ffd597cfb34,4821930,0,0x0,8
tick,0x7ffd597cfb34,4837302,0,0x0,8
tick,0x7ffd597cfb34,4853046,0,0x0,8
tick,0x7ffd597cfb34,4867958,0,0x0,8
tick,0x7ffd597cfb34,4884015,0,0x0,8
tick,0x7ffd597cfb34,4900073,0,0x0,8
tick,0x7ffd597cfb34,4915772,0,0x0,8
tick,0x7ffd597cfb34,4930935,0,0x0,8
tick,0x7ffd597cfb34,4946806,0,0x0,8
tick,0x7ffd597cfb34,4962621,0,0x0,8
tick,0x7ffd597cfb34,4977940,0,0x0,8
tick,0x7ffd597cfb34,4994068,0,0x0,8
tick,0x7ffd597cfb34,5009074,0,0x0,8
tick,0x7ffd597cfb34,5023868,0,0x0,8
tick,0x7ffd597cfb34,5039013,0,0x0,8
tick,0x7ffd597cfb34,5055051,0,0x0,8
tick,0x7ffd597cfb34,5070027,0,0x0,8
tick,0x7ffd597cfb34,5086049,0,0x0,8
tick,0x7ffd597cfb34,5102061,0,0x0,8
tick,0x7ffd597cfb34,5117888,0,0x0,8
tick,0x7ffd597cfb34,5133799,0,0x0,8
tick,0x7ffd597cfb34,5149859,0,0x0,8
tick,0x7ffd597cfb34,5165791,0,0x0,8
tick,0x7ffd597cfb34,5181876,0,0x0,8
tick,0x7ffd597cfb34,5197892,0,0x0,8
tick,0x7ffd597cfb34,5214023,0,0x0,8
tick,0x7ffd597cfb34,5229004,0,0x0,8
tick,0x7ffd597cfb34,5244749,0,0x0,8
tick,0x7ffd597cfb34,5259863,0,0x0,8
tick,0x7ffd597cfb34,5275878,0,0x0,8
tick,0x7ffd597cfb34,5290855,0,0x0,8
tick,0x7ffd597cfb34,5306008,0,0x0,8
tick,0x7ffd597cfb34,5321058,0,0x0,8
tick,0x7ffd597cfb34,5336878,0,0x0,8
tick,0x7ffd597cfb34,5352932,0,0x0,8
tick,0x7ffd597cfb34,5368067,0,0x0,8
tick,0x7ffd597cfb34,5382887,0,0x0,8
tick,0x7ffd597cfb34,5398917,0,0x0,8
tick,0x7ffd597cfb34,5414031,0,0x0,8
tick,0x7ffd597cfb34,5428808,0,0x0,8
tick,0x7ffd597cfb34,5444204,0,0x0,8
tick,0x7ffd597cfb34,5460007,0,0x0,8
tick,0x7ffd597cfb34,5475188,0,0x0,8
tick,0x7ffd597cfb34,5490147,0,0x0,8
tick,0x7ffd597cfb34,5506027,0,0x0,8
tick,0x7ffd597cfb34,5521274,0,0x0,8
tick,0x7ffd597cfb34,5536594,0,0x0,8
tick,0x7ffd597cfb34,5552129,0,0x0,8
tick,0x7ffd597cfb34,5567210,0,0x0,8
tick,0x7ffd597cfb34,5582480,0,0x0,8
tick,0x7ffd597cfb34,5598060,0,0x0,8
tick,0x7ffd597cfb34,5613111,0,0x0,8
tick,0x7ffd597cfb34,5629006,0,0x0,8
tick,0x7ffd597cfb34,5643917,0,0x0,8
tick,0x7ffd597cfb34,5659131,0,0x0,8
tick,0x7ffd597cfb34,5674614,0,0x0,8
tick,0x7ffd597cfb34,5689918,0,0x0,8
tick,0x7ffd597cfb34,5705113,0,0x0,8
tick,0x7ffd597cfb34,5720371,0,0x0,8
tick,0x7ffd597cfb34,5736218,0,0x0,8
tick,0x7ffd597cfb34,5751304,0,0x0,8
tick,0x7ffd597cfb34,5767024,0,0x0,8
tick,0x7ffd597cfb34,5782169,0,0x0,8
tick,0x7ffd597cfb34,5797513,0,0x0,8
tick,0x7ffd597cfb34,5812949,0,0x0,8
tick,0x7ffd597cfb34,5827957,0,0x0,8
tick,0x7ffd597cfb34,5843431,0,0x0,8
tick,0x7ffd597cfb34,5859417,0,0x0,8
tick,0x7ffd597cfb34,5875251,0,0x0,8
tick,0x7ffd597cfb34,5890427,0,0x0,8
tick,0x7ffd597cfb34,5906486,0,0x0,8
tick,0x7ffd597cfb34,5921483,0,0x0,8
tick,0x7ffd597cfb34,5937363,0,0x0,8
tick,0x7ffd597cfb34,5952364,0,0x0,8
tick,0x7ffd597cfb34,5967367,0,0x0,8
tick,0x7ffd597cfb34,5983868,0,0x0,8
tick,0x7ffd597cfb34,5999626,0,0x0,8
tick,0x7ffd597cfb34,6015454,0,0x0,8
tick,0x7ffd597cfb34,6030852,0,0x0,8
tick,0x7ffd597cfb34,6045997,0,0x0,8
tick,0x7ffd597cfb34,6061073,0,0x0,8
tick,0x7ffd597cfb34,6076799,0,0x0,8
tick,0x7ffd597cfb34,6092512,0,0x0,8
tick,0x7ffd597cfb34,6108621,0,0x0,8
tick,0x7ffd597cfb34,6124260,0,0x0,8
tick,0x7ffd597cfb34,6140335,0,0x0,8
tick,0x7ffd597cfb34,6155770,0,0x0,8
tick,0x7ffd597cfb34,6171734,0,0x0,8
tick,0x7ffd597cfb34,6187679,0,0x0,8
tick,0x7ffd597cfb34,6203935,0,0x0,8
tick,0x7ffd597cfb34,6220065,0,0x0,8
tick,0x7ffd597cfb34,6235571,0,0x0,8
tick,0x7ffd597cfb34,6251603,0,0x0,8
tick,0x7ffd597cfb34,6266824,0,0x0,8
tick,0x7ffd597cfb34,6282138,0,0x0,8
tick,0x7ffd597cfb34,6297887,0,0x0,8
tick,0x7ffd597cfb34,6313502,0,0x0,8
tick,0x7ffd597cfb34,6328465,0,0x0,8
tick,0x7ffd597cfb34,6344455,0,0x0,8
tick,0x7ffd597cfb34,6359248,0,0x0,8
tick,0x7ffd597cfb34,6374780,0,0x0,8
tick,0x7ffd597cfb34,6391222,0,0x0,8
tick,0x7ffd597cfb34,6406875,0,0x0,8
tick,0x7ffd597cfb34,6422687,0,0x0,8
tick,0x7ffd597cfb34,6438340,0,0x0,8
tick,0x7ffd597cfb34,6453732,0,0x0,8
tick,0x7ffd597cfb34,6469293,0,0x0,8
tick,0x7ffd597cfb34,6484678,0,0x0,8
tick,0x7ffd597cfb34,6500313,0,0x0,8
tick,0x7ffd597cfb34,6515822,0,0x0,8
tick,0x7ffd597cfb34,6531087,0,0x0,8
tick,0x7ffd597cfb34,6546962,0,0x0,8
tick,0x7ffd597cfb34,6563124,0,0x0,8
tick,0x7ffd597cfb34,6579224,0,0x0,8
tick,0x7ffd597cfb34,6595729,0,0x0,8
tick,0x7ffd597cfb34,6612135,0,0x0,8
tick,0x7ffd597cfb34,6627837,0,0x0,8
tick,0x7ffd597cfb34,6643610,0,0x0,8
tick,0x7ffd597cfb34,6659468,0,0x0,8
tick,0x7ffd597cfb34,6675328,0,0x0,8
tick,0x7ffd597cfb34,6691298,0,0x0,8
tick,0x7ffd597cfb34,6706671,0,0x0,8
tick,0x7ffd597cfb34,6721677,0,0x0,8
tick,0x7ffd597cfb34,6737677,0,0x0,8
tick,0x7ffd597cfb34,6753650,0,0x0,8
tick,0x7ffd597cfb34,6769658,0,0x0,8
tick,0x7ffd597cfb34,6785655,0,0x0,8
tick,0x7ffd597cfb34,6801741,0,0x0,8
tick,0x7ffd597cfb34,6816713,0,0x0,8
tick,0x7ffd597cfb34,6832117,0,0x0,8
tick,0x7ffd597cfb34,6847766,0,0x0,8
tick,0x7ffd597cfb34,6863429,0,0x0,8
tick,0x7ffd597cfb34,6879206,0,0x0,8
tick,0x7ffd597cfb34,6895460,0,0x0,8
tick,0x7ffd597cfb34,6911171,0,0x0,8
tick,0x7ffd597cfb34,6927167,0,0x0,8
tick,0x7ffd597cfb34,6943012,0,0x0,8
tick,0x7ffd597cfb34,6958483,0,0x0,8
tick,0x7ffd597cfb34,6974802,0,0x0,8
tick,0x7ffd597cfb34,6990623,0,0x0,8
tick,0x7ffd597cfb34,7006195,0,0x0,8
tick,0x7ffd597cfb34,7022436,0,0x0,8
tick,0x7ffd597cfb34,7038340,0,0x0,8
tick,0x7ffd597cfb34,7054248,0,0x0,8
tick,0x7ffd597cfb34,7069821,0,0x0,8
tick,0x7ffd597cfb34,7085139,0,0x0,8
tick,0x7ffd597cfb34,7101122,0,0x0,8
tick,0x7ffd597cfb34,7116933,0,0x0,8
tick,0x7ffd597cfb34,7132355,0,0x0,8
tick,0x7ffd597cfb34,7148805,0,0x0,8
tick,0x7ffd597cfb34,7164650,0,0x0,8
tick,0x7ffd597cfb34,7180240,0,0x0,8
tick,0x7ffd597cfb34,7195978,0,0x0,8
tick,0x7ffd597cfb34,7212253,0,0x0,8
tick,0x7ffd597cfb34,7227846,0,0x0,8
tick,0x7ffd597cfb34,7243099,0,0x0,8
tick,0x7ffd597cfb34,7258920,0,0x0,8
tick,0x7ffd597cfb34,7274194,0,0x0,8
tick,0x7ffd597cfb34,7290151,0,0x0,8
tick,0x7ffd597cfb34,7305471,0,0x0,8
tick,0x7ffd597cfb34,7321611,0,0x0,8
tick,0x7ffd597cfb34,7337302,0,0x0,8
tick,0x7ffd597cfb34,7353030,0,0x0,8
tick,0x7ffd597cfb34,7368716,0,0x0,8
tick,0x7ffd597cfb34,7384318,0,0x0,8
tick,0x7ffd597cfb34,7400424,0,0x0,8
tick,0x7ffd597cfb34,7416258,0,0x0,8
tick,0x7ffd597cfb34,7431589,0,0x0,8
tick,0x7ffd597cfb34,7447580,0,0x0,8
tick,0x7ffd597cfb34,7463238,0,0x0,8
tick,0x7ffd597cfb34,7478383,0,0x0,8
tick,0x7ffd597cfb34,7494545,0,0x0,8
tick,0x7ffd597cfb34,7510837,0,0x0,8
tick,0x7ffd597cfb34,7526312,0,0x0,8
tick,0x7ffd597cfb34,7542315,0,0x0,8
tick,0x7ffd597cfb34,7558421,0,0x0,8
tick,0x7ffd597cfb34,7574384,0,0x0,8
tick,0x7ffd597cfb34,7589794,0,0x0,8
tick,0x7ffd597cfb34,7605229,0,0x0,8
tick,0x7ffd597cfb34,7621601,0,0x0,8
tick,0x7ffd597cfb34,7636910,0,0x0,8
tick,0x7ffd597cfb34,7652724,0,0x0,8
tick,0x7ffd597cfb34,7668015,0,0x0,8
tick,0x7ffd597cfb34,7684737,0,0x0,8
tick,0x7ffd597cfb34,7700682,0,0x0,8
tick,0x7ffd597cfb34,7716000,0,0x0,8
tick,0x7ffd597cfb34,7732014,0,0x0,8
tick,0x7ffd597cfb34,7747838,0,0x0,8
tick,0x7ffd597cfb34,7764170,0,0x0,8
tick,0x7ffd597cfb34,7779890,0,0x0,8
tick,0x7ffd597cfb34,7795837,0,0x0,8
tick,0x7ffd597cfb34,7811870,0,0x0,8
tick,0x7ffd597cfb34,7827665,0,0x0,8
tick,0x7ffd597cfb34,7843506,0,0x0,8
tick,0x7ffd597cfb34,7859188,0,0x0,8
tick,0x7ffd597cfb34,7875376,0,0x0,8
tick,0x7ffd597cfb34,7891501,0,0x0,8
tick,0x7ffd597cfb34,7907106,0,0x0,8
tick,0x7ffd597cfb34,7922806,0,0x0,8
tick,0x7ffd597cfb34,7937754,0,0x0,8
tick,0x7ffd597cfb34,7953456,0,0x0,8
tick,0x7ffd597cfb34,7969585,0,0x0,8
tick,0x7ffd597cfb34,7985466,0,0x0,8
tick,0x7ffd597cfb34,8000478,0,0x0,8
tick,0x7ffd597cfb34,8015232,0,0x0,8
tick,0x7ffd597cfb34,8030575,0,0x0,8
tick,0x7ffd597cfb34,8046532,0,0x0,8
tick,0x7ffd597cfb34,8062572,0,0x0,8
tick,0x7ffd597cfb34,8078575,0,0x0,8
tick,0x7ffd597cfb34,8094604,0,0x0,8
tick,0x7ffd597cfb34,8110569,0,0x0,8
tick,0x7ffd597cfb34,8126581,0,0x0,8
tick,0x7ffd597cfb34,8142587,0,0x0,8
tick,0x7ffd597cfb34,8158340,0,0x0,8
tick,0x7ffd597cfb34,8173479,0,0x0,8
tick,0x7ffd597cfb34,8188891,0,0x0,8
tick,0x7ffd597cfb34,8204980,0,0x0,8
tick,0x7ffd597cfb34,8220781,0,0x0,8
tick,0x7ffd597cfb34,8236348,0,0x0,8
tick,0x7ffd597cfb34,8251973,0,0x0,8
tick,0x7ffd597cfb34,8267804,0,0x0,8
tick,0x7ffd597cfb34,8283226,0,0x0,8
tick,0x7ffd597cfb34,8299237,0,0x0,8
tick,0x7ffd597cfb34,8315280,0,0x0,8
tick,0x7ffd597cfb34,8330722,0,0x0,8
tick,0x7ffd597cfb34,8346459,0,0x0,8
tick,0x7ffd597cfb34,8362740,0,0x0,8
tick,0x7ffd597cfb34,8378239,0,0x0,8
tick,0x7ffd597cfb34,8393794,0,0x0,8
tick,0x7ffd597cfb34,8409366,0,0x0,8
tick,0x7ffd597cfb34,8425368,0,0x0,8
tick,0x7ffd597cfb34,8441713,0,0x0,8
tick,0x7ffd597cfb34,8457239,0,0x0,8
tick,0x7ffd597cfb34,8473224,0,0x0,8
tick,0x7ffd597cfb34,8488744,0,0x0,8
tick,0x7ffd597cfb34,8504612,0,0x0,8
tick,0x7ffd597cfb34,8520260,0,0x0,8
tick,0x7ffd597cfb34,8535885,0,0x0,8
tick,0x7ffd597cfb34,8551439,0,0x0,8
tick,0x7ffd597cfb34,8567212,0,0x0,8
tick,0x7ffd597cfb34,8582966,0,0x0,8
tick,0x7ffd597cfb34,8599242,0,0x0,8
tick,0x7ffd597cfb34,8615474,0,0x0,8
tick,0x7ffd597cfb34,8631814,0,0x0,8
tick,0x7ffd597cfb34,8647855,0,0x0,8
tick,0x7ffd597cfb34,8663379,0,0x0,8
tick,0x7ffd597cfb34,8678953,0,0x0,8
tick,0x7ffd597cfb34,8694321,0,0x0,8
tick,0x7ffd597cfb34,8709732,0,0x0,8
tick,0x7ffd597cfb34,8725550,0,0x0,8
tick,0x7ffd597cfb34,8741392,0,0x0,8
tick,0x7ffd597cfb34,8757226,0,0x0,8
tick,0x7ffd597cfb34,8773789,0,0x0,8
tick,0x7ffd597cfb34,8789321,0,0x0,8
tick,0x7ffd597cfb34,8804967,0,0x0,8
tick,0x7ffd597cfb34,8820652,0,0x0,8
tick,0x7ffd597cfb34,8836056,0,0x0,8
tick,0x7ffd597cfb34,8852048,0,0x0,8
tick,0x7ffd597cfb34,8867532,0,0x0,8
tick,0x7ffd597cfb34,8884127,0,0x0,8
tick,0x7ffd597cfb34,8899879,0,0x0,8
tick,0x7ffd597cfb34,8916083,0,0x0,8
tick,0x7ffd597cfb34,8931928,0,0x0,8
tick,0x7ffd597cfb34,8947418,0,0x0,8
tick,0x7ffd597cfb34,8963188,0,0x0,8
tick,0x7ffd597cfb34,8978480,0,0x0,8
tick,0x7ffd597cfb34,8994293,0,0x0,8
tick,0x7ffd597cfb34,9009717,0,0x0,8
tick,0x7ffd597cfb34,9025724,0,0x0,8
tick,0x7ffd597cfb34,9041657,0,0x0,8
tick,0x7ffd597cfb34,9057339,0,0x0,8
tick,0x7ffd597cfb34,9073112,0,0x0,8
tick,0x7ffd597cfb34,9089064,0,0x0,8
tick,0x7ffd597cfb34,9105009,0,0x0,8
tick,0x7ffd597cfb34,9121080,0,0x0,8
tick,0x7ffd597cfb34,9136873,0,0x0,8
tick,0x7ffd597cfb34,9152601,0,0x0,8
tick,0x7ffd597cfb34,9168231,0,0x0,8
tick,0x7ffd597cfb34,9183988,0,0x0,8
tick,0x7ffd597cfb34,9199251,0,0x0,8
tick,0x7ffd597cfb34,9214986,0,0x0,8
tick,0x7ffd597cfb34,9230836,0,0x0,8
tick,0x7ffd597cfb34,9246850,0,0x0,8
tick,0x7ffd597cfb34,9262427,0,0x0,8
tick,0x7ffd597cfb34,9278438,0,0x0,8
tick,0x7ffd597cfb34,9293980,0,0x0,8
tick,0x7ffd597cfb34,9310359,0,0x0,8
tick,0x7ffd597cfb34,9325802,0,0x0,8
tick,0x7ffd597cfb34,9341760,0,0x0,8
tick,0x7ffd597cfb34,9357620,0,0x0,8
tick,0x7ffd597cfb34,9373750,0,0x0,8
tick,0x7ffd597cfb34,9389707,0,0x0,8
tick,0x7ffd597cfb34,9405308,0,0x0,8
tick,0x7ffd597cfb34,9420844,0,0x0,8
tick,0x7ffd597cfb34,9436610,0,0x0,8
tick,0x7ffd597cfb34,9453015,0,0x0,8
tick,0x7ffd597cfb34,9469149,0,0x0,8
tick,0x7ffd597cfb34,9484656,0,0x0,8
tick,0x7ffd597cfb34,9500344,0,0x0,8
tick,0x7ffd597cfb34,9515331,0,0x0,8
tick,0x7ffd597cfb34,9531142,0,0x0,8
tick,0x7ffd597cfb34,9546637,0,0x0,8
tick,0x7ffd597cfb34,9562393,0,0x0,8
tick,0x7ffd597cfb34,9578078,0,0x0,8
tick,0x7ffd597cfb34,9593988,0,0x0,8
tick,0x7ffd597cfb34,9609756,0,0x0,8
tick,0x7ffd597cfb34,9625446,0,0x0,8
tick,0x7ffd597cfb34,9640804,0,0x0,8
tick,0x7ffd597cfb34,9656750,0,0x0,8
tick,0x7ffd597cfb34,9672937,0,0x0,8
tick,0x7ffd597cfb34,9688737,0,0x0,8
tick,0x7ffd597cfb34,9704831,0,0x0,8
tick,0x7ffd597cfb34,9720356,0,0x0,8
tick,0x7ffd597cfb34,9736010,0,0x0,8
tick,0x7ffd597cfb34,9752463,0,0x0,8
tick,0x7ffd597cfb34,9767789,0,0x0,8
tick,0x7ffd597cfb34,9783628,0,0x0,8
tick,0x7ffd597cfb34,9799364,0,0x0,8
tick,0x7ffd597cfb34,9815281,0,0x0,8
tick,0x7ffd597cfb34,9831275,0,0x0,8
tick,0x7ffd597cfb34,9846509,0,0x0,8
tick,0x7ffd597cfb34,9861622,0,0x0,8
tick,0x7ffd597cfb34,9877311,0,0x0,8
tick,0x7ffd597cfb34,9893526,0,0x0,8
tick,0x7ffd597cfb34,9908471,0,0x0,8
tick,0x7ffd597cfb34,9924311,0,0x0,8
tick,0x7ffd597cfb34,9940077,0,0x0,8
tick,0x7ffd597cfb34,9956359,0,0x0,8
tick,0x7ffd597cfb34,9972332,0,0x0,8
tick,0x7ffd597cfb34,9988527,0,0x0,8
tick,0x7ffd597cfb34,10003880,0,0x0,8
tick,0x7ffd597cfb34,10019680,0,0x0,8
tick,0x7ffd597cfb34,10035280,0,0x0,8
tick,0x7ffd597cfb34,10050703,0,0x0,8
tick,0x7ffd597cfb34,10066955,0,0x0,8
tick,0x7ffd597cfb34,10082987,0,0x0,8
tick,0x7ffd597cfb34,10098493,0,0x0,8
tick,0x7ffd597cfb34,10114150,0,0x0,8
tick,0x7ffd597cfb34,10129391,0,0x0,8
tick,0x7ffd597cfb34,10144803,0,0x0,8
tick,0x7ffd597cfb34,10160513,0,0x0,8
tick,0x7ffd597cfb34,10176285,0,0x0,8
tick,0x7ffd597cfb34,10192448,0,0x0,8
tick,0x7ffd597cfb34,10207607,0,0x0,8
tick,0x7ffd597cfb34,10223641,0,0x0,8
tick,0x7ffd597cfb34,10239370,0,0x0,8
tick,0x7ffd597cfb34,10255125,0,0x0,8
tick,0x7ffd597cfb34,10270659,0,0x0,8
tick,0x7ffd597cfb34,10286040,0,0x0,8
tick,0x7ffd597cfb34,10301757,0,0x0,8
tick,0x7ffd597cfb34,10317594,0,0x0,8
tick,0x7ffd597cfb34,10333742,0,0x0,8
tick,0x7ffd597cfb34,10349241,0,0x0,8
tick,0x7ffd597cfb34,10364919,0,0x0,8
tick,0x7ffd597cfb34,10380756,0,0x0,8
tick,0x7ffd597cfb34,10396502,0,0x0,8
tick,0x7ffd597cfb34,10412108,0,0x0,8
tick,0x7ffd597cfb34,10427690,0,0x0,8
tick,0x7ffd597cfb34,10443104,0,0x0,8
tick,0x7ffd597cfb34,10458678,0,0x0,8
tick,0x7ffd597cfb34,10474098,0,0x0,8
tick,0x7ffd597cfb34,10489880,0,0x0,8
tick,0x7ffd597cfb34,10505277,0,0x0,8
tick,0x7ffd597cfb34,10520953,0,0x0,8
tick,0x7ffd597cfb34,10536487,0,0x0,8
tick,0x7ffd597cfb34,10552226,0,0x0,8
tick,0x7ffd597cfb34,10567787,0,0x0,8
tick,0x7ffd597cfb34,10582895,0,0x0,8
tick,0x7ffd597cfb34,10599221,0,0x0,8
tick,0x7ffd597cfb34,10615318,0,0x0,8
tick,0x7ffd597cfb34,10630719,0,0x0,8
tick,0x7ffd597cfb34,10646592,0,0x0,8
tick,0x7ffd597cfb34,10661496,0,0x0,8
tick,0x7ffd597cfb34,10677071,0,0x0,8
tick,0x7ffd597cfb34,10692069,0,0x0,8
tick,0x7ffd597cfb34,10708077,0,0x0,8
tick,0x7ffd597cfb34,10723050,0,0x0,8
tick,0x7ffd597cfb34,10738377,0,0x0,8
tick,0x7ffd597cfb34,10753752,0,0x0,8
tick,0x7ffd597cfb34,10768951,0,0x0,8
tick,0x7ffd597cfb34,10784508,0,0x0,8
tick,0x7ffd597cfb34,10800425,0,0x0,8
tick,0x7ffd597cfb34,10816557,0,0x0,8
tick,0x7ffd597cfb34,10832578,0,0x0,8
tick,0x7ffd597cfb34,10847918,0,0x0,8
tick,0x7ffd597cfb34,10863654,0,0x0,8
tick,0x7ffd597cfb34,10879934,0,0x0,8
tick,0x7ffd597cfb34,10895965,0,0x0,8
tick,0x7ffd597cfb34,10911469,0,0x0,8
tick,0x7ffd597cfb34,10927480,0,0x0,8
tick,0x7ffd597cfb34,10943174,0,0x0,8
tick,0x7ffd597cfb34,10958530,0,0x0,8
tick,0x7ffd597cfb34,10974641,0,0x0,8
tick,0x7ffd597cfb34,10990379,0,0x0,8
tick,0x7ffd597cfb34,11006316,0,0x0,8
tick,0x7ffd597cfb34,11021716,0,0x0,8
tick,0x7ffd597cfb34,11037755,0,0x0,8
tick,0x7ffd597cfb34,11053466,0,0x0,8
tick,0x7ffd597cfb34,11069354,0,0x0,8
tick,0x7ffd597cfb34,11084969,0,0x0,8
tick,0x7ffd597cfb34,11100753,0,0x0,8
tick,0x7ffd597cfb34,11116941,0,0x0,8
tick,0x7ffd597cfb34,11132386,0,0x0,8
tick,0x7ffd597cfb34,11147951,0,0x0,8
tick,0x7ffd597cfb34,11164379,0,0x0,8
tick,0x7ffd597cfb34,11180214,0,0x0,8
tick,0x7ffd597cfb34,11195709,0,0x0,8
tick,0x7ffd597cfb34,11211509,0,0x0,8
tick,0x7ffd597cfb34,11227237,0,0x0,8
tick,0x7ffd597cfb34,11243308,0,0x0,8
tick,0x7ffd597cfb34,11258392,0,0x0,8
tick,0x7ffd597cfb34,11273789,0,0x0,8
tick,0x7ffd597cfb34,11289156,0,0x0,8
tick,0x7ffd597cfb34,11304985,0,0x0,8
tick,0x7ffd597cfb34,11320296,0,0x0,8
tick,0x7ffd597cfb34,11335839,0,0x0,8
tick,0x7ffd597cfb34,11351577,0,0x0,8
tick,0x7ffd597cfb34,11366852,0,0x0,8
tick,0x7ffd597cfb34,11382971,0,0x0,8
tick,0x7ffd597cfb34,11398961,0,0x0,8
tick,0x7ffd597cfb34,11415389,0,0x0,8
tick,0x7ffd597cfb34,11431125,0,0x0,8
tick,0x7ffd597cfb34,11446570,0,0x0,8
tick,0x7ffd597cfb34,11461773,0,0x0,8
tick,0x7ffd597cfb34,11477453,0,0x0,8
tick,0x7ffd597cfb34,11493489,0,0x0,8
tick,0x7ffd597cfb34,11508433,0,0x0,8
tick,0x7ffd597cfb34,11523996,0,0x0,8
tick,0x7ffd597cfb34,11539883,0,0x0,8
tick,0x7ffd597cfb34,11555590,0,0x0,8
tick,0x7ffd597cfb34,11570978,0,0x0,8
tick,0x7ffd597cfb34,11585956,0,0x0,8
tick,0x7ffd597cfb34,11601231,0,0x0,8
tick,0x7ffd597cfb34,11617320,0,0x0,8
tick,0x7ffd597cfb34,11632098,0,0x0,8
tick,0x7ffd597cfb34,11647541,0,0x0,8
tick,0x7ffd597cfb34,11663369,0,0x0,8
tick,0x7ffd597cfb34,11679060,0,0x0,8
tick,0x7ffd597cfb34,11694641,0,0x0,8
tick,0x7ffd597cfb34,11710229,0,0x0,8
tick,0x7ffd597cfb34,11726259,0,0x0,8
tick,0x7ffd597cfb34,11741507,0,0x0,8
tick,0x7ffd597cfb34,11756825,0,0x0,8
tick,0x7ffd597cfb34,11771961,0,0x0,8
tick,0x7ffd597cfb34,11787242,0,0x0,8
tick,0x7ffd597cfb34,11802562,0,0x0,8
tick,0x7ffd597cfb34,11818990,0,0x0,8
tick,0x7ffd597cfb34,11834872,0,0x0,8
tick,0x7ffd597cfb34,11851440,0,0x0,8
tick,0x7ffd597cfb34,11866708,0,0x0,8
tick,0x7ffd597cfb34,11882011,0,0x0,8
tick,0x7ffd597cfb34,11897254,0,0x0,8
tick,0x7ffd597cfb34,11912811,0,0x0,8
tick,0x7ffd597cfb34,11928815,0,0x0,8
tick,0x7ffd597cfb34,11944405,0,0x0,8
tick,0x7ffd597cfb34,11959967,0,0x0,8
tick,0x7ffd597cfb34,11975038,0,0x0,8
tick,0x7ffd597cfb34,11991146,0,0x0,8
tick,0x7ffd597cfb34,12007026,0,0x0,8
tick,0x7ffd597cfb34,12023016,0,0x0,8
tick,0x7ffd597cfb34,12039017,0,0x0,8
tick,0x7ffd597cfb34,12055197,0,0x0,8
tick,0x7ffd597cfb34,12070321,0,0x0,8
tick,0x7ffd597cfb34,12085960,0,0x0,8
tick,0x7ffd597cfb34,12101154,0,0x0,8
tick,0x7ffd597cfb34,12116835,0,0x0,8
tick,0x7ffd597cfb34,12132676,0,0x0,8
tick,0x7ffd597cfb34,12148120,0,0x0,8
tick,0x7ffd597cfb34,12163514,0,0x0,8
tick,0x7ffd597cfb34,12179430,0,0x0,8
tick,0x7ffd597cfb34,12195617,0,0x0,8
tick,0x7ffd597cfb34,12211260,0,0x0,8
tick,0x7ffd597cfb34,12227660,0,0x0,8
tick,0x7ffd597cfb34,12242786,0,0x0,8
tick,0x7ffd597cfb34,12258030,0,0x0,8
tick,0x7ffd597cfb34,12273988,0,0x0,8
tick,0x7ffd597cfb34,12289379,0,0x0,8
tick,0x7ffd597cfb34,12305252,0,0x0,8
tick,0x7ffd597cfb34,12320873,0,0x0,8
tick,0x7ffd597cfb34,12336716,0,0x0,8
tick,0x7ffd597cfb34,12352915,0,0x0,8
tick,0x7ffd597cfb34,12368875,0,0x0,8
tick,0x7ffd597cfb34,12384422,0,0x0,8
tick,0x7ffd597cfb34,12400102,0,0x0,8
tick,0x7ffd597cfb34,12415982,0,0x0,8
tick,0x7ffd597cfb34,12431462,0,0x0,8
tick,0x7ffd597cfb34,12446922,0,0x0,8
tick,0x7ffd597cfb34,12462181,0,0x0,8
tick,0x7ffd597cfb34,12478118,0,0x0,8
tick,0x7ffd597cfb34,12494086,0,0x0,8
tick,0x7ffd597cfb34,12509850,0,0x0,8
tick,0x7ffd597cfb34,12525665,0,0x0,8
tick,0x7ffd597cfb34,12541824,0,0x0,8
tick,0x7ffd597cfb34,12557069,0,0x0,8
tick,0x7ffd597cfb34,12572281,0,0x0,8
tick,0x7ffd597cfb34,12587943,0,0x0,8
tick,0x7ffd597cfb34,12603110,0,0x0,8
tick,0x7ffd597cfb34,12618734,0,0x0,8
tick,0x7ffd597cfb34,12634502,0,0x0,8
tick,0x7ffd597cfb34,12650254,0,0x0,8
tick,0x7ffd597cfb34,12665416,0,0x0,8
tick,0x7ffd597cfb34,12680793,0,0x0,8
tick,0x7ffd597cfb34,12696473,0,0x0,8
tick,0x7ffd597cfb34,12712025,0,0x0,8
tick,0x7ffd597cfb34,12727409,0,0x0,8
tick,0x7ffd597cfb34,12742729,0,0x0,8
tick,0x7ffd597cfb34,12758600,0,0x0,8
tick,0x7ffd597cfb34,12774029,0,0x0,8
tick,0x7ffd597cfb34,12790053,0,0x0,8
tick,0x7ffd597cfb34,12805638,0,0x0,8
tick,0x7ffd597cfb34,12821734,0,0x0,8
tick,0x7ffd597cfb34,12837727,0,0x0,8
tick,0x7ffd597cfb34,12853594,0,0x0,8
tick,0x7ffd597cfb34,12869629,0,0x0,8
tick,0x7ffd597cfb34,12885594,0,0x0,8
tick,0x7ffd597cfb34,12901028,0,0x0,8
tick,0x7ffd597cfb34,12917117,0,0x0,8
tick,0x7ffd597cfb34,12933254,0,0x0,8
tick,0x7ffd597cfb34,12949066,0,0x0,8
tick,0x7ffd597cfb34,12964788,0,0x0,8
tick,0x7ffd597cfb34,12981072,0,0x0,8
tick,0x7ffd597cfb34,12996611,0,0x0,8
tick,0x7ffd597cfb34,13012708,0,0x0,8
tick,0x7ffd597cfb34,13027685,0,0x0,8
tick,0x7ffd597cfb34,13043034,0,0x0,8
tick,0x7ffd597cfb34,13059081,0,0x0,8
tick,0x7ffd597cfb34,13075098,0,0x0,8
tick,0x7ffd597cfb34,13091089,0,0x0,8
tick,0x7ffd597cfb34,13107157,0,0x0,8
tick,0x7ffd597cfb34,13122543,0,0x0,8
tick,0x7ffd597cfb34,13138271,0,0x0,8
tick,0x7ffd597cfb34,13153965,0,0x0,8
tick,0x7ffd597cfb34,13169219,0,0x0,8
tick,0x7ffd597cfb34,13184960,0,0x0,8
tick,0x7ffd597cfb34,13199832,0,0x0,8
tick,0x7ffd597cfb34,13215438,0,0x0,8
tick,0x7ffd597cfb34,13231128,0,0x0,8
tick,0x7ffd597cfb34,13247360,0,0x0,8
tick,0x7ffd597cfb34,13262906,0,0x0,8
tick,0x7ffd597cfb34,13277915,0,0x0,8
tick,0x7ffd597cfb34,13294151,0,0x0,8
tick,0x7ffd597cfb34,13309293,0,0x0,8
tick,0x7ffd597cfb34,13325114,0,0x0,8
tick,0x7ffd597cfb34,13341423,0,0x0,8
tick,0x7ffd597cfb34,13357420,0,0x0,8
tick,0x7ffd597cfb34,13373079,0,0x0,8
tick,0x7ffd597cfb34,13388651,0,0x0,8
tick,0x7ffd597cfb34,13404490,0,0x0,8
tick,0x7ffd597cfb34,13419508,0,0x0,8
tick,0x7ffd597cfb34,13435056,0,0x0,8
tick,0x7ffd597cfb34,13450293,0,0x0,8
tick,0x7ffd597cfb34,13466088,0,0x0,8
tick,0x7ffd597cfb34,13481802,0,0x0,8
tick,0x7ffd597cfb34,13497011,0,0x0,8
tick,0x7ffd597cfb34,13512365,0,0x0,8
tick,0x7ffd597cfb34,13528334,0,0x0,8
tick,0x7ffd597cfb34,13543885,0,0x0,8
tick,0x7ffd597cfb34,13560210,0,0x0,8
tick,0x7ffd597cfb34,13576011,0,0x0,8
tick,0x7ffd597cfb34,13591244,0,0x0,8
tick,0x7ffd597cfb34,13607101,0,0x0,8
tick,0x7ffd597cfb34,13622598,0,0x0,8
tick,0x7ffd597cfb34,13638559,0,0x0,8
tick,0x7ffd597cfb34,13653736,0,0x0,8
tick,0x7ffd597cfb34,13669008,0,0x0,8
tick,0x7ffd597cfb34,13684219,0,0x0,8
tick,0x7ffd597cfb34,13700082,0,0x0,8
tick,0x7ffd597cfb34,13715456,0,0x0,8
tick,0x7ffd597cfb34,13731063,0,0x0,8
tick,0x7ffd597cfb34,13747185,0,0x0,8
tick,0x7ffd597cfb34,13763064,0,0x0,8
tick,0x7ffd597cfb34,13779067,0,0x0,8
tick,0x7ffd597cfb34,13795157,0,0x0,8
tick,0x7ffd597cfb34,13810853,0,0x0,8
tick,0x7ffd597cfb34,13825783,0,0x0,8
tick,0x7ffd597cfb34,13840864,0,0x0,8
tick,0x7ffd597cfb34,13856053,0,0x0,8
tick,0x7ffd597cfb34,13871411,0,0x0,8
tick,0x7ffd597cfb34,13887359,0,0x0,8
tick,0x7ffd597cfb34,13903356,0,0x0,8
tick,0x7ffd597cfb34,13918515,0,0x0,8
tick,0x7ffd597cfb34,13933748,0,0x0,8
tick,0x7ffd597cfb34,13949309,0,0x0,8
tick,0x7ffd597cfb34,13964570,0,0x0,8
tick,0x7ffd597cfb34,13979498,0,0x0,8
tick,0x7ffd597cfb34,13994590,0,0x0,8
tick,0x7ffd597cfb34,14009832,0,0x0,8
tick,0x7ffd597cfb34,14025810,0,0x0,8
tick,0x7ffd597cfb34,14041180,0,0x0,8
tick,0x7ffd597cfb34,14057211,0,0x0,8
tick,0x7ffd597cfb34,14073238,0,0x0,8
tick,0x7ffd597cfb34,14088678,0,0x0,8
tick,0x7ffd597cfb34,14104156,0,0x0,8
tick,0x7ffd597cfb34,14119113,0,0x0,8
tick,0x7ffd597cfb34,14134917,0,0x0,8
tick,0x7ffd597cfb34,14150701,0,0x0,8
tick,0x7ffd597cfb34,14165886,0,0x0,8
tick,0x7ffd597cfb34,14180835,0,0x0,8
tick,0x7ffd597cfb34,14196353,0,0x0,8
tick,0x7ffd597cfb34,14211398,0,0x0,8
tick,0x7ffd597cfb34,14227457,0,0x0,8
tick,0x7ffd597cfb34,14243053,0,0x0,8
tick,0x7ffd597cfb34,14259639,0,0x0,8
tick,0x7ffd597cfb34,14275617,0,0x0,8
tick,0x7ffd597cfb34,14291204,0,0x0,8
tick,0x7ffd597cfb34,14306529,0,0x0,8
tick,0x7ffd597cfb34,14321702,0,0x0,8
tick,0x7ffd597cfb34,14337386,0,0x0,8
tick,0x7ffd597cfb34,14352516,0,0x0,8
tick,0x7ffd597cfb34,14368110,0,0x0,8
tick,0x7ffd597cfb34,14384163,0,0x0,8
tick,0x7ffd597cfb34,14399571,0,0x0,8
tick,0x7ffd597cfb34,14414958,0,0x0,8
tick,0x7ffd597cfb34,14430313,0,0x0,8
tick,0x7ffd597cfb34,14445454,0,0x0,8
tick,0x7ffd597cfb34,14460711,0,0x0,8
tick,0x7ffd597cfb34,14476491,0,0x0,8
tick,0x7ffd597cfb34,14492767,0,0x0,8
tick,0x7ffd597cfb34,14508639,0,0x0,8
tick,0x7ffd597cfb34,14524004,0,0x0,8
tick,0x7ffd597cfb34,14539526,0,0x0,8
tick,0x7ffd597cfb34,14555086,0,0x0,8
tick,0x7ffd597cfb34,14570488,0,0x0,8
tick,0x7ffd597cfb34,14586546,0,0x0,8
tick,0x7ffd597cfb34,14601688,0,0x0,8
tick,0x7ffd597cfb34,14617563,0,0x0,8
tick,0x7ffd597cfb34,14632528,0,0x0,8
tick,0x7ffd597cfb34,14647786,0,0x0,8
tick,0x7ffd597cfb34,14663072,0,0x0,8
tick,0x7ffd597cfb34,14678193,0,0x0,8
tick,0x7ffd597cfb34,14694423,0,0x0,8
tick,0x7ffd597cfb34,14709745,0,0x0,8
tick,0x7ffd597cfb34,14724951,0,0x0,8
tick,0x7ffd597cfb34,14740223,0,0x0,8
tick,0x7ffd597cfb34,14756074,0,0x0,8
tick,0x7ffd597cfb34,14772121,0,0x0,8
tick,0x7ffd597cfb34,14787221,0,0x0,8
tick,0x7ffd597cfb34,14802630,0,0x0,8
tick,0x7ffd597cfb34,14818060,0,0x0,8
tick,0x7ffd597cfb34,14833550,0,0x0,8
tick,0x7ffd597cfb34,14848814,0,0x0,8
tick,0x7ffd597cfb34,14863928,0,0x0,8
tick,0x7ffd597cfb34,14879570,0,0x0,8
tick,0x7ffd597cfb34,14894616,0,0x0,8
tick,0x7ffd597cfb34,14910172,0,0x0,8
tick,0x7ffd597cfb34,14926225,0,0x0,8
tick,0x7ffd597cfb34,14941723,0,0x0,8
tick,0x7ffd597cfb34,14956982,0,0x0,8
tick,0x7ffd597cfb34,14972519,0,0x0,8
tick,0x7ffd597cfb34,14988694,0,0x0,8
tick,0x7ffd597cfb34,15004672,0,0x0,8
tick,0x7ffd597cfb34,15020027,0,0x0,8
tick,0x7ffd597cfb34,15036023,0,0x0,8
tick,0x7ffd597cfb34,15051104,0,0x0,8
tick,0x7ffd597cfb34,15067014,0,0x0,8
tick,0x7ffd597cfb34,15082934,0,0x0,8
tick,0x7ffd597cfb34,15098716,0,0x0,8
tick,0x7ffd597cfb34,15114054,0,0x0,8
tick,0x7ffd597cfb34,15129719,0,0x0,8
tick,0x7ffd597cfb34,15145530,0,0x0,8
tick,0x7ffd597cfb34,15161079,0,0x0,8
tick,0x7ffd597cfb34,15176957,0,0x0,8
tick,0x7ffd597cfb34,15192763,0,0x0,8
tick,0x7ffd597cfb34,15208404,0,0x0,8
tick,0x7ffd597cfb34,15223622,0,0x0,8
tick,0x7ffd597cfb34,15238982,0,0x0,8
tick,0x7ffd597cfb34,15254220,0,0x0,8
tick,0x7ffd597cfb34,15269797,0,0x0,8
tick,0x7ffd597cfb34,15284864,0,0x0,8
tick,0x7ffd597cfb34,15300423,0,0x0,8
tick,0x7ffd597cfb34,15315676,0,0x0,8
tick,0x7ffd597cfb34,15330787,0,0x0,8
tick,0x7ffd597cfb34,15346921,0,0x0,8
tick,0x7ffd597cfb34,15362989,0,0x0,8
tick,0x7ffd597cfb34,15378943,0,0x0,8
tick,0x7ffd597cfb34,15394377,0,0x0,8
tick,0x7ffd597cfb34,15409469,0,0x0,8
tick,0x7ffd597cfb34,15424628,0,0x0,8
tick,0x7ffd597cfb34,15439816,0,0x0,8
tick,0x7ffd597cfb34,15455515,0,0x0,8
tick,0x7ffd597cfb34,15471057,0,0x0,8
tick,0x7ffd597cfb34,15486341,0,0x0,8
tick,0x7ffd597cfb34,15501862,0,0x0,8
tick,0x7ffd597cfb34,15517834,0,0x0,8
tick,0x7ffd597cfb34,15533767,0,0x0,8
tick,0x7ffd597cfb34,15549024,0,0x0,8
tick,0x7ffd597cfb34,15564003,0,0x0,8
tick,0x7ffd597cfb34,15580033,0,0x0,8
tick,0x7ffd597cfb34,15596004,0,0x0,8
tick,0x7ffd597cfb34,15611170,0,0x0,8
tick,0x7ffd597cfb34,15626280,0,0x0,8
tick,0x7ffd597cfb34,15642419,0,0x0,8
tick,0x7ffd597cfb34,15657689,0,0x0,8
tick,0x7ffd597cfb34,15672578,0,0x0,8
tick,0x7ffd597cfb34,15688613,0,0x0,8
tick,0x7ffd597cfb34,15703976,0,0x0,8
tick,0x7ffd597cfb34,15719518,0,0x0,8
tick,0x7ffd597cfb34,15735024,0,0x0,8
tick,0x7ffd597cfb34,15750757,0,0x0,8
tick,0x7ffd597cfb34,15765860,0,0x0,8
tick,0x7ffd597cfb34,15781138,0,0x0,8
tick,0x7ffd597cfb34,15796535,0,0x0,8
tick,0x7ffd597cfb34,15812141,0,0x0,8
tick,0x7ffd597cfb34,15827514,0,0x0,8
tick,0x7ffd597cfb34,15843334,0,0x0,8
tick,0x7ffd597cfb34,15859840,0,0x0,8
tick,0x7ffd597cfb34,15875827,0,0x0,8
tick,0x7ffd597cfb34,15891771,0,0x0,8
tick,0x7ffd597cfb34,15907402,0,0x0,8
tick,0x7ffd597cfb34,15923587,0,0x0,8
tick,0x7ffd597cfb34,15938512,0,0x0,8
tick,0x7ffd597cfb34,15954036,0,0x0,8
tick,0x7ffd597cfb34,15969963,0,0x0,8
tick,0x7ffd597cfb34,15985370,0,0x0,8
tick,0x7ffd597cfb34,16001945,0,0x0,8
tick,0x7ffd597cfb34,16017563,0,0x0,8
tick,0x7ffd597cfb34,16033444,0,0x0,8
tick,0x7ffd597cfb34,16049096,0,0x0,8
tick,0x7ffd597cfb34,16064814,0,0x0,8
tick,0x7ffd597cfb34,16080526,0,0x0,8
tick,0x7ffd597cfb34,16096209,0,0x0,8
tick,0x7ffd597cfb34,16111874,0,0x0,8
tick,0x7ffd597cfb34,16127444,0,0x0,8
tick,0x7ffd597cfb34,16142682,0,0x0,8
tick,0x7ffd597cfb34,16158903,0,0x0,8
tick,0x7ffd597cfb34,16174326,0,0x0,8
tick,0x7ffd597cfb34,16190513,0,0x0,8
tick,0x7ffd597cfb34,16206337,0,0x0,8
tick,0x7ffd597cfb34,16222481,0,0x0,8
tick,0x7ffd597cfb34,16238145,0,0x0,8
tick,0x7ffd597cfb34,16253518,0,0x0,8
tick,0x7ffd597cfb34,16269013,0,0x0,8
tick,0x7ffd597cfb34,16284982,0,0x0,8
tick,0x7ffd597cfb34,16300482,0,0x0,8
tick,0x7ffd597cfb34,16315967,0,0x0,8
tick,0x7ffd597cfb34,16331399,0,0x0,8
tick,0x7ffd597cfb34,16347130,0,0x0,8
tick,0x7ffd597cfb34,16362830,0,0x0,8
tick,0x7ffd597cfb34,16378901,0,0x0,8
tick,0x7ffd597cfb34,16394748,0,0x0,8
tick,0x7ffd597cfb34,16410284,0,0x0,8
tick,0x7ffd597cfb34,16426012,0,0x0,8
tick,0x7ffd597cfb34,16441502,0,0x0,8
tick,0x7ffd597cfb34,16456982,0,0x0,8
tick,0x7ffd597cfb34,16472915,0,0x0,8
tick,0x7ffd597cfb34,16489195,0,0x0,8
tick,0x7ffd597cfb34,16505884,0,0x0,8
tick,0x7ffd597cfb34,16521566,0,0x0,8
tick,0x7ffd597cfb34,16537385,0,0x0,8
tick,0x7ffd597cfb34,16553605,0,0x0,8
tick,0x7ffd597cfb34,16569399,0,0x0,8
new,MemoryChunk,0x280e8040000,262144
new,MemoryChunk,0x1f9e7940000,262144
new,MemoryChunk,0x1ffda9c0000,262144
new,MemoryChunk,0x18964640000,262144
markcompact,begin,0,281250,1655939619708
markcompact,end,0,281250,1655939619709
delete,MemoryChunk,0x8d48940000
delete,MemoryChunk,0xe2e4840000
delete,MemoryChunk,0x7c43540000
delete,MemoryChunk,0x19f77e00000
tick,0x7ffd597cfb34,16585865,0,0x0,8
tick,0x7ffd597cfb34,16601262,0,0x0,8
tick,0x7ffd597cfb34,16616635,0,0x0,8
tick,0x7ffd597cfb34,16632038,0,0x0,8
tick,0x7ffd597cfb34,16647467,0,0x0,8
tick,0x7ffd597cfb34,16663536,0,0x0,8
tick,0x7ffd597cfb34,16678909,0,0x0,8
tick,0x7ffd597cfb34,16694892,0,0x0,8
tick,0x7ffd597cfb34,16710302,0,0x0,8
tick,0x7ffd597cfb34,16726296,0,0x0,8
tick,0x7ffd597cfb34,16741700,0,0x0,8
tick,0x7ffd597cfb34,16757696,0,0x0,8
tick,0x7ffd597cfb34,16773534,0,0x0,8
tick,0x7ffd597cfb34,16789326,0,0x0,8
tick,0x7ffd597cfb34,16805820,0,0x0,8
tick,0x7ffd597cfb34,16821784,0,0x0,8
tick,0x7ffd597cfb34,16837241,0,0x0,8
tick,0x7ffd597cfb34,16852504,0,0x0,8
tick,0x7ffd597cfb34,16868424,0,0x0,8
tick,0x7ffd597cfb34,16883750,0,0x0,8
tick,0x7ffd597cfb34,16899479,0,0x0,8
tick,0x7ffd597cfb34,16915305,0,0x0,8
tick,0x7ffd597cfb34,16931009,0,0x0,8
tick,0x7ffd597cfb34,16946592,0,0x0,8
tick,0x7ffd597cfb34,16962210,0,0x0,8
tick,0x7ffd597cfb34,16977597,0,0x0,8
tick,0x7ffd597cfb34,16993108,0,0x0,8
tick,0x7ffd597cfb34,17009031,0,0x0,8
tick,0x7ffd597cfb34,17024715,0,0x0,8
tick,0x7ffd597cfb34,17040613,0,0x0,8
tick,0x7ffd597cfb34,17056352,0,0x0,8
tick,0x7ffd597cfb34,17072235,0,0x0,8
tick,0x7ffd597cfb34,17087717,0,0x0,8
tick,0x7ffd597cfb34,17103721,0,0x0,8
tick,0x7ffd597cfb34,17119989,0,0x0,8
tick,0x7ffd597cfb34,17136178,0,0x0,8
tick,0x7ffd597cfb34,17151641,0,0x0,8
tick,0x7ffd597cfb34,17167618,0,0x0,8
tick,0x7ffd597cfb34,17183079,0,0x0,8
markcompact,begin,0,281250,1655939620322
markcompact,end,0,281250,1655939620322
delete,MemoryChunk,0x280e8040000
delete,MemoryChunk,0x1f9e7940000
delete,MemoryChunk,0x1ffda9c0000
delete,MemoryChunk,0x18964640000
tick,0x7ffd597cfb34,17199092,0,0x0,8
tick,0x7ffd597cfb34,17214583,0,0x0,8
tick,0x7ffd597cfb34,17230344,0,0x0,8
tick,0x7ffd597cfb34,17246350,0,0x0,8
tick,0x7ffd597cfb34,17261946,0,0x0,8
tick,0x7ffd597cfb34,17277220,0,0x0,8
tick,0x7ffd597cfb34,17293347,0,0x0,8
tick,0x7ffd597cfb34,17309271,0,0x0,8
tick,0x7ffd597cfb34,17324886,0,0x0,8
tick,0x7ffd597cfb34,17340222,0,0x0,8
tick,0x7ffd597cfb34,17355801,0,0x0,8
tick,0x7ffd597cfb34,17371665,0,0x0,8
tick,0x7ffd597cfb34,17387167,0,0x0,8
tick,0x7ffd597cfb34,17403493,0,0x0,8
tick,0x7ffd597cfb34,17419362,0,0x0,8
tick,0x7ffd597cfb34,17434465,0,0x0,8
tick,0x7ffd597cfb34,17450052,0,0x0,8
tick,0x7ffd597cfb34,17465894,0,0x0,8
tick,0x7ffd597cfb34,17481362,0,0x0,8
tick,0x7ffd597cfb34,17496937,0,0x0,8
tick,0x7ffd597cfb34,17512191,0,0x0,8
tick,0x7ffd597cfb34,17527843,0,0x0,8
tick,0x7ffd597cfb34,17543521,0,0x0,8
tick,0x7ffd597cfb34,17559151,0,0x0,8
tick,0x7ffd597cfb34,17575259,0,0x0,8
tick,0x7ffd597cfb34,17591310,0,0x0,8
tick,0x7ffd597cfb34,17607484,0,0x0,8
tick,0x7ffd597cfb34,17623141,0,0x0,8
tick,0x7ffd597cfb34,17638742,0,0x0,8
tick,0x7ffd597cfb34,17655235,0,0x0,8
tick,0x7ffd597cfb34,17670716,0,0x0,8
tick,0x7ffd597cfb34,17686865,0,0x0,8
tick,0x7ffd597cfb34,17702687,0,0x0,8
tick,0x7ffd597cfb34,17717865,0,0x0,8
tick,0x7ffd597cfb34,17732922,0,0x0,8
tick,0x7ffd597cfb34,17748014,0,0x0,8
tick,0x7ffd597cfb34,17764395,0,0x0,8
tick,0x7ffd597cfb34,17780292,0,0x0,8
tick,0x7ffd597cfb34,17796213,0,0x0,8
tick,0x7ffd597cfb34,17812006,0,0x0,8
tick,0x7ffd597cfb34,17827717,0,0x0,8
tick,0x7ffd597cfb34,17843124,0,0x0,8
tick,0x7ffd597cfb34,17859107,0,0x0,8
tick,0x7ffd597cfb34,17875320,0,0x0,8
tick,0x7ffd597cfb34,17890593,0,0x0,8
tick,0x7ffd597cfb34,17906810,0,0x0,8
tick,0x7ffd597cfb34,17922055,0,0x0,8
tick,0x7ffd597cfb34,17937511,0,0x0,8
tick,0x7ffd597cfb34,17952646,0,0x0,8
tick,0x7ffd597cfb34,17968038,0,0x0,8
tick,0x7ffd597cfb34,17984023,0,0x0,8
tick,0x7ffd597cfb34,17999451,0,0x0,8
tick,0x7ffd597cfb34,18014573,0,0x0,8
tick,0x7ffd597cfb34,18030788,0,0x0,8
tick,0x7ffd597cfb34,18045744,0,0x0,8
tick,0x7ffd597cfb34,18061335,0,0x0,8
tick,0x7ffd597cfb34,18077114,0,0x0,8
tick,0x7ffd597cfb34,18092390,0,0x0,8
tick,0x7ffd597cfb34,18108511,0,0x0,8
tick,0x7ffd597cfb34,18123929,0,0x0,8
tick,0x7ffd597cfb34,18139306,0,0x0,8
tick,0x7ffd597cfb34,18155392,0,0x0,8
tick,0x7ffd597cfb34,18171031,0,0x0,8
tick,0x7ffd597cfb34,18186751,0,0x0,8
tick,0x7ffd597cfb34,18202046,0,0x0,8
tick,0x7ffd597cfb34,18218211,0,0x0,8
tick,0x7ffd597cfb34,18234123,0,0x0,8
tick,0x7ffd597cfb34,18249289,0,0x0,8
tick,0x7ffd597cfb34,18264753,0,0x0,8
tick,0x7ffd597cfb34,18280072,0,0x0,8
tick,0x7ffd597cfb34,18296260,0,0x0,8
tick,0x7ffd597cfb34,18312280,0,0x0,8
tick,0x7ffd597cfb34,18328263,0,0x0,8
tick,0x7ffd597cfb34,18343738,0,0x0,8
tick,0x7ffd597cfb34,18359762,0,0x0,8
tick,0x7ffd597cfb34,18375338,0,0x0,8
tick,0x7ffd597cfb34,18391301,0,0x0,8
tick,0x7ffd597cfb34,18406576,0,0x0,8
tick,0x7ffd597cfb34,18422271,0,0x0,8
tick,0x7ffd597cfb34,18436998,0,0x0,8
tick,0x7ffd597cfb34,18452133,0,0x0,8
tick,0x7ffd597cfb34,18468152,0,0x0,8
tick,0x7ffd597cfb34,18483575,0,0x0,8
tick,0x7ffd597cfb34,18499606,0,0x0,8
tick,0x7ffd597cfb34,18515021,0,0x0,8
tick,0x7ffd597cfb34,18531037,0,0x0,8
tick,0x7ffd597cfb34,18546412,0,0x0,8
tick,0x7ffd597cfb34,18562071,0,0x0,8
tick,0x7ffd597cfb34,18577360,0,0x0,8
tick,0x7ffd597cfb34,18593064,0,0x0,8
tick,0x7ffd597cfb34,18608053,0,0x0,8
tick,0x7ffd597cfb34,18624142,0,0x0,8
tick,0x7ffd597cfb34,18639619,0,0x0,8
tick,0x7ffd597cfb34,18654293,0,0x0,8
tick,0x7ffd597cfb34,18671038,0,0x0,8
tick,0x7ffd597cfb34,18685787,0,0x0,8
tick,0x7ffd597cfb34,18701941,0,0x0,8
tick,0x7ffd597cfb34,18716616,0,0x0,8
tick,0x7ffd597cfb34,18732090,0,0x0,8
tick,0x7ffd597cfb34,18747822,0,0x0,8
tick,0x7ffd597cfb34,18763082,0,0x0,8
tick,0x7ffd597cfb34,18778568,0,0x0,8
tick,0x7ffd597cfb34,18794483,0,0x0,8
tick,0x7ffd597cfb34,18809984,0,0x0,8
tick,0x7ffd597cfb34,18826148,0,0x0,8
tick,0x7ffd597cfb34,18841735,0,0x0,8
tick,0x7ffd597cfb34,18857847,0,0x0,8
tick,0x7ffd597cfb34,18873597,0,0x0,8
tick,0x7ffd597cfb34,18889564,0,0x0,8
tick,0x7ffd597cfb34,18905080,0,0x0,8
tick,0x7ffd597cfb34,18920299,0,0x0,8
tick,0x7ffd597cfb34,18935181,0,0x0,8
tick,0x7ffd597cfb34,18951301,0,0x0,8
tick,0x7ffd597cfb34,18967198,0,0x0,8
tick,0x7ffd597cfb34,18983293,0,0x0,8
tick,0x7ffd597cfb34,18999176,0,0x0,8
tick,0x7ffd597cfb34,19015190,0,0x0,8
tick,0x7ffd597cfb34,19031329,0,0x0,8
tick,0x7ffd597cfb34,19047377,0,0x0,8
tick,0x7ffd597cfb34,19063283,0,0x0,8
tick,0x7ffd597cfb34,19079293,0,0x0,8
tick,0x7ffd597cfb34,19094485,0,0x0,8
tick,0x7ffd597cfb34,19109831,0,0x0,8
tick,0x7ffd597cfb34,19125887,0,0x0,8
tick,0x7ffd597cfb34,19140815,0,0x0,8
tick,0x7ffd597cfb34,19156243,0,0x0,8
tick,0x7ffd597cfb34,19171484,0,0x0,8
tick,0x7ffd597cfb34,19186855,0,0x0,8
tick,0x7ffd597cfb34,19202042,0,0x0,8
tick,0x7ffd597cfb34,19217749,0,0x0,8
tick,0x7ffd597cfb34,19233012,0,0x0,8
tick,0x7ffd597cfb34,19248500,0,0x0,8
tick,0x7ffd597cfb34,19264585,0,0x0,8
tick,0x7ffd597cfb34,19280355,0,0x0,8
tick,0x7ffd597cfb34,19296174,0,0x0,8
tick,0x7ffd597cfb34,19312320,0,0x0,8
tick,0x7ffd597cfb34,19328705,0,0x0,8
tick,0x7ffd597cfb34,19344637,0,0x0,8
tick,0x7ffd597cfb34,19360365,0,0x0,8
tick,0x7ffd597cfb34,19375960,0,0x0,8
tick,0x7ffd597cfb34,19391546,0,0x0,8
tick,0x7ffd597cfb34,19407277,0,0x0,8
tick,0x7ffd597cfb34,19422772,0,0x0,8
tick,0x7ffd597cfb34,19438361,0,0x0,8
tick,0x7ffd597cfb34,19453631,0,0x0,8
tick,0x7ffd597cfb34,19469850,0,0x0,8
tick,0x7ffd597cfb34,19486273,0,0x0,8
tick,0x7ffd597cfb34,19501738,0,0x0,8
tick,0x7ffd597cfb34,19517672,0,0x0,8
tick,0x7ffd597cfb34,19533333,0,0x0,8
tick,0x7ffd597cfb34,19549129,0,0x0,8
tick,0x7ffd597cfb34,19564983,0,0x0,8
tick,0x7ffd597cfb34,19580665,0,0x0,8
tick,0x7ffd597cfb34,19596316,0,0x0,8
tick,0x7ffd597cfb34,19611929,0,0x0,8
tick,0x7ffd597cfb34,19628009,0,0x0,8
tick,0x7ffd597cfb34,19644200,0,0x0,8
tick,0x7ffd597cfb34,19659798,0,0x0,8
tick,0x7ffd597cfb34,19675050,0,0x0,8
tick,0x7ffd597cfb34,19690766,0,0x0,8
tick,0x7ffd597cfb34,19706536,0,0x0,8
tick,0x7ffd597cfb34,19722557,0,0x0,8
tick,0x7ffd597cfb34,19738417,0,0x0,8
tick,0x7ffd597cfb34,19754316,0,0x0,8
tick,0x7ffd597cfb34,19769716,0,0x0,8
tick,0x7ffd597cfb34,19785552,0,0x0,8
tick,0x7ffd597cfb34,19802090,0,0x0,8
tick,0x7ffd597cfb34,19818150,0,0x0,8
tick,0x7ffd597cfb34,19833367,0,0x0,8
tick,0x7ffd597cfb34,19849015,0,0x0,8
tick,0x7ffd597cfb34,19863886,0,0x0,8
tick,0x7ffd597cfb34,19879033,0,0x0,8
tick,0x7ffd597cfb34,19895419,0,0x0,8
tick,0x7ffd597cfb34,19911057,0,0x0,8
tick,0x7ffd597cfb34,19926777,0,0x0,8
tick,0x7ffd597cfb34,19943029,0,0x0,8
tick,0x7ffd597cfb34,19959016,0,0x0,8
tick,0x7ffd597cfb34,19974597,0,0x0,8
tick,0x7ffd597cfb34,19989810,0,0x0,8
tick,0x7ffd597cfb34,20006100,0,0x0,8
tick,0x7ffd597cfb34,20021856,0,0x0,8
tick,0x7ffd597cfb34,20037537,0,0x0,8
tick,0x7ffd597cfb34,20053388,0,0x0,8
tick,0x7ffd597cfb34,20068855,0,0x0,8
tick,0x7ffd597cfb34,20084783,0,0x0,8
tick,0x7ffd597cfb34,20100444,0,0x0,8
tick,0x7ffd597cfb34,20116134,0,0x0,8
tick,0x7ffd597cfb34,20131893,0,0x0,8
tick,0x7ffd597cfb34,20147424,0,0x0,8
tick,0x7ffd597cfb34,20163242,0,0x0,8
tick,0x7ffd597cfb34,20178529,0,0x0,8
tick,0x7ffd597cfb34,20194468,0,0x0,8
tick,0x7ffd597cfb34,20209894,0,0x0,8
tick,0x7ffd597cfb34,20225679,0,0x0,8
tick,0x7ffd597cfb34,20241285,0,0x0,8
tick,0x7ffd597cfb34,20256996,0,0x0,8
tick,0x7ffd597cfb34,20272938,0,0x0,8
tick,0x7ffd597cfb34,20288442,0,0x0,8
tick,0x7ffd597cfb34,20304718,0,0x0,8
tick,0x7ffd597cfb34,20320200,0,0x0,8
tick,0x7ffd597cfb34,20335881,0,0x0,8
tick,0x7ffd597cfb34,20351565,0,0x0,8
tick,0x7ffd597cfb34,20367428,0,0x0,8
tick,0x7ffd597cfb34,20383423,0,0x0,8
tick,0x7ffd597cfb34,20398825,0,0x0,8
tick,0x7ffd597cfb34,20414463,0,0x0,8
tick,0x7ffd597cfb34,20429702,0,0x0,8
tick,0x7ffd597cfb34,20445217,0,0x0,8
tick,0x7ffd597cfb34,20460678,0,0x0,8
tick,0x7ffd597cfb34,20476793,0,0x0,8
tick,0x7ffd597cfb34,20492558,0,0x0,8
tick,0x7ffd597cfb34,20508110,0,0x0,8
tick,0x7ffd597cfb34,20523136,0,0x0,8
tick,0x7ffd597cfb34,20538302,0,0x0,8
tick,0x7ffd597cfb34,20554012,0,0x0,8
tick,0x7ffd597cfb34,20569871,0,0x0,8
tick,0x7ffd597cfb34,20585395,0,0x0,8
tick,0x7ffd597cfb34,20601003,0,0x0,8
tick,0x7ffd597cfb34,20616051,0,0x0,8
tick,0x7ffd597cfb34,20632222,0,0x0,8
tick,0x7ffd597cfb34,20647797,0,0x0,8
tick,0x7ffd597cfb34,20664079,0,0x0,8
tick,0x7ffd597cfb34,20679602,0,0x0,8
tick,0x7ffd597cfb34,20695282,0,0x0,8
tick,0x7ffd597cfb34,20710405,0,0x0,8
tick,0x7ffd597cfb34,20726560,0,0x0,8
tick,0x7ffd597cfb34,20742051,0,0x0,8
tick,0x7ffd597cfb34,20757695,0,0x0,8
tick,0x7ffd597cfb34,20773785,0,0x0,8
tick,0x7ffd597cfb34,20789339,0,0x0,8
tick,0x7ffd597cfb34,20804792,0,0x0,8
tick,0x7ffd597cfb34,20820494,0,0x0,8
tick,0x7ffd597cfb34,20836234,0,0x0,8
tick,0x7ffd597cfb34,20852246,0,0x0,8
tick,0x7ffd597cfb34,20868310,0,0x0,8
tick,0x7ffd597cfb34,20883434,0,0x0,8
tick,0x7ffd597cfb34,20898617,0,0x0,8
tick,0x7ffd597cfb34,20914465,0,0x0,8
tick,0x7ffd597cfb34,20930281,0,0x0,8
tick,0x7ffd597cfb34,20946566,0,0x0,8
tick,0x7ffd597cfb34,20962346,0,0x0,8
tick,0x7ffd597cfb34,20978179,0,0x0,8
tick,0x7ffd597cfb34,20993664,0,0x0,8
tick,0x7ffd597cfb34,21009856,0,0x0,8
tick,0x7ffd597cfb34,21026042,0,0x0,8
tick,0x7ffd597cfb34,21041771,0,0x0,8
tick,0x7ffd597cfb34,21057185,0,0x0,8
tick,0x7ffd597cfb34,21073342,0,0x0,8
tick,0x7ffd597cfb34,21089386,0,0x0,8
tick,0x7ffd597cfb34,21105092,0,0x0,8
tick,0x7ffd597cfb34,21121128,0,0x0,8
tick,0x7ffd597cfb34,21137133,0,0x0,8
tick,0x7ffd597cfb34,21152542,0,0x0,8
tick,0x7ffd597cfb34,21168152,0,0x0,8
tick,0x7ffd597cfb34,21184216,0,0x0,8
tick,0x7ffd597cfb34,21199813,0,0x0,8
tick,0x7ffd597cfb34,21215336,0,0x0,8
tick,0x7ffd597cfb34,21230869,0,0x0,8
tick,0x7ffd597cfb34,21247042,0,0x0,8
tick,0x7ffd597cfb34,21262425,0,0x0,8
tick,0x7ffd597cfb34,21278148,0,0x0,8
tick,0x7ffd597cfb34,21293879,0,0x0,8
tick,0x7ffd597cfb34,21309680,0,0x0,8
tick,0x7ffd597cfb34,21325142,0,0x0,8
tick,0x7ffd597cfb34,21340461,0,0x0,8
tick,0x7ffd597cfb34,21355760,0,0x0,8
tick,0x7ffd597cfb34,21371670,0,0x0,8
tick,0x7ffd597cfb34,21387347,0,0x0,8
tick,0x7ffd597cfb34,21403104,0,0x0,8
tick,0x7ffd597cfb34,21418351,0,0x0,8
tick,0x7ffd597cfb34,21434266,0,0x0,8
tick,0x7ffd597cfb34,21450078,0,0x0,8
tick,0x7ffd597cfb34,21466430,0,0x0,8
tick,0x7ffd597cfb34,21482170,0,0x0,8
tick,0x7ffd597cfb34,21498037,0,0x0,8
tick,0x7ffd597cfb34,21514157,0,0x0,8
tick,0x7ffd597cfb34,21529417,0,0x0,8
tick,0x7ffd597cfb34,21544842,0,0x0,8
tick,0x7ffd597cfb34,21560559,0,0x0,8
tick,0x7ffd597cfb34,21575894,0,0x0,8
tick,0x7ffd597cfb34,21591791,0,0x0,8
tick,0x7ffd597cfb34,21607056,0,0x0,8
tick,0x7ffd597cfb34,21622465,0,0x0,8
tick,0x7ffd597cfb34,21638274,0,0x0,8
tick,0x7ffd597cfb34,21654601,0,0x0,8
tick,0x7ffd597cfb34,21670404,0,0x0,8
tick,0x7ffd597cfb34,21686180,0,0x0,8
tick,0x7ffd597cfb34,21701790,0,0x0,8
tick,0x7ffd597cfb34,21717641,0,0x0,8
tick,0x7ffd597cfb34,21733956,0,0x0,8
tick,0x7ffd597cfb34,21749473,0,0x0,8
tick,0x7ffd597cfb34,21765030,0,0x0,8
tick,0x7ffd597cfb34,21780447,0,0x0,8
tick,0x7ffd597cfb34,21796247,0,0x0,8
tick,0x7ffd597cfb34,21812472,0,0x0,8
tick,0x7ffd597cfb34,21828279,0,0x0,8
tick,0x7ffd597cfb34,21844252,0,0x0,8
tick,0x7ffd597cfb34,21859916,0,0x0,8
tick,0x7ffd597cfb34,21875721,0,0x0,8
tick,0x7ffd597cfb34,21891742,0,0x0,8
tick,0x7ffd597cfb34,21907908,0,0x0,8
tick,0x7ffd597cfb34,21923737,0,0x0,8
tick,0x7ffd597cfb34,21939123,0,0x0,8
tick,0x7ffd597cfb34,21954541,0,0x0,8
tick,0x7ffd597cfb34,21969963,0,0x0,8
tick,0x7ffd597cfb34,21985985,0,0x0,8
tick,0x7ffd597cfb34,22001978,0,0x0,8
tick,0x7ffd597cfb34,22017865,0,0x0,8
tick,0x7ffd597cfb34,22033203,0,0x0,8
tick,0x7ffd597cfb34,22049259,0,0x0,8
tick,0x7ffd597cfb34,22065189,0,0x0,8
tick,0x7ffd597cfb34,22081388,0,0x0,8
tick,0x7ffd597cfb34,22096451,0,0x0,8
tick,0x7ffd597cfb34,22112117,0,0x0,8
tick,0x7ffd597cfb34,22127045,0,0x0,8
tick,0x7ffd597cfb34,22142673,0,0x0,8
tick,0x7ffd597cfb34,22158131,0,0x0,8
tick,0x7ffd597cfb34,22173130,0,0x0,8
tick,0x7ffd597cfb34,22189161,0,0x0,8
tick,0x7ffd597cfb34,22204468,0,0x0,8
tick,0x7ffd597cfb34,22220419,0,0x0,8
tick,0x7ffd597cfb34,22236013,0,0x0,8
tick,0x7ffd597cfb34,22251354,0,0x0,8
tick,0x7ffd597cfb34,22267181,0,0x0,8
tick,0x7ffd597cfb34,22282784,0,0x0,8
tick,0x7ffd597cfb34,22298345,0,0x0,8
tick,0x7ffd597cfb34,22314309,0,0x0,8
tick,0x7ffd597cfb34,22329421,0,0x0,8
tick,0x7ffd597cfb34,22344407,0,0x0,8
tick,0x7ffd597cfb34,22359984,0,0x0,8
tick,0x7ffd597cfb34,22375341,0,0x0,8
tick,0x7ffd597cfb34,22390449,0,0x0,8
tick,0x7ffd597cfb34,22405596,0,0x0,8
tick,0x7ffd597cfb34,22420790,0,0x0,8
tick,0x7ffd597cfb34,22436815,0,0x0,8
tick,0x7ffd597cfb34,22452060,0,0x0,8
tick,0x7ffd597cfb34,22467622,0,0x0,8
tick,0x7ffd597cfb34,22484123,0,0x0,8
tick,0x7ffd597cfb34,22499491,0,0x0,8
tick,0x7ffd597cfb34,22514996,0,0x0,8
tick,0x7ffd597cfb34,22530368,0,0x0,8
tick,0x7ffd597cfb34,22545873,0,0x0,8
tick,0x7ffd597cfb34,22561042,0,0x0,8
tick,0x7ffd597cfb34,22576750,0,0x0,8
tick,0x7ffd597cfb34,22592360,0,0x0,8
tick,0x7ffd597cfb34,22608775,0,0x0,8
tick,0x7ffd597cfb34,22623924,0,0x0,8
tick,0x7ffd597cfb34,22639896,0,0x0,8
tick,0x7ffd597cfb34,22654867,0,0x0,8
tick,0x7ffd597cfb34,22670452,0,0x0,8
tick,0x7ffd597cfb34,22686928,0,0x0,8
tick,0x7ffd597cfb34,22702448,0,0x0,8
tick,0x7ffd597cfb34,22719097,0,0x0,8
tick,0x7ffd597cfb34,22734149,0,0x0,8
tick,0x7ffd597cfb34,22750497,0,0x0,8
tick,0x7ffd597cfb34,22765978,0,0x0,8
tick,0x7ffd597cfb34,22781520,0,0x0,8
tick,0x7ffd597cfb34,22796879,0,0x0,8
tick,0x7ffd597cfb34,22813159,0,0x0,8
tick,0x7ffd597cfb34,22828843,0,0x0,8
tick,0x7ffd597cfb34,22844992,0,0x0,8
tick,0x7ffd597cfb34,22860490,0,0x0,8
tick,0x7ffd597cfb34,22877109,0,0x0,8
tick,0x7ffd597cfb34,22893150,0,0x0,8
tick,0x7ffd597cfb34,22908346,0,0x0,8
tick,0x7ffd597cfb34,22924196,0,0x0,8
tick,0x7ffd597cfb34,22939583,0,0x0,8
tick,0x7ffd597cfb34,22955192,0,0x0,8
tick,0x7ffd597cfb34,22971324,0,0x0,8
tick,0x7ffd597cfb34,22987074,0,0x0,8
tick,0x7ffd597cfb34,23003421,0,0x0,8
tick,0x7ffd597cfb34,23019085,0,0x0,8
tick,0x7ffd597cfb34,23034908,0,0x0,8
tick,0x7ffd597cfb34,23050407,0,0x0,8
tick,0x7ffd597cfb34,23066140,0,0x0,8
tick,0x7ffd597cfb34,23081693,0,0x0,8
tick,0x7ffd597cfb34,23097553,0,0x0,8
tick,0x7ffd597cfb34,23113172,0,0x0,8
tick,0x7ffd597cfb34,23128820,0,0x0,8
tick,0x7ffd597cfb34,23144764,0,0x0,8
tick,0x7ffd597cfb34,23160882,0,0x0,8
tick,0x7ffd597cfb34,23176637,0,0x0,8
tick,0x7ffd597cfb34,23191871,0,0x0,8
tick,0x7ffd597cfb34,23206990,0,0x0,8
tick,0x7ffd597cfb34,23223338,0,0x0,8
tick,0x7ffd597cfb34,23238421,0,0x0,8
tick,0x7ffd597cfb34,23254919,0,0x0,8
tick,0x7ffd597cfb34,23270038,0,0x0,8
tick,0x7ffd597cfb34,23285963,0,0x0,8
tick,0x7ffd597cfb34,23300931,0,0x0,8
tick,0x7ffd597cfb34,23315883,0,0x0,8
tick,0x7ffd597cfb34,23332004,0,0x0,8
tick,0x7ffd597cfb34,23347147,0,0x0,8
tick,0x7ffd597cfb34,23362875,0,0x0,8
tick,0x7ffd597cfb34,23378575,0,0x0,8
tick,0x7ffd597cfb34,23394157,0,0x0,8
tick,0x7ffd597cfb34,23409990,0,0x0,8
tick,0x7ffd597cfb34,23425494,0,0x0,8
tick,0x7ffd597cfb34,23441443,0,0x0,8
tick,0x7ffd597cfb34,23456859,0,0x0,8
tick,0x7ffd597cfb34,23472883,0,0x0,8
tick,0x7ffd597cfb34,23488367,0,0x0,8
tick,0x7ffd597cfb34,23504471,0,0x0,8
tick,0x7ffd597cfb34,23519407,0,0x0,8
tick,0x7ffd597cfb34,23534522,0,0x0,8
tick,0x7ffd597cfb34,23550484,0,0x0,8
tick,0x7ffd597cfb34,23566250,0,0x0,8
tick,0x7ffd597cfb34,23582596,0,0x0,8
tick,0x7ffd597cfb34,23598378,0,0x0,8
tick,0x7ffd597cfb34,23614006,0,0x0,8
tick,0x7ffd597cfb34,23629796,0,0x0,8
tick,0x7ffd597cfb34,23644990,0,0x0,8
tick,0x7ffd597cfb34,23660146,0,0x0,8
tick,0x7ffd597cfb34,23675283,0,0x0,8
tick,0x7ffd597cfb34,23691031,0,0x0,8
tick,0x7ffd597cfb34,23706468,0,0x0,8
tick,0x7ffd597cfb34,23721694,0,0x0,8
tick,0x7ffd597cfb34,23736923,0,0x0,8
tick,0x7ffd597cfb34,23752140,0,0x0,8
tick,0x7ffd597cfb34,23767297,0,0x0,8
tick,0x7ffd597cfb34,23782915,0,0x0,8
tick,0x7ffd597cfb34,23798652,0,0x0,8
tick,0x7ffd597cfb34,23813965,0,0x0,8
tick,0x7ffd597cfb34,23829912,0,0x0,8
tick,0x7ffd597cfb34,23845636,0,0x0,8
tick,0x7ffd597cfb34,23861223,0,0x0,8
tick,0x7ffd597cfb34,23876982,0,0x0,8
tick,0x7ffd597cfb34,23892893,0,0x0,8
tick,0x7ffd597cfb34,23908288,0,0x0,8
tick,0x7ffd597cfb34,23922975,0,0x0,8
tick,0x7ffd597cfb34,23938660,0,0x0,8
tick,0x7ffd597cfb34,23953670,0,0x0,8
tick,0x7ffd597cfb34,23968892,0,0x0,8
tick,0x7ffd597cfb34,23984385,0,0x0,8
tick,0x7ffd597cfb34,23999642,0,0x0,8
tick,0x7ffd597cfb34,24015240,0,0x0,8
tick,0x7ffd597cfb34,24031014,0,0x0,8
tick,0x7ffd597cfb34,24045578,0,0x0,8
tick,0x7ffd597cfb34,24061630,0,0x0,8
tick,0x7ffd597cfb34,24077534,0,0x0,8
tick,0x7ffd597cfb34,24092844,0,0x0,8
tick,0x7ffd597cfb34,24108710,0,0x0,8
tick,0x7ffd597cfb34,24123977,0,0x0,8
tick,0x7ffd597cfb34,24139021,0,0x0,8
tick,0x7ffd597cfb34,24154855,0,0x0,8
tick,0x7ffd597cfb34,24170257,0,0x0,8
tick,0x7ffd597cfb34,24185230,0,0x0,8
tick,0x7ffd597cfb34,24201093,0,0x0,8
tick,0x7ffd597cfb34,24216326,0,0x0,8
tick,0x7ffd597cfb34,24231330,0,0x0,8
tick,0x7ffd597cfb34,24247257,0,0x0,8
tick,0x7ffd597cfb34,24263350,0,0x0,8
tick,0x7ffd597cfb34,24278716,0,0x0,8
tick,0x7ffd597cfb34,24294552,0,0x0,8
tick,0x7ffd597cfb34,24310182,0,0x0,8
tick,0x7ffd597cfb34,24326323,0,0x0,8
tick,0x7ffd597cfb34,24342245,0,0x0,8
tick,0x7ffd597cfb34,24358329,0,0x0,8
tick,0x7ffd597cfb34,24373980,0,0x0,8
tick,0x7ffd597cfb34,24389562,0,0x0,8
tick,0x7ffd597cfb34,24405178,0,0x0,8
tick,0x7ffd597cfb34,24420385,0,0x0,8
tick,0x7ffd597cfb34,24435455,0,0x0,8
tick,0x7ffd597cfb34,24451363,0,0x0,8
tick,0x7ffd597cfb34,24466476,0,0x0,8
tick,0x7ffd597cfb34,24482247,0,0x0,8
tick,0x7ffd597cfb34,24497352,0,0x0,8
tick,0x7ffd597cfb34,24513032,0,0x0,8
tick,0x7ffd597cfb34,24529015,0,0x0,8
tick,0x7ffd597cfb34,24544885,0,0x0,8
tick,0x7ffd597cfb34,24560039,0,0x0,8
tick,0x7ffd597cfb34,24575167,0,0x0,8
tick,0x7ffd597cfb34,24591229,0,0x0,8
tick,0x7ffd597cfb34,24605982,0,0x0,8
tick,0x7ffd597cfb34,24621562,0,0x0,8
tick,0x7ffd597cfb34,24636959,0,0x0,8
tick,0x7ffd597cfb34,24652472,0,0x0,8
tick,0x7ffd597cfb34,24667903,0,0x0,8
tick,0x7ffd597cfb34,24683692,0,0x0,8
tick,0x7ffd597cfb34,24699738,0,0x0,8
tick,0x7ffd597cfb34,24715589,0,0x0,8
tick,0x7ffd597cfb34,24731968,0,0x0,8
tick,0x7ffd597cfb34,24747987,0,0x0,8
tick,0x7ffd597cfb34,24762960,0,0x0,8
tick,0x7ffd597cfb34,24778113,0,0x0,8
tick,0x7ffd597cfb34,24794022,0,0x0,8
tick,0x7ffd597cfb34,24810100,0,0x0,8
tick,0x7ffd597cfb34,24826309,0,0x0,8
tick,0x7ffd597cfb34,24842299,0,0x0,8
tick,0x7ffd597cfb34,24858106,0,0x0,8
tick,0x7ffd597cfb34,24873694,0,0x0,8
tick,0x7ffd597cfb34,24889235,0,0x0,8
tick,0x7ffd597cfb34,24904249,0,0x0,8
tick,0x7ffd597cfb34,24921235,0,0x0,8
tick,0x7ffd597cfb34,24936704,0,0x0,8
tick,0x7ffd597cfb34,24952704,0,0x0,8
tick,0x7ffd597cfb34,24968191,0,0x0,8
tick,0x7ffd597cfb34,24984347,0,0x0,8
tick,0x7ffd597cfb34,24999316,0,0x0,8
tick,0x7ffd597cfb34,25014802,0,0x0,8
tick,0x7ffd597cfb34,25030475,0,0x0,8
tick,0x7ffd597cfb34,25046173,0,0x0,8
tick,0x7ffd597cfb34,25061381,0,0x0,8
tick,0x7ffd597cfb34,25076166,0,0x0,8
tick,0x7ffd597cfb34,25092162,0,0x0,8
tick,0x7ffd597cfb34,25108166,0,0x0,8
tick,0x7ffd597cfb34,25124220,0,0x0,8
tick,0x7ffd597cfb34,25140152,0,0x0,8
tick,0x7ffd597cfb34,25156351,0,0x0,8
tick,0x7ffd597cfb34,25171417,0,0x0,8
tick,0x7ffd597cfb34,25187058,0,0x0,8
tick,0x7ffd597cfb34,25202379,0,0x0,8
tick,0x7ffd597cfb34,25218126,0,0x0,8
tick,0x7ffd597cfb34,25233668,0,0x0,8
tick,0x7ffd597cfb34,25249201,0,0x0,8
tick,0x7ffd597cfb34,25264340,0,0x0,8
tick,0x7ffd597cfb34,25279628,0,0x0,8
tick,0x7ffd597cfb34,25294823,0,0x0,8
tick,0x7ffd597cfb34,25310618,0,0x0,8
tick,0x7ffd597cfb34,25325645,0,0x0,8
tick,0x7ffd597cfb34,25340696,0,0x0,8
tick,0x7ffd597cfb34,25356238,0,0x0,8
tick,0x7ffd597cfb34,25371995,0,0x0,8
tick,0x7ffd597cfb34,25387871,0,0x0,8
tick,0x7ffd597cfb34,25402843,0,0x0,8
tick,0x7ffd597cfb34,25418152,0,0x0,8
tick,0x7ffd597cfb34,25433462,0,0x0,8
tick,0x7ffd597cfb34,25448837,0,0x0,8
tick,0x7ffd597cfb34,25464726,0,0x0,8
tick,0x7ffd597cfb34,25480342,0,0x0,8
tick,0x7ffd597cfb34,25495654,0,0x0,8
tick,0x7ffd597cfb34,25510645,0,0x0,8
tick,0x7ffd597cfb34,25526291,0,0x0,8
tick,0x7ffd597cfb34,25542040,0,0x0,8
tick,0x7ffd597cfb34,25558438,0,0x0,8
tick,0x7ffd597cfb34,25574033,0,0x0,8
tick,0x7ffd597cfb34,25589284,0,0x0,8
tick,0x7ffd597cfb34,25605043,0,0x0,8
tick,0x7ffd597cfb34,25620136,0,0x0,8
tick,0x7ffd597cfb34,25635785,0,0x0,8
tick,0x7ffd597cfb34,25651521,0,0x0,8
tick,0x7ffd597cfb34,25667048,0,0x0,8
tick,0x7ffd597cfb34,25683010,0,0x0,8
tick,0x7ffd597cfb34,25698340,0,0x0,8
tick,0x7ffd597cfb34,25714234,0,0x0,8
tick,0x7ffd597cfb34,25730171,0,0x0,8
tick,0x7ffd597cfb34,25745332,0,0x0,8
tick,0x7ffd597cfb34,25760142,0,0x0,8
tick,0x7ffd597cfb34,25775375,0,0x0,8
tick,0x7ffd597cfb34,25790548,0,0x0,8
tick,0x7ffd597cfb34,25806024,0,0x0,8
tick,0x7ffd597cfb34,25821789,0,0x0,8
tick,0x7ffd597cfb34,25837764,0,0x0,8
tick,0x7ffd597cfb34,25853061,0,0x0,8
tick,0x7ffd597cfb34,25868843,0,0x0,8
tick,0x7ffd597cfb34,25884697,0,0x0,8
tick,0x7ffd597cfb34,25899676,0,0x0,8
tick,0x7ffd597cfb34,25914443,0,0x0,8
tick,0x7ffd597cfb34,25929703,0,0x0,8
tick,0x7ffd597cfb34,25945758,0,0x0,8
tick,0x7ffd597cfb34,25961124,0,0x0,8
tick,0x7ffd597cfb34,25976635,0,0x0,8
tick,0x7ffd597cfb34,25992313,0,0x0,8
tick,0x7ffd597cfb34,26008504,0,0x0,8
tick,0x7ffd597cfb34,26023675,0,0x0,8
tick,0x7ffd597cfb34,26039620,0,0x0,8
tick,0x7ffd597cfb34,26055491,0,0x0,8
tick,0x7ffd597cfb34,26071093,0,0x0,8
tick,0x7ffd597cfb34,26086150,0,0x0,8
tick,0x7ffd597cfb34,26102127,0,0x0,8
tick,0x7ffd597cfb34,26117962,0,0x0,8
tick,0x7ffd597cfb34,26133417,0,0x0,8
tick,0x7ffd597cfb34,26149455,0,0x0,8
tick,0x7ffd597cfb34,26165359,0,0x0,8
tick,0x7ffd597cfb34,26181455,0,0x0,8
tick,0x7ffd597cfb34,26197080,0,0x0,8
tick,0x7ffd597cfb34,26212224,0,0x0,8
tick,0x7ffd597cfb34,26227550,0,0x0,8
tick,0x7ffd597cfb34,26243372,0,0x0,8
tick,0x7ffd597cfb34,26259059,0,0x0,8
tick,0x7ffd597cfb34,26275075,0,0x0,8
tick,0x7ffd597cfb34,26290636,0,0x0,8
tick,0x7ffd597cfb34,26306687,0,0x0,8
tick,0x7ffd597cfb34,26321841,0,0x0,8
tick,0x7ffd597cfb34,26337818,0,0x0,8
tick,0x7ffd597cfb34,26352861,0,0x0,8
tick,0x7ffd597cfb34,26368665,0,0x0,8
tick,0x7ffd597cfb34,26384296,0,0x0,8
tick,0x7ffd597cfb34,26400068,0,0x0,8
tick,0x7ffd597cfb34,26415339,0,0x0,8
tick,0x7ffd597cfb34,26430506,0,0x0,8
tick,0x7ffd597cfb34,26445773,0,0x0,8
tick,0x7ffd597cfb34,26461808,0,0x0,8
tick,0x7ffd597cfb34,26477371,0,0x0,8
tick,0x7ffd597cfb34,26493304,0,0x0,8
tick,0x7ffd597cfb34,26508944,0,0x0,8
tick,0x7ffd597cfb34,26524707,0,0x0,8
tick,0x7ffd597cfb34,26540579,0,0x0,8
tick,0x7ffd597cfb34,26556965,0,0x0,8
tick,0x7ffd597cfb34,26572880,0,0x0,8
tick,0x7ffd597cfb34,26589321,0,0x0,8
tick,0x7ffd597cfb34,26605193,0,0x0,8
tick,0x7ffd597cfb34,26621132,0,0x0,8
tick,0x7ffd597cfb34,26636269,0,0x0,8
tick,0x7ffd597cfb34,26651597,0,0x0,8
tick,0x7ffd597cfb34,26667503,0,0x0,8
tick,0x7ffd597cfb34,26683250,0,0x0,8
tick,0x7ffd597cfb34,26698523,0,0x0,8
tick,0x7ffd597cfb34,26714079,0,0x0,8
tick,0x7ffd597cfb34,26729785,0,0x0,8
tick,0x7ffd597cfb34,26744787,0,0x0,8
tick,0x7ffd597cfb34,26760680,0,0x0,8
tick,0x7ffd597cfb34,26776146,0,0x0,8
tick,0x7ffd597cfb34,26792061,0,0x0,8
tick,0x7ffd597cfb34,26807326,0,0x0,8
tick,0x7ffd597cfb34,26822278,0,0x0,8
tick,0x7ffd597cfb34,26838700,0,0x0,8
tick,0x7ffd597cfb34,26854095,0,0x0,8
tick,0x7ffd597cfb34,26869350,0,0x0,8
tick,0x7ffd597cfb34,26884498,0,0x0,8
tick,0x7ffd597cfb34,26899958,0,0x0,8
tick,0x7ffd597cfb34,26915576,0,0x0,8
tick,0x7ffd597cfb34,26930867,0,0x0,8
tick,0x7ffd597cfb34,26946913,0,0x0,8
tick,0x7ffd597cfb34,26961998,0,0x0,8
tick,0x7ffd597cfb34,26977328,0,0x0,8
tick,0x7ffd597cfb34,26992462,0,0x0,8
tick,0x7ffd597cfb34,27009015,0,0x0,8
tick,0x7ffd597cfb34,27024578,0,0x0,8
tick,0x7ffd597cfb34,27040586,0,0x0,8
tick,0x7ffd597cfb34,27056393,0,0x0,8
tick,0x7ffd597cfb34,27072056,0,0x0,8
tick,0x7ffd597cfb34,27087424,0,0x0,8
tick,0x7ffd597cfb34,27103447,0,0x0,8
tick,0x7ffd597cfb34,27119441,0,0x0,8
tick,0x7ffd597cfb34,27135474,0,0x0,8
tick,0x7ffd597cfb34,27151450,0,0x0,8
tick,0x7ffd597cfb34,27167455,0,0x0,8
tick,0x7ffd597cfb34,27183440,0,0x0,8
tick,0x7ffd597cfb34,27199457,0,0x0,8
tick,0x7ffd597cfb34,27215452,0,0x0,8
tick,0x7ffd597cfb34,27231469,0,0x0,8
tick,0x7ffd597cfb34,27246607,0,0x0,8
tick,0x7ffd597cfb34,27262640,0,0x0,8
tick,0x7ffd597cfb34,27277774,0,0x0,8
tick,0x7ffd597cfb34,27293649,0,0x0,8
tick,0x7ffd597cfb34,27309658,0,0x0,8
tick,0x7ffd597cfb34,27325744,0,0x0,8
tick,0x7ffd597cfb34,27340746,0,0x0,8
tick,0x7ffd597cfb34,27355756,0,0x0,8
tick,0x7ffd597cfb34,27371630,0,0x0,8
tick,0x7ffd597cfb34,27386661,0,0x0,8
tick,0x7ffd597cfb34,27401638,0,0x0,8
tick,0x7ffd597cfb34,27417664,0,0x0,8
tick,0x7ffd597cfb34,27433667,0,0x0,8
tick,0x7ffd597cfb34,27449696,0,0x0,8
tick,0x7ffd597cfb34,27465685,0,0x0,8
tick,0x7ffd597cfb34,27481760,0,0x0,8
tick,0x7ffd597cfb34,27497751,0,0x0,8
tick,0x7ffd597cfb34,27513791,0,0x0,8
tick,0x7ffd597cfb34,27529685,0,0x0,8
tick,0x7ffd597cfb34,27545679,0,0x0,8
tick,0x7ffd597cfb34,27561692,0,0x0,8
tick,0x7ffd597cfb34,27577374,0,0x0,8
tick,0x7ffd597cfb34,27592354,0,0x0,8
tick,0x7ffd597cfb34,27607548,0,0x0,8
tick,0x7ffd597cfb34,27623476,0,0x0,8
tick,0x7ffd597cfb34,27639408,0,0x0,8
tick,0x7ffd597cfb34,27655466,0,0x0,8
tick,0x7ffd597cfb34,27671331,0,0x0,8
tick,0x7ffd597cfb34,27687388,0,0x0,8
tick,0x7ffd597cfb34,27702713,0,0x0,8
tick,0x7ffd597cfb34,27718612,0,0x0,8
tick,0x7ffd597cfb34,27734602,0,0x0,8
tick,0x7ffd597cfb34,27750725,0,0x0,8
tick,0x7ffd597cfb34,27766632,0,0x0,8
tick,0x7ffd597cfb34,27782643,0,0x0,8
tick,0x7ffd597cfb34,27798633,0,0x0,8
tick,0x7ffd597cfb34,27814154,0,0x0,8
tick,0x7ffd597cfb34,27830056,0,0x0,8
tick,0x7ffd597cfb34,27846064,0,0x0,8
tick,0x7ffd597cfb34,27862072,0,0x0,8
tick,0x7ffd597cfb34,27878148,0,0x0,8
tick,0x7ffd597cfb34,27894147,0,0x0,8
tick,0x7ffd597cfb34,27910147,0,0x0,8
tick,0x7ffd597cfb34,27926108,0,0x0,8
tick,0x7ffd597cfb34,27942059,0,0x0,8
tick,0x7ffd597cfb34,27958068,0,0x0,8
tick,0x7ffd597cfb34,27974188,0,0x0,8
tick,0x7ffd597cfb34,27989198,0,0x0,8
tick,0x7ffd597cfb34,28004179,0,0x0,8
tick,0x7ffd597cfb34,28020078,0,0x0,8
tick,0x7ffd597cfb34,28036108,0,0x0,8
tick,0x7ffd597cfb34,28052100,0,0x0,8
tick,0x7ffd597cfb34,28068219,0,0x0,8
tick,0x7ffd597cfb34,28084089,0,0x0,8
tick,0x7ffd597cfb34,28100116,0,0x0,8
tick,0x7ffd597cfb34,28116131,0,0x0,8
tick,0x7ffd597cfb34,28132100,0,0x0,8
tick,0x7ffd597cfb34,28148126,0,0x0,8
tick,0x7ffd597cfb34,28164145,0,0x0,8
tick,0x7ffd597cfb34,28180132,0,0x0,8
tick,0x7ffd597cfb34,28196121,0,0x0,8
tick,0x7ffd597cfb34,28212148,0,0x0,8
tick,0x7ffd597cfb34,28228128,0,0x0,8
tick,0x7ffd597cfb34,28244138,0,0x0,8
tick,0x7ffd597cfb34,28260131,0,0x0,8
tick,0x7ffd597cfb34,28276156,0,0x0,8
tick,0x7ffd597cfb34,28292162,0,0x0,8
tick,0x7ffd597cfb34,28308178,0,0x0,8
tick,0x7ffd597cfb34,28324152,0,0x0,8
tick,0x7ffd597cfb34,28340176,0,0x0,8
tick,0x7ffd597cfb34,28356167,0,0x0,8
tick,0x7ffd597cfb34,28372160,0,0x0,8
tick,0x7ffd597cfb34,28388161,0,0x0,8
tick,0x7ffd597cfb34,28404157,0,0x0,8
tick,0x7ffd597cfb34,28420171,0,0x0,8
tick,0x7ffd597cfb34,28436195,0,0x0,8
tick,0x7ffd597cfb34,28452207,0,0x0,8
tick,0x7ffd597cfb34,28468212,0,0x0,8
tick,0x7ffd597cfb34,28484186,0,0x0,8
tick,0x7ffd597cfb34,28500217,0,0x0,8
tick,0x7ffd597cfb34,28516196,0,0x0,8
tick,0x7ffd597cfb34,28532224,0,0x0,8
tick,0x7ffd597cfb34,28548213,0,0x0,8
tick,0x7ffd597cfb34,28564213,0,0x0,8
tick,0x7ffd597cfb34,28580213,0,0x0,8
tick,0x7ffd597cfb34,28596247,0,0x0,8
tick,0x7ffd597cfb34,28612334,0,0x0,8
tick,0x7ffd597cfb34,28628392,0,0x0,8
tick,0x7ffd597cfb34,28644219,0,0x0,8
tick,0x7ffd597cfb34,28660237,0,0x0,8
tick,0x7ffd597cfb34,28676235,0,0x0,8
tick,0x7ffd597cfb34,28692241,0,0x0,8
tick,0x7ffd597cfb34,28708255,0,0x0,8
tick,0x7ffd597cfb34,28724278,0,0x0,8
tick,0x7ffd597cfb34,28740253,0,0x0,8
tick,0x7ffd597cfb34,28756254,0,0x0,8
tick,0x7ffd597cfb34,28772249,0,0x0,8
tick,0x7ffd597cfb34,28788320,0,0x0,8
tick,0x7ffd597cfb34,28804260,0,0x0,8
tick,0x7ffd597cfb34,28820299,0,0x0,8
tick,0x7ffd597cfb34,28836263,0,0x0,8
tick,0x7ffd597cfb34,28852609,0,0x0,8
tick,0x7ffd597cfb34,28868290,0,0x0,8
tick,0x7ffd597cfb34,28884435,0,0x0,8
tick,0x7ffd597cfb34,28900319,0,0x0,8
tick,0x7ffd597cfb34,28916310,0,0x0,8
tick,0x7ffd597cfb34,28932373,0,0x0,8
tick,0x7ffd597cfb34,28948336,0,0x0,8
tick,0x7ffd597cfb34,28964378,0,0x0,8
tick,0x7ffd597cfb34,28979390,0,0x0,8
tick,0x7ffd597cfb34,28995297,0,0x0,8
tick,0x7ffd597cfb34,29010325,0,0x0,8
tick,0x7ffd597cfb34,29026307,0,0x0,8
tick,0x7ffd597cfb34,29042500,0,0x0,8
tick,0x7ffd597cfb34,29058462,0,0x0,8
tick,0x7ffd597cfb34,29074369,0,0x0,8
tick,0x7ffd597cfb34,29090322,0,0x0,8
tick,0x7ffd597cfb34,29106567,0,0x0,8
tick,0x7ffd597cfb34,29122439,0,0x0,8
tick,0x7ffd597cfb34,29138393,0,0x0,8
tick,0x7ffd597cfb34,29154376,0,0x0,8
tick,0x7ffd597cfb34,29170369,0,0x0,8
tick,0x7ffd597cfb34,29186536,0,0x0,8
tick,0x7ffd597cfb34,29202421,0,0x0,8
tick,0x7ffd597cfb34,29218359,0,0x0,8
tick,0x7ffd597cfb34,29234362,0,0x0,8
tick,0x7ffd597cfb34,29250363,0,0x0,8
tick,0x7ffd597cfb34,29266543,0,0x0,8
tick,0x7ffd597cfb34,29282372,0,0x0,8
tick,0x7ffd597cfb34,29298580,0,0x0,8
tick,0x7ffd597cfb34,29314376,0,0x0,8
tick,0x7ffd597cfb34,29330405,0,0x0,8
tick,0x7ffd597cfb34,29346394,0,0x0,8
tick,0x7ffd597cfb34,29362560,0,0x0,8
tick,0x7ffd597cfb34,29378516,0,0x0,8
tick,0x7ffd597cfb34,29394789,0,0x0,8
tick,0x7ffd597cfb34,29411423,0,0x0,8
tick,0x7ffd597cfb34,29428596,0,0x0,8
tick,0x7ffd597cfb34,29446695,0,0x0,8
tick,0x7ffd597cfb34,29458764,0,0x0,8
tick,0x7ffd597cfb34,29475647,0,0x0,8
tick,0x7ffd597cfb34,29490728,0,0x0,8
tick,0x7ffd597cfb34,29506646,0,0x0,8
tick,0x7ffd597cfb34,29522496,0,0x0,8
tick,0x7ffd597cfb34,29539140,0,0x0,8
tick,0x7ffd597cfb34,29554448,0,0x0,8
tick,0x7ffd597cfb34,29570635,0,0x0,8
tick,0x7ffd597cfb34,29588035,0,0x0,8
tick,0x7ffd597cfb34,29602468,0,0x0,8
tick,0x7ffd597cfb34,29618743,0,0x0,8
tick,0x7ffd597cfb34,29634574,0,0x0,8
tick,0x7ffd597cfb34,29650563,0,0x0,8
tick,0x7ffd597cfb34,29666542,0,0x0,8
tick,0x7ffd597cfb34,29684088,0,0x0,8
tick,0x7ffd597cfb34,29698556,0,0x0,8
tick,0x7ffd597cfb34,29714661,0,0x0,8
tick,0x7ffd597cfb34,29730561,0,0x0,8
tick,0x7ffd597cfb34,29746481,0,0x0,8
tick,0x7ffd597cfb34,29762485,0,0x0,8
tick,0x7ffd597cfb34,29778492,0,0x0,8
tick,0x7ffd597cfb34,29794475,0,0x0,8
tick,0x7ffd597cfb34,29810512,0,0x0,8
tick,0x7ffd597cfb34,29826532,0,0x0,8
tick,0x7ffd597cfb34,29842529,0,0x0,8
tick,0x7ffd597cfb34,29858497,0,0x0,8
tick,0x7ffd597cfb34,29874541,0,0x0,8
tick,0x7ffd597cfb34,29890510,0,0x0,8
tick,0x7ffd597cfb34,29906523,0,0x0,8
tick,0x7ffd597cfb34,29922531,0,0x0,8
tick,0x7ffd597cfb34,29938546,0,0x0,8
tick,0x7ffd597cfb34,29954512,0,0x0,8
tick,0x7ffd597cfb34,29970525,0,0x0,8
tick,0x7ffd597cfb34,29986553,0,0x0,8
tick,0x7ffd597cfb34,30002550,0,0x0,8
tick,0x7ffd597cfb34,30018558,0,0x0,8
tick,0x7ffd597cfb34,30034549,0,0x0,8
tick,0x7ffd597cfb34,30050561,0,0x0,8
tick,0x7ffd597cfb34,30066566,0,0x0,8
tick,0x7ffd597cfb34,30082564,0,0x0,8
tick,0x7ffd597cfb34,30098564,0,0x0,8
tick,0x7ffd597cfb34,30114581,0,0x0,8
tick,0x7ffd597cfb34,30130579,0,0x0,8
tick,0x7ffd597cfb34,30146716,0,0x0,8
tick,0x7ffd597cfb34,30161771,0,0x0,8
tick,0x7ffd597cfb34,30176894,0,0x0,8
tick,0x7ffd597cfb34,30192802,0,0x0,8
tick,0x7ffd597cfb34,30208898,0,0x0,8
tick,0x7ffd597cfb34,30224808,0,0x0,8
tick,0x7ffd597cfb34,30240794,0,0x0,8
tick,0x7ffd597cfb34,30256807,0,0x0,8
tick,0x7ffd597cfb34,30272836,0,0x0,8
tick,0x7ffd597cfb34,30288806,0,0x0,8
tick,0x7ffd597cfb34,30304803,0,0x0,8
tick,0x7ffd597cfb34,30320825,0,0x0,8
tick,0x7ffd597cfb34,30336806,0,0x0,8
tick,0x7ffd597cfb34,30352843,0,0x0,8
tick,0x7ffd597cfb34,30368810,0,0x0,8
tick,0x7ffd597cfb34,30384845,0,0x0,8
tick,0x7ffd597cfb34,30400832,0,0x0,8
tick,0x7ffd597cfb34,30416826,0,0x0,8
tick,0x7ffd597cfb34,30432888,0,0x0,8
tick,0x7ffd597cfb34,30448834,0,0x0,8
tick,0x7ffd597cfb34,30464840,0,0x0,8
tick,0x7ffd597cfb34,30480882,0,0x0,8
tick,0x7ffd597cfb34,30496855,0,0x0,8
tick,0x7ffd597cfb34,30512888,0,0x0,8
tick,0x7ffd597cfb34,30528867,0,0x0,8
tick,0x7ffd597cfb34,30544870,0,0x0,8
tick,0x7ffd597cfb34,30561115,0,0x0,8
tick,0x7ffd597cfb34,30577027,0,0x0,8
tick,0x7ffd597cfb34,30593870,0,0x0,8
tick,0x7ffd597cfb34,30607892,0,0x0,8
tick,0x7ffd597cfb34,30623928,0,0x0,8
tick,0x7ffd597cfb34,30638897,0,0x0,8
tick,0x7ffd597cfb34,30654883,0,0x0,8
tick,0x7ffd597cfb34,30669889,0,0x0,8
tick,0x7ffd597cfb34,30684886,0,0x0,8
tick,0x7ffd597cfb34,30700923,0,0x0,8
tick,0x7ffd597cfb34,30716898,0,0x0,8
tick,0x7ffd597cfb34,30732911,0,0x0,8
tick,0x7ffd597cfb34,30748908,0,0x0,8
tick,0x7ffd597cfb34,30764911,0,0x0,8
tick,0x7ffd597cfb34,30780903,0,0x0,8
tick,0x7ffd597cfb34,30796937,0,0x0,8
tick,0x7ffd597cfb34,30812915,0,0x0,8
tick,0x7ffd597cfb34,30829029,0,0x0,8
tick,0x7ffd597cfb34,30844957,0,0x0,8
tick,0x7ffd597cfb34,30860944,0,0x0,8
tick,0x7ffd597cfb34,30876933,0,0x0,8
tick,0x7ffd597cfb34,30892963,0,0x0,8
tick,0x7ffd597cfb34,30908939,0,0x0,8
tick,0x7ffd597cfb34,30924974,0,0x0,8
tick,0x7ffd597cfb34,30941133,0,0x0,8
tick,0x7ffd597cfb34,30956981,0,0x0,8
tick,0x7ffd597cfb34,30971950,0,0x0,8
tick,0x7ffd597cfb34,30987069,0,0x0,8
tick,0x7ffd597cfb34,31001959,0,0x0,8
tick,0x7ffd597cfb34,31017978,0,0x0,8
tick,0x7ffd597cfb34,31032970,0,0x0,8
tick,0x7ffd597cfb34,31049013,0,0x0,8
tick,0x7ffd597cfb34,31064971,0,0x0,8
tick,0x7ffd597cfb34,31081021,0,0x0,8
tick,0x7ffd597cfb34,31096990,0,0x0,8
tick,0x7ffd597cfb34,31113800,0,0x0,8
tick,0x7ffd597cfb34,31130166,0,0x0,8
tick,0x7ffd597cfb34,31145022,0,0x0,8
tick,0x7ffd597cfb34,31161269,0,0x0,8
tick,0x7ffd597cfb34,31177015,0,0x0,8
tick,0x7ffd597cfb34,31193018,0,0x0,8
tick,0x7ffd597cfb34,31209025,0,0x0,8
tick,0x7ffd597cfb34,31224022,0,0x0,8
tick,0x7ffd597cfb34,31239024,0,0x0,8
tick,0x7ffd597cfb34,31254014,0,0x0,8
tick,0x7ffd597cfb34,31270049,0,0x0,8
tick,0x7ffd597cfb34,31285017,0,0x0,8
tick,0x7ffd597cfb34,31301033,0,0x0,8
tick,0x7ffd597cfb34,31317031,0,0x0,8
tick,0x7ffd597cfb34,31333054,0,0x0,8
tick,0x7ffd597cfb34,31349053,0,0x0,8
tick,0x7ffd597cfb34,31365071,0,0x0,8
tick,0x7ffd597cfb34,31381188,0,0x0,8
tick,0x7ffd597cfb34,31397090,0,0x0,8
tick,0x7ffd597cfb34,31413050,0,0x0,8
tick,0x7ffd597cfb34,31429085,0,0x0,8
tick,0x7ffd597cfb34,31445068,0,0x0,8
tick,0x7ffd597cfb34,31461101,0,0x0,8
tick,0x7ffd597cfb34,31477072,0,0x0,8
tick,0x7ffd597cfb34,31493059,0,0x0,8
tick,0x7ffd597cfb34,31509064,0,0x0,8
tick,0x7ffd597cfb34,31525086,0,0x0,8
tick,0x7ffd597cfb34,31541082,0,0x0,8
tick,0x7ffd597cfb34,31560436,0,0x0,8
tick,0x7ffd597cfb34,31572276,0,0x0,8
tick,0x7ffd597cfb34,31587109,0,0x0,8
tick,0x7ffd597cfb34,31603134,0,0x0,8
tick,0x7ffd597cfb34,31619135,0,0x0,8
tick,0x7ffd597cfb34,31635113,0,0x0,8
tick,0x7ffd597cfb34,31651116,0,0x0,8
tick,0x7ffd597cfb34,31666111,0,0x0,8
tick,0x7ffd597cfb34,31681142,0,0x0,8
tick,0x7ffd597cfb34,31697116,0,0x0,8
tick,0x7ffd597cfb34,31713147,0,0x0,8
tick,0x7ffd597cfb34,31729124,0,0x0,8
tick,0x7ffd597cfb34,31745153,0,0x0,8
tick,0x7ffd597cfb34,31760481,0,0x0,8
tick,0x7ffd597cfb34,31775484,0,0x0,8
tick,0x7ffd597cfb34,31791467,0,0x0,8
tick,0x7ffd597cfb34,31806491,0,0x0,8
tick,0x7ffd597cfb34,31822469,0,0x0,8
tick,0x7ffd597cfb34,31838517,0,0x0,8
tick,0x7ffd597cfb34,31853690,0,0x0,8
tick,0x7ffd597cfb34,31868977,0,0x0,8
tick,0x7ffd597cfb34,31884509,0,0x0,8
tick,0x7ffd597cfb34,31900671,0,0x0,8
tick,0x7ffd597cfb34,31916131,0,0x0,8
tick,0x7ffd597cfb34,31932345,0,0x0,8
tick,0x7ffd597cfb34,31947583,0,0x0,8
tick,0x7ffd597cfb34,31963781,0,0x0,8
tick,0x7ffd597cfb34,31978862,0,0x0,8
tick,0x7ffd597cfb34,31994264,0,0x0,8
tick,0x7ffd597cfb34,32010258,0,0x0,8
tick,0x7ffd597cfb34,32026237,0,0x0,8
tick,0x7ffd597cfb34,32042132,0,0x0,8
tick,0x7ffd597cfb34,32057840,0,0x0,8
tick,0x7ffd597cfb34,32073060,0,0x0,8
tick,0x7ffd597cfb34,32088225,0,0x0,8
tick,0x7ffd597cfb34,32103809,0,0x0,8
tick,0x7ffd597cfb34,32119508,0,0x0,8
tick,0x7ffd597cfb34,32134169,0,0x0,8
tick,0x7ffd597cfb34,32149448,0,0x0,8
tick,0x7ffd597cfb34,32165191,0,0x0,8
tick,0x7ffd597cfb34,32180303,0,0x0,8
tick,0x7ffd597cfb34,32196312,0,0x0,8
tick,0x7ffd597cfb34,32211912,0,0x0,8
tick,0x7ffd597cfb34,32227913,0,0x0,8
tick,0x7ffd597cfb34,32243924,0,0x0,8
tick,0x7ffd597cfb34,32259897,0,0x0,8
tick,0x7ffd597cfb34,32276405,0,0x0,8
tick,0x7ffd597cfb34,32291848,0,0x0,8
tick,0x7ffd597cfb34,32307001,0,0x0,8
tick,0x7ffd597cfb34,32322531,0,0x0,8
tick,0x7ffd597cfb34,32338216,0,0x0,8
tick,0x7ffd597cfb34,32353510,0,0x0,8
tick,0x7ffd597cfb34,32369159,0,0x0,8
tick,0x7ffd597cfb34,32384147,0,0x0,8
tick,0x7ffd597cfb34,32399886,0,0x0,8
tick,0x7ffd597cfb34,32415046,0,0x0,8
tick,0x7ffd597cfb34,32430742,0,0x0,8
tick,0x7ffd597cfb34,32446440,0,0x0,8
tick,0x7ffd597cfb34,32461737,0,0x0,8
tick,0x7ffd597cfb34,32476844,0,0x0,8
tick,0x7ffd597cfb34,32491946,0,0x0,8
tick,0x7ffd597cfb34,32507411,0,0x0,8
tick,0x7ffd597cfb34,32523148,0,0x0,8
tick,0x7ffd597cfb34,32538169,0,0x0,8
tick,0x7ffd597cfb34,32553739,0,0x0,8
tick,0x7ffd597cfb34,32568899,0,0x0,8
tick,0x7ffd597cfb34,32584976,0,0x0,8
tick,0x7ffd597cfb34,32600629,0,0x0,8
tick,0x7ffd597cfb34,32616183,0,0x0,8
tick,0x7ffd597cfb34,32631285,0,0x0,8
tick,0x7ffd597cfb34,32646622,0,0x0,8
tick,0x7ffd597cfb34,32662359,0,0x0,8
tick,0x7ffd597cfb34,32677556,0,0x0,8
tick,0x7ffd597cfb34,32692884,0,0x0,8
tick,0x7ffd597cfb34,32708565,0,0x0,8
tick,0x7ffd597cfb34,32723849,0,0x0,8
tick,0x7ffd597cfb34,32739494,0,0x0,8
tick,0x7ffd597cfb34,32755852,0,0x0,8
tick,0x7ffd597cfb34,32771405,0,0x0,8
tick,0x7ffd597cfb34,32786740,0,0x0,8
tick,0x7ffd597cfb34,32801756,0,0x0,8
tick,0x7ffd597cfb34,32817759,0,0x0,8
tick,0x7ffd597cfb34,32833771,0,0x0,8
tick,0x7ffd597cfb34,32849757,0,0x0,8
tick,0x7ffd597cfb34,32865751,0,0x0,8
tick,0x7ffd597cfb34,32881725,0,0x0,8
tick,0x7ffd597cfb34,32897785,0,0x0,8
tick,0x7ffd597cfb34,32913756,0,0x0,8
tick,0x7ffd597cfb34,32929767,0,0x0,8
tick,0x7ffd597cfb34,32944937,0,0x0,8
tick,0x7ffd597cfb34,32960487,0,0x0,8
tick,0x7ffd597cfb34,32975650,0,0x0,8
tick,0x7ffd597cfb34,32990822,0,0x0,8
tick,0x7ffd597cfb34,33006768,0,0x0,8
tick,0x7ffd597cfb34,33021762,0,0x0,8
tick,0x7ffd597cfb34,33037758,0,0x0,8
tick,0x7ffd597cfb34,33053753,0,0x0,8
tick,0x7ffd597cfb34,33069805,0,0x0,8
tick,0x7ffd597cfb34,33085811,0,0x0,8
tick,0x7ffd597cfb34,33101786,0,0x0,8
tick,0x7ffd597cfb34,33117784,0,0x0,8
tick,0x7ffd597cfb34,33133780,0,0x0,8
tick,0x7ffd597cfb34,33149006,0,0x0,8
tick,0x7ffd597cfb34,33163787,0,0x0,8
tick,0x7ffd597cfb34,33179023,0,0x0,8
tick,0x7ffd597cfb34,33194772,0,0x0,8
tick,0x7ffd597cfb34,33209784,0,0x0,8
tick,0x7ffd597cfb34,33225785,0,0x0,8
tick,0x7ffd597cfb34,33241779,0,0x0,8
tick,0x7ffd597cfb34,33257909,0,0x0,8
tick,0x7ffd597cfb34,33273332,0,0x0,8
tick,0x7ffd597cfb34,33289078,0,0x0,8
tick,0x7ffd597cfb34,33304205,0,0x0,8
tick,0x7ffd597cfb34,33319590,0,0x0,8
tick,0x7ffd597cfb34,33334843,0,0x0,8
tick,0x7ffd597cfb34,33350834,0,0x0,8
tick,0x7ffd597cfb34,33366844,0,0x0,8
tick,0x7ffd597cfb34,33381959,0,0x0,8
tick,0x7ffd597cfb34,33396810,0,0x0,8
tick,0x7ffd597cfb34,33411942,0,0x0,8
tick,0x7ffd597cfb34,33428319,0,0x0,8
tick,0x7ffd597cfb34,33444015,0,0x0,8
tick,0x7ffd597cfb34,33458995,0,0x0,8
tick,0x7ffd597cfb34,33475000,0,0x0,8
tick,0x7ffd597cfb34,33491009,0,0x0,8
tick,0x7ffd597cfb34,33507018,0,0x0,8
tick,0x7ffd597cfb34,33522930,0,0x0,8
tick,0x7ffd597cfb34,33538920,0,0x0,8
tick,0x7ffd597cfb34,33554942,0,0x0,8
tick,0x7ffd597cfb34,33570922,0,0x0,8
tick,0x7ffd597cfb34,33586938,0,0x0,8
tick,0x7ffd597cfb34,33601926,0,0x0,8
tick,0x7ffd597cfb34,33616954,0,0x0,8
tick,0x7ffd597cfb34,33632213,0,0x0,8
tick,0x7ffd597cfb34,33648089,0,0x0,8
tick,0x7ffd597cfb34,33663082,0,0x0,8
tick,0x7ffd597cfb34,33679189,0,0x0,8
tick,0x7ffd597cfb34,33695056,0,0x0,8
tick,0x7ffd597cfb34,33710339,0,0x0,8
tick,0x7ffd597cfb34,33726110,0,0x0,8
tick,0x7ffd597cfb34,33741410,0,0x0,8
tick,0x7ffd597cfb34,33757271,0,0x0,8
tick,0x7ffd597cfb34,33772699,0,0x0,8
tick,0x7ffd597cfb34,33787542,0,0x0,8
tick,0x7ffd597cfb34,33804027,0,0x0,8
tick,0x7ffd597cfb34,33820005,0,0x0,8
tick,0x7ffd597cfb34,33835984,0,0x0,8
tick,0x7ffd597cfb34,33851904,0,0x0,8
tick,0x7ffd597cfb34,33867525,0,0x0,8
tick,0x7ffd597cfb34,33882994,0,0x0,8
tick,0x7ffd597cfb34,33897864,0,0x0,8
tick,0x7ffd597cfb34,33913765,0,0x0,8
tick,0x7ffd597cfb34,33928869,0,0x0,8
tick,0x7ffd597cfb34,33944463,0,0x0,8
tick,0x7ffd597cfb34,33959718,0,0x0,8
tick,0x7ffd597cfb34,33975992,0,0x0,8
tick,0x7ffd597cfb34,33991380,0,0x0,8
tick,0x7ffd597cfb34,34006652,0,0x0,8
tick,0x7ffd597cfb34,34022421,0,0x0,8
tick,0x7ffd597cfb34,34037982,0,0x0,8
tick,0x7ffd597cfb34,34053623,0,0x0,8
tick,0x7ffd597cfb34,34068661,0,0x0,8
tick,0x7ffd597cfb34,34083955,0,0x0,8
tick,0x7ffd597cfb34,34099192,0,0x0,8
tick,0x7ffd597cfb34,34114601,0,0x0,8
tick,0x7ffd597cfb34,34130169,0,0x0,8
tick,0x7ffd597cfb34,34146121,0,0x0,8
tick,0x7ffd597cfb34,34161207,0,0x0,8
tick,0x7ffd597cfb34,34176590,0,0x0,8
tick,0x7ffd597cfb34,34192392,0,0x0,8
tick,0x7ffd597cfb34,34207908,0,0x0,8
tick,0x7ffd597cfb34,34223415,0,0x0,8
tick,0x7ffd597cfb34,34238828,0,0x0,8
tick,0x7ffd597cfb34,34254906,0,0x0,8
tick,0x7ffd597cfb34,34270785,0,0x0,8
tick,0x7ffd597cfb34,34286792,0,0x0,8
tick,0x7ffd597cfb34,34301795,0,0x0,8
tick,0x7ffd597cfb34,34316792,0,0x0,8
tick,0x7ffd597cfb34,34332808,0,0x0,8
tick,0x7ffd597cfb34,34348892,0,0x0,8
tick,0x7ffd597cfb34,34364685,0,0x0,8
tick,0x7ffd597cfb34,34379377,0,0x0,8
tick,0x7ffd597cfb34,34395452,0,0x0,8
tick,0x7ffd597cfb34,34411523,0,0x0,8
tick,0x7ffd597cfb34,34427030,0,0x0,8
tick,0x7ffd597cfb34,34442775,0,0x0,8
tick,0x7ffd597cfb34,34458022,0,0x0,8
tick,0x7ffd597cfb34,34473942,0,0x0,8
tick,0x7ffd597cfb34,34489251,0,0x0,8
tick,0x7ffd597cfb34,34504612,0,0x0,8
tick,0x7ffd597cfb34,34520569,0,0x0,8
tick,0x7ffd597cfb34,34536560,0,0x0,8
tick,0x7ffd597cfb34,34552226,0,0x0,8
tick,0x7ffd597cfb34,34568290,0,0x0,8
tick,0x7ffd597cfb34,34583342,0,0x0,8
tick,0x7ffd597cfb34,34598724,0,0x0,8
tick,0x7ffd597cfb34,34614748,0,0x0,8
tick,0x7ffd597cfb34,34629895,0,0x0,8
tick,0x7ffd597cfb34,34645336,0,0x0,8
tick,0x7ffd597cfb34,34661044,0,0x0,8
tick,0x7ffd597cfb34,34676879,0,0x0,8
tick,0x7ffd597cfb34,34692850,0,0x0,8
tick,0x7ffd597cfb34,34708880,0,0x0,8
tick,0x7ffd597cfb34,34724870,0,0x0,8
tick,0x7ffd597cfb34,34740887,0,0x0,8
tick,0x7ffd597cfb34,34756876,0,0x0,8
tick,0x7ffd597cfb34,34772910,0,0x0,8
tick,0x7ffd597cfb34,34788882,0,0x0,8
tick,0x7ffd597cfb34,34803895,0,0x0,8
tick,0x7ffd597cfb34,34818921,0,0x0,8
tick,0x7ffd597cfb34,34834895,0,0x0,8
tick,0x7ffd597cfb34,34850066,0,0x0,8
tick,0x7ffd597cfb34,34865297,0,0x0,8
tick,0x7ffd597cfb34,34881030,0,0x0,8
tick,0x7ffd597cfb34,34897021,0,0x0,8
tick,0x7ffd597cfb34,34912879,0,0x0,8
tick,0x7ffd597cfb34,34928925,0,0x0,8
tick,0x7ffd597cfb34,34944895,0,0x0,8
tick,0x7ffd597cfb34,34960333,0,0x0,8
tick,0x7ffd597cfb34,34975893,0,0x0,8
tick,0x7ffd597cfb34,34991904,0,0x0,8
tick,0x7ffd597cfb34,35007891,0,0x0,8
tick,0x7ffd597cfb34,35023903,0,0x0,8
tick,0x7ffd597cfb34,35039905,0,0x0,8
tick,0x7ffd597cfb34,35055903,0,0x0,8
tick,0x7ffd597cfb34,35071945,0,0x0,8
tick,0x7ffd597cfb34,35087906,0,0x0,8
tick,0x7ffd597cfb34,35103092,0,0x0,8
tick,0x7ffd597cfb34,35119004,0,0x0,8
tick,0x7ffd597cfb34,35134819,0,0x0,8
tick,0x7ffd597cfb34,35150421,0,0x0,8
tick,0x7ffd597cfb34,35166405,0,0x0,8
tick,0x7ffd597cfb34,35181473,0,0x0,8
tick,0x7ffd597cfb34,35197708,0,0x0,8
tick,0x7ffd597cfb34,35213396,0,0x0,8
tick,0x7ffd597cfb34,35229127,0,0x0,8
tick,0x7ffd597cfb34,35244207,0,0x0,8
tick,0x7ffd597cfb34,35260351,0,0x0,8
tick,0x7ffd597cfb34,35275594,0,0x0,8
tick,0x7ffd597cfb34,35291151,0,0x0,8
tick,0x7ffd597cfb34,35306657,0,0x0,8
tick,0x7ffd597cfb34,35321574,0,0x0,8
tick,0x7ffd597cfb34,35337507,0,0x0,8
tick,0x7ffd597cfb34,35353234,0,0x0,8
tick,0x7ffd597cfb34,35368817,0,0x0,8
tick,0x7ffd597cfb34,35384737,0,0x0,8
tick,0x7ffd597cfb34,35399487,0,0x0,8
tick,0x7ffd597cfb34,35414738,0,0x0,8
tick,0x7ffd597cfb34,35430874,0,0x0,8
tick,0x7ffd597cfb34,35446262,0,0x0,8
tick,0x7ffd597cfb34,35461582,0,0x0,8
tick,0x7ffd597cfb34,35477984,0,0x0,8
tick,0x7ffd597cfb34,35493573,0,0x0,8
tick,0x7ffd597cfb34,35509585,0,0x0,8
tick,0x7ffd597cfb34,35525604,0,0x0,8
tick,0x7ffd597cfb34,35540903,0,0x0,8
tick,0x7ffd597cfb34,35556910,0,0x0,8
tick,0x7ffd597cfb34,35572905,0,0x0,8
tick,0x7ffd597cfb34,35589018,0,0x0,8
tick,0x7ffd597cfb34,35605024,0,0x0,8
tick,0x7ffd597cfb34,35620942,0,0x0,8
tick,0x7ffd597cfb34,35636954,0,0x0,8
tick,0x7ffd597cfb34,35653038,0,0x0,8
tick,0x7ffd597cfb34,35669008,0,0x0,8
tick,0x7ffd597cfb34,35685037,0,0x0,8
tick,0x7ffd597cfb34,35701031,0,0x0,8
tick,0x7ffd597cfb34,35717075,0,0x0,8
tick,0x7ffd597cfb34,35733153,0,0x0,8
tick,0x7ffd597cfb34,35749078,0,0x0,8
tick,0x7ffd597cfb34,35765050,0,0x0,8
tick,0x7ffd597cfb34,35781161,0,0x0,8
tick,0x7ffd597cfb34,35797161,0,0x0,8
tick,0x7ffd597cfb34,35813172,0,0x0,8
tick,0x7ffd597cfb34,35829077,0,0x0,8
tick,0x7ffd597cfb34,35845081,0,0x0,8
tick,0x7ffd597cfb34,35861215,0,0x0,8
tick,0x7ffd597cfb34,35876835,0,0x0,8
tick,0x7ffd597cfb34,35892555,0,0x0,8
tick,0x7ffd597cfb34,35908325,0,0x0,8
tick,0x7ffd597cfb34,35923937,0,0x0,8
tick,0x7ffd597cfb34,35939974,0,0x0,8
tick,0x7ffd597cfb34,35955688,0,0x0,8
tick,0x7ffd597cfb34,35971313,0,0x0,8
tick,0x7ffd597cfb34,35986822,0,0x0,8
tick,0x7ffd597cfb34,36002442,0,0x0,8
tick,0x7ffd597cfb34,36017525,0,0x0,8
tick,0x7ffd597cfb34,36032762,0,0x0,8
tick,0x7ffd597cfb34,36048229,0,0x0,8
tick,0x7ffd597cfb34,36063870,0,0x0,8
tick,0x7ffd597cfb34,36079526,0,0x0,8
tick,0x7ffd597cfb34,36094534,0,0x0,8
tick,0x7ffd597cfb34,36110710,0,0x0,8
tick,0x7ffd597cfb34,36126470,0,0x0,8
tick,0x7ffd597cfb34,36141822,0,0x0,8
tick,0x7ffd597cfb34,36157835,0,0x0,8
tick,0x7ffd597cfb34,36173642,0,0x0,8
tick,0x7ffd597cfb34,36189001,0,0x0,8
tick,0x7ffd597cfb34,36204239,0,0x0,8
tick,0x7ffd597cfb34,36219912,0,0x0,8
tick,0x7ffd597cfb34,36235483,0,0x0,8
tick,0x7ffd597cfb34,36250624,0,0x0,8
tick,0x7ffd597cfb34,36266311,0,0x0,8
tick,0x7ffd597cfb34,36281908,0,0x0,8
tick,0x7ffd597cfb34,36297775,0,0x0,8
tick,0x7ffd597cfb34,36313506,0,0x0,8
tick,0x7ffd597cfb34,36329204,0,0x0,8
tick,0x7ffd597cfb34,36344834,0,0x0,8
tick,0x7ffd597cfb34,36360746,0,0x0,8
tick,0x7ffd597cfb34,36376746,0,0x0,8
tick,0x7ffd597cfb34,36392510,0,0x0,8
tick,0x7ffd597cfb34,36408821,0,0x0,8
tick,0x7ffd597cfb34,36424247,0,0x0,8
tick,0x7ffd597cfb34,36439427,0,0x0,8
tick,0x7ffd597cfb34,36455596,0,0x0,8
tick,0x7ffd597cfb34,36470650,0,0x0,8
tick,0x7ffd597cfb34,36485994,0,0x0,8
tick,0x7ffd597cfb34,36501313,0,0x0,8
tick,0x7ffd597cfb34,36516978,0,0x0,8
tick,0x7ffd597cfb34,36532727,0,0x0,8
tick,0x7ffd597cfb34,36548455,0,0x0,8
tick,0x7ffd597cfb34,36564238,0,0x0,8
tick,0x7ffd597cfb34,36580181,0,0x0,8
tick,0x7ffd597cfb34,36595853,0,0x0,8
tick,0x7ffd597cfb34,36611468,0,0x0,8
tick,0x7ffd597cfb34,36627375,0,0x0,8
tick,0x7ffd597cfb34,36642904,0,0x0,8
tick,0x7ffd597cfb34,36658050,0,0x0,8
tick,0x7ffd597cfb34,36673558,0,0x0,8
tick,0x7ffd597cfb34,36689442,0,0x0,8
tick,0x7ffd597cfb34,36705450,0,0x0,8
tick,0x7ffd597cfb34,36721447,0,0x0,8
tick,0x7ffd597cfb34,36737447,0,0x0,8
tick,0x7ffd597cfb34,36753462,0,0x0,8
tick,0x7ffd597cfb34,36769441,0,0x0,8
tick,0x7ffd597cfb34,36785463,0,0x0,8
tick,0x7ffd597cfb34,36801457,0,0x0,8
tick,0x7ffd597cfb34,36816475,0,0x0,8
tick,0x7ffd597cfb34,36832464,0,0x0,8
tick,0x7ffd597cfb34,36847495,0,0x0,8
tick,0x7ffd597cfb34,36863026,0,0x0,8
tick,0x7ffd597cfb34,36879053,0,0x0,8
tick,0x7ffd597cfb34,36895035,0,0x0,8
tick,0x7ffd597cfb34,36911024,0,0x0,8
tick,0x7ffd597cfb34,36927003,0,0x0,8
tick,0x7ffd597cfb34,36943032,0,0x0,8
tick,0x7ffd597cfb34,36959024,0,0x0,8
tick,0x7ffd597cfb34,36975045,0,0x0,8
tick,0x7ffd597cfb34,36990266,0,0x0,8
tick,0x7ffd597cfb34,37006048,0,0x0,8
tick,0x7ffd597cfb34,37021370,0,0x0,8
tick,0x7ffd597cfb34,37037055,0,0x0,8
tick,0x7ffd597cfb34,37052281,0,0x0,8
tick,0x7ffd597cfb34,37067342,0,0x0,8
tick,0x7ffd597cfb34,37083039,0,0x0,8
tick,0x7ffd597cfb34,37099057,0,0x0,8
tick,0x7ffd597cfb34,37115165,0,0x0,8
tick,0x7ffd597cfb34,37130446,0,0x0,8
tick,0x7ffd597cfb34,37146174,0,0x0,8
tick,0x7ffd597cfb34,37161579,0,0x0,8
tick,0x7ffd597cfb34,37176710,0,0x0,8
tick,0x7ffd597cfb34,37192256,0,0x0,8
tick,0x7ffd597cfb34,37207389,0,0x0,8
tick,0x7ffd597cfb34,37223070,0,0x0,8
tick,0x7ffd597cfb34,37238802,0,0x0,8
tick,0x7ffd597cfb34,37254355,0,0x0,8
tick,0x7ffd597cfb34,37270507,0,0x0,8
tick,0x7ffd597cfb34,37286707,0,0x0,8
tick,0x7ffd597cfb34,37302234,0,0x0,8
tick,0x7ffd597cfb34,37317294,0,0x0,8
tick,0x7ffd597cfb34,37332281,0,0x0,8
tick,0x7ffd597cfb34,37348293,0,0x0,8
tick,0x7ffd597cfb34,37364322,0,0x0,8
tick,0x7ffd597cfb34,37380316,0,0x0,8
tick,0x7ffd597cfb34,37396308,0,0x0,8
tick,0x7ffd597cfb34,37412085,0,0x0,8
tick,0x7ffd597cfb34,37428071,0,0x0,8
tick,0x7ffd597cfb34,37444059,0,0x0,8
tick,0x7ffd597cfb34,37460045,0,0x0,8
tick,0x7ffd597cfb34,37476052,0,0x0,8
tick,0x7ffd597cfb34,37491228,0,0x0,8
tick,0x7ffd597cfb34,37506520,0,0x0,8
tick,0x7ffd597cfb34,37522262,0,0x0,8
tick,0x7ffd597cfb34,37537795,0,0x0,8
tick,0x7ffd597cfb34,37552521,0,0x0,8
tick,0x7ffd597cfb34,37568884,0,0x0,8
tick,0x7ffd597cfb34,37584617,0,0x0,8
tick,0x7ffd597cfb34,37600394,0,0x0,8
tick,0x7ffd597cfb34,37615961,0,0x0,8
tick,0x7ffd597cfb34,37631411,0,0x0,8
tick,0x7ffd597cfb34,37647658,0,0x0,8
tick,0x7ffd597cfb34,37664306,0,0x0,8
tick,0x7ffd597cfb34,37679880,0,0x0,8
tick,0x7ffd597cfb34,37695408,0,0x0,8
tick,0x7ffd597cfb34,37711174,0,0x0,8
tick,0x7ffd597cfb34,37726742,0,0x0,8
tick,0x7ffd597cfb34,37743100,0,0x0,8
tick,0x7ffd597cfb34,37758970,0,0x0,8
tick,0x7ffd597cfb34,37774548,0,0x0,8
tick,0x7ffd597cfb34,37789681,0,0x0,8
tick,0x7ffd597cfb34,37805497,0,0x0,8
tick,0x7ffd597cfb34,37821068,0,0x0,8
tick,0x7ffd597cfb34,37836927,0,0x0,8
tick,0x7ffd597cfb34,37853416,0,0x0,8
tick,0x7ffd597cfb34,37869033,0,0x0,8
tick,0x7ffd597cfb34,37884672,0,0x0,8
tick,0x7ffd597cfb34,37899849,0,0x0,8
tick,0x7ffd597cfb34,37915791,0,0x0,8
tick,0x7ffd597cfb34,37931385,0,0x0,8
tick,0x7ffd597cfb34,37946931,0,0x0,8
tick,0x7ffd597cfb34,37963062,0,0x0,8
tick,0x7ffd597cfb34,37978654,0,0x0,8
tick,0x7ffd597cfb34,37994244,0,0x0,8
tick,0x7ffd597cfb34,38010266,0,0x0,8
tick,0x7ffd597cfb34,38025161,0,0x0,8
tick,0x7ffd597cfb34,38040263,0,0x0,8
tick,0x7ffd597cfb34,38055387,0,0x0,8
tick,0x7ffd597cfb34,38071412,0,0x0,8
tick,0x7ffd597cfb34,38087064,0,0x0,8
tick,0x7ffd597cfb34,38102836,0,0x0,8
tick,0x7ffd597cfb34,38118387,0,0x0,8
tick,0x7ffd597cfb34,38134191,0,0x0,8
tick,0x7ffd597cfb34,38149638,0,0x0,8
tick,0x7ffd597cfb34,38164899,0,0x0,8
tick,0x7ffd597cfb34,38180617,0,0x0,8
tick,0x7ffd597cfb34,38196458,0,0x0,8
tick,0x7ffd597cfb34,38212628,0,0x0,8
tick,0x7ffd597cfb34,38227998,0,0x0,8
tick,0x7ffd597cfb34,38244085,0,0x0,8
tick,0x7ffd597cfb34,38260241,0,0x0,8
tick,0x7ffd597cfb34,38275922,0,0x0,8
tick,0x7ffd597cfb34,38291879,0,0x0,8
tick,0x7ffd597cfb34,38307468,0,0x0,8
tick,0x7ffd597cfb34,38323292,0,0x0,8
tick,0x7ffd597cfb34,38338865,0,0x0,8
tick,0x7ffd597cfb34,38354819,0,0x0,8
tick,0x7ffd597cfb34,38370577,0,0x0,8
tick,0x7ffd597cfb34,38386424,0,0x0,8
tick,0x7ffd597cfb34,38401860,0,0x0,8
tick,0x7ffd597cfb34,38417891,0,0x0,8
tick,0x7ffd597cfb34,38434499,0,0x0,8
tick,0x7ffd597cfb34,38449939,0,0x0,8
tick,0x7ffd597cfb34,38465638,0,0x0,8
tick,0x7ffd597cfb34,38481074,0,0x0,8
tick,0x7ffd597cfb34,38496075,0,0x0,8
tick,0x7ffd597cfb34,38512257,0,0x0,8
tick,0x7ffd597cfb34,38527794,0,0x0,8
tick,0x7ffd597cfb34,38543287,0,0x0,8
tick,0x7ffd597cfb34,38559039,0,0x0,8
tick,0x7ffd597cfb34,38574832,0,0x0,8
tick,0x7ffd597cfb34,38590087,0,0x0,8
tick,0x7ffd597cfb34,38604827,0,0x0,8
tick,0x7ffd597cfb34,38620520,0,0x0,8
tick,0x7ffd597cfb34,38636469,0,0x0,8
tick,0x7ffd597cfb34,38652120,0,0x0,8
tick,0x7ffd597cfb34,38668318,0,0x0,8
tick,0x7ffd597cfb34,38684036,0,0x0,8
tick,0x7ffd597cfb34,38699801,0,0x0,8
tick,0x7ffd597cfb34,38714955,0,0x0,8
tick,0x7ffd597cfb34,38731454,0,0x0,8
tick,0x7ffd597cfb34,38747122,0,0x0,8
tick,0x7ffd597cfb34,38763107,0,0x0,8
tick,0x7ffd597cfb34,38778816,0,0x0,8
tick,0x7ffd597cfb34,38794429,0,0x0,8
tick,0x7ffd597cfb34,38810350,0,0x0,8
tick,0x7ffd597cfb34,38826019,0,0x0,8
tick,0x7ffd597cfb34,38841745,0,0x0,8
tick,0x7ffd597cfb34,38857386,0,0x0,8
tick,0x7ffd597cfb34,38872852,0,0x0,8
tick,0x7ffd597cfb34,38889115,0,0x0,8
tick,0x7ffd597cfb34,38904996,0,0x0,8
tick,0x7ffd597cfb34,38920631,0,0x0,8
tick,0x7ffd597cfb34,38936795,0,0x0,8
tick,0x7ffd597cfb34,38953037,0,0x0,8
tick,0x7ffd597cfb34,38969072,0,0x0,8
tick,0x7ffd597cfb34,38984877,0,0x0,8
tick,0x7ffd597cfb34,39000909,0,0x0,8
tick,0x7ffd597cfb34,39016755,0,0x0,8
tick,0x7ffd597cfb34,39033132,0,0x0,8
tick,0x7ffd597cfb34,39048479,0,0x0,8
tick,0x7ffd597cfb34,39064722,0,0x0,8
tick,0x7ffd597cfb34,39080390,0,0x0,8
tick,0x7ffd597cfb34,39095571,0,0x0,8
tick,0x7ffd597cfb34,39111531,0,0x0,8
tick,0x7ffd597cfb34,39127170,0,0x0,8
tick,0x7ffd597cfb34,39143175,0,0x0,8
tick,0x7ffd597cfb34,39159182,0,0x0,8
tick,0x7ffd597cfb34,39175187,0,0x0,8
tick,0x7ffd597cfb34,39191185,0,0x0,8
tick,0x7ffd597cfb34,39207189,0,0x0,8
tick,0x7ffd597cfb34,39223190,0,0x0,8
tick,0x7ffd597cfb34,39239180,0,0x0,8
tick,0x7ffd597cfb34,39255018,0,0x0,8
tick,0x7ffd597cfb34,39270829,0,0x0,8
tick,0x7ffd597cfb34,39286366,0,0x0,8
tick,0x7ffd597cfb34,39301512,0,0x0,8
tick,0x7ffd597cfb34,39316858,0,0x0,8
tick,0x7ffd597cfb34,39332215,0,0x0,8
tick,0x7ffd597cfb34,39347556,0,0x0,8
tick,0x7ffd597cfb34,39363240,0,0x0,8
tick,0x7ffd597cfb34,39378653,0,0x0,8
tick,0x7ffd597cfb34,39393619,0,0x0,8
tick,0x7ffd597cfb34,39409225,0,0x0,8
tick,0x7ffd597cfb34,39425231,0,0x0,8
tick,0x7ffd597cfb34,39441177,0,0x0,8
tick,0x7ffd597cfb34,39456398,0,0x0,8
tick,0x7ffd597cfb34,39471192,0,0x0,8
tick,0x7ffd597cfb34,39487197,0,0x0,8
tick,0x7ffd597cfb34,39502652,0,0x0,8
tick,0x7ffd597cfb34,39518236,0,0x0,8
tick,0x7ffd597cfb34,39534195,0,0x0,8
tick,0x7ffd597cfb34,39549376,0,0x0,8
tick,0x7ffd597cfb34,39565319,0,0x0,8
tick,0x7ffd597cfb34,39580201,0,0x0,8
tick,0x7ffd597cfb34,39595336,0,0x0,8
tick,0x7ffd597cfb34,39610424,0,0x0,8
tick,0x7ffd597cfb34,39626225,0,0x0,8
tick,0x7ffd597cfb34,39641375,0,0x0,8
tick,0x7ffd597cfb34,39657216,0,0x0,8
tick,0x7ffd597cfb34,39672258,0,0x0,8
tick,0x7ffd597cfb34,39687503,0,0x0,8
tick,0x7ffd597cfb34,39702991,0,0x0,8
tick,0x7ffd597cfb34,39718212,0,0x0,8
tick,0x7ffd597cfb34,39733903,0,0x0,8
tick,0x7ffd597cfb34,39749232,0,0x0,8
tick,0x7ffd597cfb34,39764934,0,0x0,8
tick,0x7ffd597cfb34,39780041,0,0x0,8
tick,0x7ffd597cfb34,39795255,0,0x0,8
tick,0x7ffd597cfb34,39810361,0,0x0,8
tick,0x7ffd597cfb34,39825108,0,0x0,8
tick,0x7ffd597cfb34,39840293,0,0x0,8
tick,0x7ffd597cfb34,39855755,0,0x0,8
tick,0x7ffd597cfb34,39870900,0,0x0,8
tick,0x7ffd597cfb34,39887024,0,0x0,8
tick,0x7ffd597cfb34,39902044,0,0x0,8
tick,0x7ffd597cfb34,39917382,0,0x0,8
tick,0x7ffd597cfb34,39932541,0,0x0,8
tick,0x7ffd597cfb34,39947788,0,0x0,8
tick,0x7ffd597cfb34,39963384,0,0x0,8
tick,0x7ffd597cfb34,39979094,0,0x0,8
tick,0x7ffd597cfb34,39993678,0,0x0,8
tick,0x7ffd597cfb34,40009007,0,0x0,8
tick,0x7ffd597cfb34,40024627,0,0x0,8
tick,0x7ffd597cfb34,40039511,0,0x0,8
tick,0x7ffd597cfb34,40055629,0,0x0,8
tick,0x7ffd597cfb34,40070798,0,0x0,8
tick,0x7ffd597cfb34,40086187,0,0x0,8
tick,0x7ffd597cfb34,40101624,0,0x0,8
tick,0x7ffd597cfb34,40116851,0,0x0,8
tick,0x7ffd597cfb34,40132754,0,0x0,8
tick,0x7ffd597cfb34,40148188,0,0x0,8
tick,0x7ffd597cfb34,40163333,0,0x0,8
tick,0x7ffd597cfb34,40179413,0,0x0,8
tick,0x7ffd597cfb34,40195510,0,0x0,8
tick,0x7ffd597cfb34,40211619,0,0x0,8
tick,0x7ffd597cfb34,40227769,0,0x0,8
tick,0x7ffd597cfb34,40242779,0,0x0,8
tick,0x7ffd597cfb34,40258129,0,0x0,8
tick,0x7ffd597cfb34,40274023,0,0x0,8
tick,0x7ffd597cfb34,40289212,0,0x0,8
tick,0x7ffd597cfb34,40304007,0,0x0,8
tick,0x7ffd597cfb34,40320016,0,0x0,8
tick,0x7ffd597cfb34,40335123,0,0x0,8
tick,0x7ffd597cfb34,40349946,0,0x0,8
tick,0x7ffd597cfb34,40365717,0,0x0,8
tick,0x7ffd597cfb34,40381706,0,0x0,8
tick,0x7ffd597cfb34,40397672,0,0x0,8
tick,0x7ffd597cfb34,40413162,0,0x0,8
tick,0x7ffd597cfb34,40429351,0,0x0,8
tick,0x7ffd597cfb34,40445376,0,0x0,8
tick,0x7ffd597cfb34,40461136,0,0x0,8
tick,0x7ffd597cfb34,40476935,0,0x0,8
tick,0x7ffd597cfb34,40492683,0,0x0,8
tick,0x7ffd597cfb34,40508454,0,0x0,8
tick,0x7ffd597cfb34,40524487,0,0x0,8
tick,0x7ffd597cfb34,40539573,0,0x0,8
tick,0x7ffd597cfb34,40554868,0,0x0,8
tick,0x7ffd597cfb34,40570182,0,0x0,8
tick,0x7ffd597cfb34,40586182,0,0x0,8
tick,0x7ffd597cfb34,40601709,0,0x0,8
tick,0x7ffd597cfb34,40617741,0,0x0,8
tick,0x7ffd597cfb34,40633014,0,0x0,8
tick,0x7ffd597cfb34,40649351,0,0x0,8
tick,0x7ffd597cfb34,40664578,0,0x0,8
tick,0x7ffd597cfb34,40679874,0,0x0,8
tick,0x7ffd597cfb34,40695035,0,0x0,8
tick,0x7ffd597cfb34,40711121,0,0x0,8
tick,0x7ffd597cfb34,40726596,0,0x0,8
tick,0x7ffd597cfb34,40742515,0,0x0,8
tick,0x7ffd597cfb34,40758138,0,0x0,8
tick,0x7ffd597cfb34,40773685,0,0x0,8
tick,0x7ffd597cfb34,40788978,0,0x0,8
tick,0x7ffd597cfb34,40804495,0,0x0,8
tick,0x7ffd597cfb34,40819543,0,0x0,8
tick,0x7ffd597cfb34,40834710,0,0x0,8
tick,0x7ffd597cfb34,40850029,0,0x0,8
tick,0x7ffd597cfb34,40865443,0,0x0,8
tick,0x7ffd597cfb34,40880513,0,0x0,8
tick,0x7ffd597cfb34,40896118,0,0x0,8
tick,0x7ffd597cfb34,40911087,0,0x0,8
tick,0x7ffd597cfb34,40926767,0,0x0,8
tick,0x7ffd597cfb34,40942517,0,0x0,8
tick,0x7ffd597cfb34,40957806,0,0x0,8
tick,0x7ffd597cfb34,40974002,0,0x0,8
tick,0x7ffd597cfb34,40989875,0,0x0,8
tick,0x7ffd597cfb34,41005436,0,0x0,8
tick,0x7ffd597cfb34,41021354,0,0x0,8
tick,0x7ffd597cfb34,41037182,0,0x0,8
tick,0x7ffd597cfb34,41052784,0,0x0,8
tick,0x7ffd597cfb34,41068504,0,0x0,8
tick,0x7ffd597cfb34,41084503,0,0x0,8
tick,0x7ffd597cfb34,41100044,0,0x0,8
tick,0x7ffd597cfb34,41115742,0,0x0,8
tick,0x7ffd597cfb34,41130854,0,0x0,8
tick,0x7ffd597cfb34,41147216,0,0x0,8
tick,0x7ffd597cfb34,41163507,0,0x0,8
tick,0x7ffd597cfb34,41179069,0,0x0,8
tick,0x7ffd597cfb34,41194886,0,0x0,8
tick,0x7ffd597cfb34,41210878,0,0x0,8
tick,0x7ffd597cfb34,41226295,0,0x0,8
tick,0x7ffd597cfb34,41241644,0,0x0,8
tick,0x7ffd597cfb34,41256789,0,0x0,8
tick,0x7ffd597cfb34,41272546,0,0x0,8
tick,0x7ffd597cfb34,41288123,0,0x0,8
tick,0x7ffd597cfb34,41304272,0,0x0,8
tick,0x7ffd597cfb34,41320259,0,0x0,8
tick,0x7ffd597cfb34,41336020,0,0x0,8
tick,0x7ffd597cfb34,41351164,0,0x0,8
tick,0x7ffd597cfb34,41366823,0,0x0,8
tick,0x7ffd597cfb34,41382281,0,0x0,8
tick,0x7ffd597cfb34,41397304,0,0x0,8
tick,0x7ffd597cfb34,41412360,0,0x0,8
tick,0x7ffd597cfb34,41427980,0,0x0,8
tick,0x7ffd597cfb34,41443252,0,0x0,8
tick,0x7ffd597cfb34,41458353,0,0x0,8
tick,0x7ffd597cfb34,41473652,0,0x0,8
tick,0x7ffd597cfb34,41488768,0,0x0,8
tick,0x7ffd597cfb34,41504003,0,0x0,8
tick,0x7ffd597cfb34,41519763,0,0x0,8
tick,0x7ffd597cfb34,41535629,0,0x0,8
tick,0x7ffd597cfb34,41550513,0,0x0,8
tick,0x7ffd597cfb34,41566203,0,0x0,8
tick,0x7ffd597cfb34,41581482,0,0x0,8
tick,0x7ffd597cfb34,41597396,0,0x0,8
tick,0x7ffd597cfb34,41612821,0,0x0,8
tick,0x7ffd597cfb34,41627659,0,0x0,8
tick,0x7ffd597cfb34,41643556,0,0x0,8
tick,0x7ffd597cfb34,41659391,0,0x0,8
tick,0x7ffd597cfb34,41674476,0,0x0,8
tick,0x7ffd597cfb34,41690794,0,0x0,8
tick,0x7ffd597cfb34,41706850,0,0x0,8
tick,0x7ffd597cfb34,41722572,0,0x0,8
tick,0x7ffd597cfb34,41738025,0,0x0,8
tick,0x7ffd597cfb34,41754086,0,0x0,8
tick,0x7ffd597cfb34,41769603,0,0x0,8
tick,0x7ffd597cfb34,41785081,0,0x0,8
tick,0x7ffd597cfb34,41801238,0,0x0,8
tick,0x7ffd597cfb34,41817259,0,0x0,8
tick,0x7ffd597cfb34,41832235,0,0x0,8
tick,0x7ffd597cfb34,41847869,0,0x0,8
tick,0x7ffd597cfb34,41863646,0,0x0,8
tick,0x7ffd597cfb34,41879347,0,0x0,8
tick,0x7ffd597cfb34,41895061,0,0x0,8
tick,0x7ffd597cfb34,41910693,0,0x0,8
tick,0x7ffd597cfb34,41926480,0,0x0,8
tick,0x7ffd597cfb34,41942045,0,0x0,8
tick,0x7ffd597cfb34,41957542,0,0x0,8
tick,0x7ffd597cfb34,41973751,0,0x0,8
tick,0x7ffd597cfb34,41988851,0,0x0,8
tick,0x7ffd597cfb34,42004862,0,0x0,8
tick,0x7ffd597cfb34,42020443,0,0x0,8
tick,0x7ffd597cfb34,42036415,0,0x0,8
tick,0x7ffd597cfb34,42051394,0,0x0,8
tick,0x7ffd597cfb34,42066265,0,0x0,8
tick,0x7ffd597cfb34,42081402,0,0x0,8
tick,0x7ffd597cfb34,42097442,0,0x0,8
tick,0x7ffd597cfb34,42112564,0,0x0,8
tick,0x7ffd597cfb34,42128573,0,0x0,8
tick,0x7ffd597cfb34,42143823,0,0x0,8
tick,0x7ffd597cfb34,42158822,0,0x0,8
tick,0x7ffd597cfb34,42175473,0,0x0,8
tick,0x7ffd597cfb34,42190561,0,0x0,8
tick,0x7ffd597cfb34,42206971,0,0x0,8
tick,0x7ffd597cfb34,42222424,0,0x0,8
tick,0x7ffd597cfb34,42238311,0,0x0,8
tick,0x7ffd597cfb34,42253591,0,0x0,8
tick,0x7ffd597cfb34,42269185,0,0x0,8
tick,0x7ffd597cfb34,42284854,0,0x0,8
tick,0x7ffd597cfb34,42300899,0,0x0,8
tick,0x7ffd597cfb34,42316503,0,0x0,8
tick,0x7ffd597cfb34,42331957,0,0x0,8
tick,0x7ffd597cfb34,42347707,0,0x0,8
tick,0x7ffd597cfb34,42363117,0,0x0,8
tick,0x7ffd597cfb34,42378618,0,0x0,8
tick,0x7ffd597cfb34,42394045,0,0x0,8
tick,0x7ffd597cfb34,42409491,0,0x0,8
tick,0x7ffd597cfb34,42425727,0,0x0,8
tick,0x7ffd597cfb34,42441091,0,0x0,8
tick,0x7ffd597cfb34,42457179,0,0x0,8
tick,0x7ffd597cfb34,42472845,0,0x0,8
tick,0x7ffd597cfb34,42488843,0,0x0,8
tick,0x7ffd597cfb34,42504638,0,0x0,8
tick,0x7ffd597cfb34,42520221,0,0x0,8
tick,0x7ffd597cfb34,42535307,0,0x0,8
tick,0x7ffd597cfb34,42551089,0,0x0,8
tick,0x7ffd597cfb34,42566710,0,0x0,8
tick,0x7ffd597cfb34,42581816,0,0x0,8
tick,0x7ffd597cfb34,42597183,0,0x0,8
tick,0x7ffd597cfb34,42612881,0,0x0,8
tick,0x7ffd597cfb34,42628134,0,0x0,8
tick,0x7ffd597cfb34,42643596,0,0x0,8
tick,0x7ffd597cfb34,42659489,0,0x0,8
tick,0x7ffd597cfb34,42675436,0,0x0,8
tick,0x7ffd597cfb34,42691203,0,0x0,8
tick,0x7ffd597cfb34,42707250,0,0x0,8
tick,0x7ffd597cfb34,42722545,0,0x0,8
tick,0x7ffd597cfb34,42739120,0,0x0,8
tick,0x7ffd597cfb34,42754756,0,0x0,8
tick,0x7ffd597cfb34,42770178,0,0x0,8
tick,0x7ffd597cfb34,42786185,0,0x0,8
tick,0x7ffd597cfb34,42801330,0,0x0,8
tick,0x7ffd597cfb34,42817187,0,0x0,8
tick,0x7ffd597cfb34,42832423,0,0x0,8
tick,0x7ffd597cfb34,42848296,0,0x0,8
tick,0x7ffd597cfb34,42863334,0,0x0,8
tick,0x7ffd597cfb34,42878791,0,0x0,8
tick,0x7ffd597cfb34,42895062,0,0x0,8
tick,0x7ffd597cfb34,42910574,0,0x0,8
tick,0x7ffd597cfb34,42925776,0,0x0,8
tick,0x7ffd597cfb34,42941382,0,0x0,8
tick,0x7ffd597cfb34,42957497,0,0x0,8
tick,0x7ffd597cfb34,42972927,0,0x0,8
tick,0x7ffd597cfb34,42988776,0,0x0,8
tick,0x7ffd597cfb34,43004069,0,0x0,8
tick,0x7ffd597cfb34,43019878,0,0x0,8
tick,0x7ffd597cfb34,43035981,0,0x0,8
tick,0x7ffd597cfb34,43051715,0,0x0,8
tick,0x7ffd597cfb34,43066661,0,0x0,8
tick,0x7ffd597cfb34,43082487,0,0x0,8
tick,0x7ffd597cfb34,43098360,0,0x0,8
tick,0x7ffd597cfb34,43114073,0,0x0,8
tick,0x7ffd597cfb34,43129364,0,0x0,8
tick,0x7ffd597cfb34,43144343,0,0x0,8
tick,0x7ffd597cfb34,43159581,0,0x0,8
tick,0x7ffd597cfb34,43175634,0,0x0,8
tick,0x7ffd597cfb34,43190805,0,0x0,8
tick,0x7ffd597cfb34,43206445,0,0x0,8
tick,0x7ffd597cfb34,43221439,0,0x0,8
tick,0x7ffd597cfb34,43237523,0,0x0,8
tick,0x7ffd597cfb34,43253430,0,0x0,8
tick,0x7ffd597cfb34,43269643,0,0x0,8
tick,0x7ffd597cfb34,43285090,0,0x0,8
tick,0x7ffd597cfb34,43300033,0,0x0,8
tick,0x7ffd597cfb34,43316374,0,0x0,8
tick,0x7ffd597cfb34,43331456,0,0x0,8
tick,0x7ffd597cfb34,43347705,0,0x0,8
tick,0x7ffd597cfb34,43363342,0,0x0,8
tick,0x7ffd597cfb34,43378651,0,0x0,8
tick,0x7ffd597cfb34,43395021,0,0x0,8
tick,0x7ffd597cfb34,43410495,0,0x0,8
tick,0x7ffd597cfb34,43426064,0,0x0,8
tick,0x7ffd597cfb34,43441140,0,0x0,8
tick,0x7ffd597cfb34,43457188,0,0x0,8
tick,0x7ffd597cfb34,43473064,0,0x0,8
tick,0x7ffd597cfb34,43489192,0,0x0,8
tick,0x7ffd597cfb34,43505096,0,0x0,8
tick,0x7ffd597cfb34,43521090,0,0x0,8
tick,0x7ffd597cfb34,43536378,0,0x0,8
tick,0x7ffd597cfb34,43551812,0,0x0,8
tick,0x7ffd597cfb34,43567344,0,0x0,8
tick,0x7ffd597cfb34,43582761,0,0x0,8
tick,0x7ffd597cfb34,43598091,0,0x0,8
tick,0x7ffd597cfb34,43613481,0,0x0,8
tick,0x7ffd597cfb34,43629483,0,0x0,8
tick,0x7ffd597cfb34,43645463,0,0x0,8
tick,0x7ffd597cfb34,43661488,0,0x0,8
tick,0x7ffd597cfb34,43677493,0,0x0,8
tick,0x7ffd597cfb34,43693491,0,0x0,8
tick,0x7ffd597cfb34,43709489,0,0x0,8
tick,0x7ffd597cfb34,43725480,0,0x0,8
tick,0x7ffd597cfb34,43741484,0,0x0,8
tick,0x7ffd597cfb34,43757505,0,0x0,8
tick,0x7ffd597cfb34,43773478,0,0x0,8
tick,0x7ffd597cfb34,43789499,0,0x0,8
tick,0x7ffd597cfb34,43805717,0,0x0,8
tick,0x7ffd597cfb34,43821429,0,0x0,8
tick,0x7ffd597cfb34,43837545,0,0x0,8
tick,0x7ffd597cfb34,43852665,0,0x0,8
tick,0x7ffd597cfb34,43867517,0,0x0,8
tick,0x7ffd597cfb34,43883364,0,0x0,8
tick,0x7ffd597cfb34,43898518,0,0x0,8
tick,0x7ffd597cfb34,43913499,0,0x0,8
tick,0x7ffd597cfb34,43929499,0,0x0,8
tick,0x7ffd597cfb34,43945536,0,0x0,8
tick,0x7ffd597cfb34,43960705,0,0x0,8
tick,0x7ffd597cfb34,43976663,0,0x0,8
tick,0x7ffd597cfb34,43991565,0,0x0,8
tick,0x7ffd597cfb34,44006646,0,0x0,8
tick,0x7ffd597cfb34,44022035,0,0x0,8
tick,0x7ffd597cfb34,44037539,0,0x0,8
tick,0x7ffd597cfb34,44053486,0,0x0,8
tick,0x7ffd597cfb34,44068686,0,0x0,8
tick,0x7ffd597cfb34,44083649,0,0x0,8
tick,0x7ffd597cfb34,44099496,0,0x0,8
tick,0x7ffd597cfb34,44115537,0,0x0,8
tick,0x7ffd597cfb34,44130724,0,0x0,8
tick,0x7ffd597cfb34,44146736,0,0x0,8
tick,0x7ffd597cfb34,44161719,0,0x0,8
tick,0x7ffd597cfb34,44177839,0,0x0,8
tick,0x7ffd597cfb34,44193070,0,0x0,8
tick,0x7ffd597cfb34,44208361,0,0x0,8
tick,0x7ffd597cfb34,44223843,0,0x0,8
tick,0x7ffd597cfb34,44238927,0,0x0,8
tick,0x7ffd597cfb34,44253857,0,0x0,8
tick,0x7ffd597cfb34,44269310,0,0x0,8
tick,0x7ffd597cfb34,44284911,0,0x0,8
tick,0x7ffd597cfb34,44299699,0,0x0,8
tick,0x7ffd597cfb34,44315352,0,0x0,8
tick,0x7ffd597cfb34,44331467,0,0x0,8
tick,0x7ffd597cfb34,44347332,0,0x0,8
tick,0x7ffd597cfb34,44362524,0,0x0,8
tick,0x7ffd597cfb34,44377745,0,0x0,8
tick,0x7ffd597cfb34,44393653,0,0x0,8
tick,0x7ffd597cfb34,44409021,0,0x0,8
tick,0x7ffd597cfb34,44425057,0,0x0,8
tick,0x7ffd597cfb34,44440897,0,0x0,8
tick,0x7ffd597cfb34,44456576,0,0x0,8
tick,0x7ffd597cfb34,44472523,0,0x0,8
tick,0x7ffd597cfb34,44488762,0,0x0,8
tick,0x7ffd597cfb34,44504017,0,0x0,8
tick,0x7ffd597cfb34,44519930,0,0x0,8
tick,0x7ffd597cfb34,44535736,0,0x0,8
tick,0x7ffd597cfb34,44550955,0,0x0,8
tick,0x7ffd597cfb34,44566849,0,0x0,8
tick,0x7ffd597cfb34,44581943,0,0x0,8
tick,0x7ffd597cfb34,44597717,0,0x0,8
tick,0x7ffd597cfb34,44613748,0,0x0,8
tick,0x7ffd597cfb34,44628980,0,0x0,8
tick,0x7ffd597cfb34,44644691,0,0x0,8
tick,0x7ffd597cfb34,44659805,0,0x0,8
tick,0x7ffd597cfb34,44675088,0,0x0,8
tick,0x7ffd597cfb34,44690826,0,0x0,8
tick,0x7ffd597cfb34,44705977,0,0x0,8
tick,0x7ffd597cfb34,44721846,0,0x0,8
tick,0x7ffd597cfb34,44737651,0,0x0,8
tick,0x7ffd597cfb34,44753086,0,0x0,8
tick,0x7ffd597cfb34,44768681,0,0x0,8
tick,0x7ffd597cfb34,44783986,0,0x0,8
tick,0x7ffd597cfb34,44799671,0,0x0,8
tick,0x7ffd597cfb34,44815375,0,0x0,8
tick,0x7ffd597cfb34,44831297,0,0x0,8
tick,0x7ffd597cfb34,44847044,0,0x0,8
tick,0x7ffd597cfb34,44862740,0,0x0,8
tick,0x7ffd597cfb34,44878721,0,0x0,8
tick,0x7ffd597cfb34,44894469,0,0x0,8
tick,0x7ffd597cfb34,44910090,0,0x0,8
tick,0x7ffd597cfb34,44925693,0,0x0,8
tick,0x7ffd597cfb34,44941482,0,0x0,8
tick,0x7ffd597cfb34,44957480,0,0x0,8
tick,0x7ffd597cfb34,44972623,0,0x0,8
tick,0x7ffd597cfb34,44988379,0,0x0,8
tick,0x7ffd597cfb34,45003894,0,0x0,8
tick,0x7ffd597cfb34,45019313,0,0x0,8
tick,0x7ffd597cfb34,45034700,0,0x0,8
tick,0x7ffd597cfb34,45050473,0,0x0,8
tick,0x7ffd597cfb34,45065818,0,0x0,8
tick,0x7ffd597cfb34,45081206,0,0x0,8
tick,0x7ffd597cfb34,45096658,0,0x0,8
tick,0x7ffd597cfb34,45112340,0,0x0,8
tick,0x7ffd597cfb34,45127831,0,0x0,8
tick,0x7ffd597cfb34,45143962,0,0x0,8
tick,0x7ffd597cfb34,45159644,0,0x0,8
tick,0x7ffd597cfb34,45174900,0,0x0,8
tick,0x7ffd597cfb34,45190283,0,0x0,8
tick,0x7ffd597cfb34,45205914,0,0x0,8
tick,0x7ffd597cfb34,45221796,0,0x0,8
tick,0x7ffd597cfb34,45237229,0,0x0,8
tick,0x7ffd597cfb34,45252766,0,0x0,8
tick,0x7ffd597cfb34,45268770,0,0x0,8
tick,0x7ffd597cfb34,45284587,0,0x0,8
tick,0x7ffd597cfb34,45300565,0,0x0,8
tick,0x7ffd597cfb34,45316058,0,0x0,8
tick,0x7ffd597cfb34,45331890,0,0x0,8
tick,0x7ffd597cfb34,45347536,0,0x0,8
tick,0x7ffd597cfb34,45363379,0,0x0,8
tick,0x7ffd597cfb34,45378701,0,0x0,8
tick,0x7ffd597cfb34,45394735,0,0x0,8
tick,0x7ffd597cfb34,45410594,0,0x0,8
tick,0x7ffd597cfb34,45427026,0,0x0,8
tick,0x7ffd597cfb34,45442899,0,0x0,8
tick,0x7ffd597cfb34,45458554,0,0x0,8
tick,0x7ffd597cfb34,45473822,0,0x0,8
tick,0x7ffd597cfb34,45489472,0,0x0,8
tick,0x7ffd597cfb34,45505090,0,0x0,8
tick,0x7ffd597cfb34,45520602,0,0x0,8
tick,0x7ffd597cfb34,45536055,0,0x0,8
tick,0x7ffd597cfb34,45551612,0,0x0,8
tick,0x7ffd597cfb34,45567794,0,0x0,8
tick,0x7ffd597cfb34,45583818,0,0x0,8
tick,0x7ffd597cfb34,45599542,0,0x0,8
tick,0x7ffd597cfb34,45615450,0,0x0,8
tick,0x7ffd597cfb34,45630574,0,0x0,8
tick,0x7ffd597cfb34,45646599,0,0x0,8
tick,0x7ffd597cfb34,45662184,0,0x0,8
tick,0x7ffd597cfb34,45677805,0,0x0,8
tick,0x7ffd597cfb34,45693135,0,0x0,8
tick,0x7ffd597cfb34,45708519,0,0x0,8
tick,0x7ffd597cfb34,45724812,0,0x0,8
tick,0x7ffd597cfb34,45740783,0,0x0,8
tick,0x7ffd597cfb34,45756417,0,0x0,8
tick,0x7ffd597cfb34,45771935,0,0x0,8
tick,0x7ffd597cfb34,45788332,0,0x0,8
tick,0x7ffd597cfb34,45803505,0,0x0,8
tick,0x7ffd597cfb34,45819148,0,0x0,8
tick,0x7ffd597cfb34,45834216,0,0x0,8
tick,0x7ffd597cfb34,45850720,0,0x0,8
tick,0x7ffd597cfb34,45866198,0,0x0,8
tick,0x7ffd597cfb34,45882325,0,0x0,8
tick,0x7ffd597cfb34,45898194,0,0x0,8
tick,0x7ffd597cfb34,45913799,0,0x0,8
tick,0x7ffd597cfb34,45929676,0,0x0,8
tick,0x7ffd597cfb34,45945040,0,0x0,8
tick,0x7ffd597cfb34,45961207,0,0x0,8
tick,0x7ffd597cfb34,45976646,0,0x0,8
tick,0x7ffd597cfb34,45992508,0,0x0,8
tick,0x7ffd597cfb34,46008503,0,0x0,8
tick,0x7ffd597cfb34,46024345,0,0x0,8
tick,0x7ffd597cfb34,46040258,0,0x0,8
tick,0x7ffd597cfb34,46056192,0,0x0,8
tick,0x7ffd597cfb34,46072177,0,0x0,8
tick,0x7ffd597cfb34,46087337,0,0x0,8
tick,0x7ffd597cfb34,46102892,0,0x0,8
tick,0x7ffd597cfb34,46118677,0,0x0,8
tick,0x7ffd597cfb34,46134521,0,0x0,8
tick,0x7ffd597cfb34,46150738,0,0x0,8
tick,0x7ffd597cfb34,46166393,0,0x0,8
tick,0x7ffd597cfb34,46182253,0,0x0,8
tick,0x7ffd597cfb34,46197989,0,0x0,8
tick,0x7ffd597cfb34,46213920,0,0x0,8
tick,0x7ffd597cfb34,46230233,0,0x0,8
tick,0x7ffd597cfb34,46245430,0,0x0,8
tick,0x7ffd597cfb34,46260686,0,0x0,8
tick,0x7ffd597cfb34,46276651,0,0x0,8
tick,0x7ffd597cfb34,46292690,0,0x0,8
tick,0x7ffd597cfb34,46308670,0,0x0,8
tick,0x7ffd597cfb34,46324674,0,0x0,8
tick,0x7ffd597cfb34,46340677,0,0x0,8
tick,0x7ffd597cfb34,46356672,0,0x0,8
tick,0x7ffd597cfb34,46372685,0,0x0,8
tick,0x7ffd597cfb34,46388674,0,0x0,8
tick,0x7ffd597cfb34,46404669,0,0x0,8
tick,0x7ffd597cfb34,46420683,0,0x0,8
tick,0x7ffd597cfb34,46436669,0,0x0,8
tick,0x7ffd597cfb34,46452692,0,0x0,8
tick,0x7ffd597cfb34,46468650,0,0x0,8
tick,0x7ffd597cfb34,46484710,0,0x0,8
tick,0x7ffd597cfb34,46500686,0,0x0,8
tick,0x7ffd597cfb34,46516686,0,0x0,8
tick,0x7ffd597cfb34,46532702,0,0x0,8
tick,0x7ffd597cfb34,46548697,0,0x0,8
tick,0x7ffd597cfb34,46564719,0,0x0,8
tick,0x7ffd597cfb34,46580709,0,0x0,8
tick,0x7ffd597cfb34,46596706,0,0x0,8
tick,0x7ffd597cfb34,46612688,0,0x0,8
tick,0x7ffd597cfb34,46628693,0,0x0,8
tick,0x7ffd597cfb34,46643897,0,0x0,8
tick,0x7ffd597cfb34,46659839,0,0x0,8
tick,0x7ffd597cfb34,46674802,0,0x0,8
tick,0x7ffd597cfb34,46689927,0,0x0,8
tick,0x7ffd597cfb34,46705432,0,0x0,8
tick,0x7ffd597cfb34,46721246,0,0x0,8
tick,0x7ffd597cfb34,46736579,0,0x0,8
tick,0x7ffd597cfb34,46751963,0,0x0,8
tick,0x7ffd597cfb34,46767957,0,0x0,8
tick,0x7ffd597cfb34,46783865,0,0x0,8
tick,0x7ffd597cfb34,46798659,0,0x0,8
tick,0x7ffd597cfb34,46813975,0,0x0,8
tick,0x7ffd597cfb34,46829302,0,0x0,8
tick,0x7ffd597cfb34,46845333,0,0x0,8
tick,0x7ffd597cfb34,46860468,0,0x0,8
tick,0x7ffd597cfb34,46876599,0,0x0,8
tick,0x7ffd597cfb34,46892565,0,0x0,8
tick,0x7ffd597cfb34,46908557,0,0x0,8
tick,0x7ffd597cfb34,46923715,0,0x0,8
tick,0x7ffd597cfb34,46938913,0,0x0,8
tick,0x7ffd597cfb34,46954729,0,0x0,8
tick,0x7ffd597cfb34,46970713,0,0x0,8
tick,0x7ffd597cfb34,46986047,0,0x0,8
tick,0x7ffd597cfb34,47001721,0,0x0,8
tick,0x7ffd597cfb34,47016869,0,0x0,8
tick,0x7ffd597cfb34,47032742,0,0x0,8
tick,0x7ffd597cfb34,47048182,0,0x0,8
tick,0x7ffd597cfb34,47064206,0,0x0,8
tick,0x7ffd597cfb34,47080198,0,0x0,8
tick,0x7ffd597cfb34,47095434,0,0x0,8
tick,0x7ffd597cfb34,47110861,0,0x0,8
tick,0x7ffd597cfb34,47126006,0,0x0,8
tick,0x7ffd597cfb34,47141443,0,0x0,8
tick,0x7ffd597cfb34,47157004,0,0x0,8
tick,0x7ffd597cfb34,47173052,0,0x0,8
tick,0x7ffd597cfb34,47189114,0,0x0,8
tick,0x7ffd597cfb34,47204419,0,0x0,8
tick,0x7ffd597cfb34,47219902,0,0x0,8
tick,0x7ffd597cfb34,47235772,0,0x0,8
tick,0x7ffd597cfb34,47251857,0,0x0,8
tick,0x7ffd597cfb34,47266934,0,0x0,8
tick,0x7ffd597cfb34,47281735,0,0x0,8
tick,0x7ffd597cfb34,47297776,0,0x0,8
tick,0x7ffd597cfb34,47313803,0,0x0,8
tick,0x7ffd597cfb34,47329151,0,0x0,8
tick,0x7ffd597cfb34,47344387,0,0x0,8
tick,0x7ffd597cfb34,47359715,0,0x0,8
tick,0x7ffd597cfb34,47375329,0,0x0,8
tick,0x7ffd597cfb34,47390838,0,0x0,8
tick,0x7ffd597cfb34,47406425,0,0x0,8
tick,0x7ffd597cfb34,47422048,0,0x0,8
tick,0x7ffd597cfb34,47436931,0,0x0,8
tick,0x7ffd597cfb34,47452051,0,0x0,8
tick,0x7ffd597cfb34,47467388,0,0x0,8
tick,0x7ffd597cfb34,47482928,0,0x0,8
tick,0x7ffd597cfb34,47498509,0,0x0,8
tick,0x7ffd597cfb34,47514740,0,0x0,8
tick,0x7ffd597cfb34,47530756,0,0x0,8
tick,0x7ffd597cfb34,47546418,0,0x0,8
tick,0x7ffd597cfb34,47562149,0,0x0,8
tick,0x7ffd597cfb34,47577729,0,0x0,8
tick,0x7ffd597cfb34,47594078,0,0x0,8
tick,0x7ffd597cfb34,47609154,0,0x0,8
tick,0x7ffd597cfb34,47624754,0,0x0,8
tick,0x7ffd597cfb34,47640680,0,0x0,8
tick,0x7ffd597cfb34,47656460,0,0x0,8
tick,0x7ffd597cfb34,47671473,0,0x0,8
tick,0x7ffd597cfb34,47686612,0,0x0,8
tick,0x7ffd597cfb34,47702295,0,0x0,8
tick,0x7ffd597cfb34,47718498,0,0x0,8
tick,0x7ffd597cfb34,47734146,0,0x0,8
tick,0x7ffd597cfb34,47749527,0,0x0,8
tick,0x7ffd597cfb34,47765180,0,0x0,8
tick,0x7ffd597cfb34,47780974,0,0x0,8
tick,0x7ffd597cfb34,47796203,0,0x0,8
tick,0x7ffd597cfb34,47811642,0,0x0,8
tick,0x7ffd597cfb34,47827357,0,0x0,8
tick,0x7ffd597cfb34,47843185,0,0x0,8
tick,0x7ffd597cfb34,47858484,0,0x0,8
tick,0x7ffd597cfb34,47875003,0,0x0,8
tick,0x7ffd597cfb34,47890792,0,0x0,8
tick,0x7ffd597cfb34,47906229,0,0x0,8
tick,0x7ffd597cfb34,47921458,0,0x0,8
tick,0x7ffd597cfb34,47937268,0,0x0,8
tick,0x7ffd597cfb34,47952520,0,0x0,8
tick,0x7ffd597cfb34,47967808,0,0x0,8
tick,0x7ffd597cfb34,47983800,0,0x0,8
tick,0x7ffd597cfb34,47999524,0,0x0,8
tick,0x7ffd597cfb34,48015973,0,0x0,8
tick,0x7ffd597cfb34,48032318,0,0x0,8
tick,0x7ffd597cfb34,48047874,0,0x0,8
tick,0x7ffd597cfb34,48063256,0,0x0,8
tick,0x7ffd597cfb34,48078882,0,0x0,8
tick,0x7ffd597cfb34,48094404,0,0x0,8
tick,0x7ffd597cfb34,48110445,0,0x0,8
tick,0x7ffd597cfb34,48125443,0,0x0,8
tick,0x7ffd597cfb34,48140210,0,0x0,8
tick,0x7ffd597cfb34,48155837,0,0x0,8
tick,0x7ffd597cfb34,48170856,0,0x0,8
tick,0x7ffd597cfb34,48186529,0,0x0,8
tick,0x7ffd597cfb34,48201838,0,0x0,8
tick,0x7ffd597cfb34,48217267,0,0x0,8
tick,0x7ffd597cfb34,48232561,0,0x0,8
tick,0x7ffd597cfb34,48248387,0,0x0,8
tick,0x7ffd597cfb34,48264194,0,0x0,8
tick,0x7ffd597cfb34,48280161,0,0x0,8
tick,0x7ffd597cfb34,48296198,0,0x0,8
tick,0x7ffd597cfb34,48312194,0,0x0,8
tick,0x7ffd597cfb34,48327535,0,0x0,8
tick,0x7ffd597cfb34,48344116,0,0x0,8
tick,0x7ffd597cfb34,48359761,0,0x0,8
tick,0x7ffd597cfb34,48374830,0,0x0,8
tick,0x7ffd597cfb34,48390573,0,0x0,8
tick,0x7ffd597cfb34,48406723,0,0x0,8
tick,0x7ffd597cfb34,48422235,0,0x0,8
tick,0x7ffd597cfb34,48438155,0,0x0,8
tick,0x7ffd597cfb34,48453992,0,0x0,8
tick,0x7ffd597cfb34,48470058,0,0x0,8
tick,0x7ffd597cfb34,48485824,0,0x0,8
tick,0x7ffd597cfb34,48501984,0,0x0,8
tick,0x7ffd597cfb34,48518079,0,0x0,8
tick,0x7ffd597cfb34,48533880,0,0x0,8
tick,0x7ffd597cfb34,48549859,0,0x0,8
tick,0x7ffd597cfb34,48565502,0,0x0,8
tick,0x7ffd597cfb34,48581194,0,0x0,8
tick,0x7ffd597cfb34,48596951,0,0x0,8
tick,0x7ffd597cfb34,48612249,0,0x0,8
tick,0x7ffd597cfb34,48628583,0,0x0,8
tick,0x7ffd597cfb34,48644000,0,0x0,8
tick,0x7ffd597cfb34,48660240,0,0x0,8
tick,0x7ffd597cfb34,48675864,0,0x0,8
tick,0x7ffd597cfb34,48691710,0,0x0,8
tick,0x7ffd597cfb34,48707460,0,0x0,8
tick,0x7ffd597cfb34,48723180,0,0x0,8
tick,0x7ffd597cfb34,48738333,0,0x0,8
tick,0x7ffd597cfb34,48754065,0,0x0,8
tick,0x7ffd597cfb34,48769220,0,0x0,8
tick,0x7ffd597cfb34,48785051,0,0x0,8
tick,0x7ffd597cfb34,48800239,0,0x0,8
tick,0x7ffd597cfb34,48815281,0,0x0,8
tick,0x7ffd597cfb34,48830864,0,0x0,8
tick,0x7ffd597cfb34,48845869,0,0x0,8
tick,0x7ffd597cfb34,48862351,0,0x0,8
tick,0x7ffd597cfb34,48877872,0,0x0,8
tick,0x7ffd597cfb34,48892647,0,0x0,8
tick,0x7ffd597cfb34,48907856,0,0x0,8
tick,0x7ffd597cfb34,48923333,0,0x0,8
tick,0x7ffd597cfb34,48939498,0,0x0,8
tick,0x7ffd597cfb34,48954554,0,0x0,8
tick,0x7ffd597cfb34,48969592,0,0x0,8
tick,0x7ffd597cfb34,48984874,0,0x0,8
tick,0x7ffd597cfb34,48999921,0,0x0,8
tick,0x7ffd597cfb34,49015174,0,0x0,8
tick,0x7ffd597cfb34,49031508,0,0x0,8
tick,0x7ffd597cfb34,49046966,0,0x0,8
tick,0x7ffd597cfb34,49062854,0,0x0,8
tick,0x7ffd597cfb34,49078965,0,0x0,8
tick,0x7ffd597cfb34,49094894,0,0x0,8
tick,0x7ffd597cfb34,49110460,0,0x0,8
tick,0x7ffd597cfb34,49126017,0,0x0,8
tick,0x7ffd597cfb34,49141914,0,0x0,8
tick,0x7ffd597cfb34,49157190,0,0x0,8
tick,0x7ffd597cfb34,49172514,0,0x0,8
tick,0x7ffd597cfb34,49188510,0,0x0,8
tick,0x7ffd597cfb34,49203878,0,0x0,8
tick,0x7ffd597cfb34,49219574,0,0x0,8
tick,0x7ffd597cfb34,49234893,0,0x0,8
tick,0x7ffd597cfb34,49250664,0,0x0,8
tick,0x7ffd597cfb34,49265904,0,0x0,8
tick,0x7ffd597cfb34,49282597,0,0x0,8
tick,0x7ffd597cfb34,49297596,0,0x0,8
tick,0x7ffd597cfb34,49312890,0,0x0,8
tick,0x7ffd597cfb34,49329432,0,0x0,8
tick,0x7ffd597cfb34,49344984,0,0x0,8
tick,0x7ffd597cfb34,49360577,0,0x0,8
tick,0x7ffd597cfb34,49375479,0,0x0,8
tick,0x7ffd597cfb34,49391152,0,0x0,8
tick,0x7ffd597cfb34,49406989,0,0x0,8
tick,0x7ffd597cfb34,49422935,0,0x0,8
tick,0x7ffd597cfb34,49439031,0,0x0,8
tick,0x7ffd597cfb34,49454968,0,0x0,8
tick,0x7ffd597cfb34,49470059,0,0x0,8
tick,0x7ffd597cfb34,49485482,0,0x0,8
tick,0x7ffd597cfb34,49501338,0,0x0,8
tick,0x7ffd597cfb34,49516218,0,0x0,8
tick,0x7ffd597cfb34,49531740,0,0x0,8
tick,0x7ffd597cfb34,49547047,0,0x0,8
tick,0x7ffd597cfb34,49563156,0,0x0,8
tick,0x7ffd597cfb34,49579031,0,0x0,8
tick,0x7ffd597cfb34,49595017,0,0x0,8
tick,0x7ffd597cfb34,49611124,0,0x0,8
tick,0x7ffd597cfb34,49627048,0,0x0,8
tick,0x7ffd597cfb34,49643067,0,0x0,8
tick,0x7ffd597cfb34,49659052,0,0x0,8
tick,0x7ffd597cfb34,49675066,0,0x0,8
tick,0x7ffd597cfb34,49691050,0,0x0,8
tick,0x7ffd597cfb34,49707088,0,0x0,8
tick,0x7ffd597cfb34,49722310,0,0x0,8
tick,0x7ffd597cfb34,49737715,0,0x0,8
tick,0x7ffd597cfb34,49752710,0,0x0,8
tick,0x7ffd597cfb34,49767898,0,0x0,8
tick,0x7ffd597cfb34,49783055,0,0x0,8
tick,0x7ffd597cfb34,49798589,0,0x0,8
tick,0x7ffd597cfb34,49814311,0,0x0,8
tick,0x7ffd597cfb34,49829310,0,0x0,8
tick,0x7ffd597cfb34,49844650,0,0x0,8
tick,0x7ffd597cfb34,49860421,0,0x0,8
tick,0x7ffd597cfb34,49875345,0,0x0,8
tick,0x7ffd597cfb34,49891459,0,0x0,8
tick,0x7ffd597cfb34,49906361,0,0x0,8
tick,0x7ffd597cfb34,49921421,0,0x0,8
tick,0x7ffd597cfb34,49936583,0,0x0,8
tick,0x7ffd597cfb34,49952590,0,0x0,8
tick,0x7ffd597cfb34,49967578,0,0x0,8
tick,0x7ffd597cfb34,49983502,0,0x0,8
tick,0x7ffd597cfb34,49999101,0,0x0,8
tick,0x7ffd597cfb34,50015112,0,0x0,8
tick,0x7ffd597cfb34,50029702,0,0x0,8
tick,0x7ffd597cfb34,50045268,0,0x0,8
tick,0x7ffd597cfb34,50060957,0,0x0,8
tick,0x7ffd597cfb34,50076243,0,0x0,8
tick,0x7ffd597cfb34,50091082,0,0x0,8
tick,0x7ffd597cfb34,50106988,0,0x0,8
tick,0x7ffd597cfb34,50122974,0,0x0,8
tick,0x7ffd597cfb34,50138923,0,0x0,8
tick,0x7ffd597cfb34,50154779,0,0x0,8
tick,0x7ffd597cfb34,50170619,0,0x0,8
tick,0x7ffd597cfb34,50186611,0,0x0,8
tick,0x7ffd597cfb34,50201786,0,0x0,8
tick,0x7ffd597cfb34,50217507,0,0x0,8
tick,0x7ffd597cfb34,50232620,0,0x0,8
tick,0x7ffd597cfb34,50248097,0,0x0,8
tick,0x7ffd597cfb34,50263131,0,0x0,8
tick,0x7ffd597cfb34,50278593,0,0x0,8
tick,0x7ffd597cfb34,50293981,0,0x0,8
tick,0x7ffd597cfb34,50310273,0,0x0,8
tick,0x7ffd597cfb34,50326142,0,0x0,8
tick,0x7ffd597cfb34,50341576,0,0x0,8
tick,0x7ffd597cfb34,50357391,0,0x0,8
tick,0x7ffd597cfb34,50373342,0,0x0,8
tick,0x7ffd597cfb34,50388705,0,0x0,8
tick,0x7ffd597cfb34,50404713,0,0x0,8
tick,0x7ffd597cfb34,50420309,0,0x0,8
tick,0x7ffd597cfb34,50436044,0,0x0,8
tick,0x7ffd597cfb34,50451793,0,0x0,8
tick,0x7ffd597cfb34,50467655,0,0x0,8
tick,0x7ffd597cfb34,50482625,0,0x0,8
tick,0x7ffd597cfb34,50498941,0,0x0,8
tick,0x7ffd597cfb34,50514669,0,0x0,8
tick,0x7ffd597cfb34,50530336,0,0x0,8
tick,0x7ffd597cfb34,50545998,0,0x0,8
tick,0x7ffd597cfb34,50561460,0,0x0,8
tick,0x7ffd597cfb34,50577185,0,0x0,8
tick,0x7ffd597cfb34,50592628,0,0x0,8
tick,0x7ffd597cfb34,50608503,0,0x0,8
tick,0x7ffd597cfb34,50624741,0,0x0,8
tick,0x7ffd597cfb34,50640955,0,0x0,8
tick,0x7ffd597cfb34,50657251,0,0x0,8
tick,0x7ffd597cfb34,50672751,0,0x0,8
tick,0x7ffd597cfb34,50688482,0,0x0,8
tick,0x7ffd597cfb34,50704438,0,0x0,8
tick,0x7ffd597cfb34,50719984,0,0x0,8
tick,0x7ffd597cfb34,50735639,0,0x0,8
tick,0x7ffd597cfb34,50751059,0,0x0,8
tick,0x7ffd597cfb34,50766809,0,0x0,8
tick,0x7ffd597cfb34,50782747,0,0x0,8
tick,0x7ffd597cfb34,50797787,0,0x0,8
tick,0x7ffd597cfb34,50813690,0,0x0,8
tick,0x7ffd597cfb34,50829508,0,0x0,8
tick,0x7ffd597cfb34,50845455,0,0x0,8
tick,0x7ffd597cfb34,50861336,0,0x0,8
tick,0x7ffd597cfb34,50876613,0,0x0,8
tick,0x7ffd597cfb34,50892619,0,0x0,8
tick,0x7ffd597cfb34,50908624,0,0x0,8
tick,0x7ffd597cfb34,50924395,0,0x0,8
tick,0x7ffd597cfb34,50939998,0,0x0,8
tick,0x7ffd597cfb34,50955439,0,0x0,8
tick,0x7ffd597cfb34,50970399,0,0x0,8
tick,0x7ffd597cfb34,50985989,0,0x0,8
tick,0x7ffd597cfb34,51001646,0,0x0,8
tick,0x7ffd597cfb34,51017017,0,0x0,8
tick,0x7ffd597cfb34,51033001,0,0x0,8
tick,0x7ffd597cfb34,51049019,0,0x0,8
tick,0x7ffd597cfb34,51065006,0,0x0,8
tick,0x7ffd597cfb34,51081011,0,0x0,8
tick,0x7ffd597cfb34,51097019,0,0x0,8
tick,0x7ffd597cfb34,51113012,0,0x0,8
tick,0x7ffd597cfb34,51129000,0,0x0,8
tick,0x7ffd597cfb34,51145030,0,0x0,8
tick,0x7ffd597cfb34,51161002,0,0x0,8
tick,0x7ffd597cfb34,51177017,0,0x0,8
tick,0x7ffd597cfb34,51193018,0,0x0,8
tick,0x7ffd597cfb34,51209032,0,0x0,8
tick,0x7ffd597cfb34,51225018,0,0x0,8
tick,0x7ffd597cfb34,51241044,0,0x0,8
tick,0x7ffd597cfb34,51257004,0,0x0,8
tick,0x7ffd597cfb34,51273734,0,0x0,8
tick,0x7ffd597cfb34,51289666,0,0x0,8
tick,0x7ffd597cfb34,51305584,0,0x0,8
tick,0x7ffd597cfb34,51320645,0,0x0,8
tick,0x7ffd597cfb34,51336006,0,0x0,8
tick,0x7ffd597cfb34,51352677,0,0x0,8
tick,0x7ffd597cfb34,51367957,0,0x0,8
tick,0x7ffd597cfb34,51383678,0,0x0,8
tick,0x7ffd597cfb34,51399701,0,0x0,8
tick,0x7ffd597cfb34,51414540,0,0x0,8
tick,0x7ffd597cfb34,51430564,0,0x0,8
tick,0x7ffd597cfb34,51446087,0,0x0,8
tick,0x7ffd597cfb34,51462142,0,0x0,8
tick,0x7ffd597cfb34,51477670,0,0x0,8
tick,0x7ffd597cfb34,51493457,0,0x0,8
tick,0x7ffd597cfb34,51508762,0,0x0,8
tick,0x7ffd597cfb34,51524732,0,0x0,8
tick,0x7ffd597cfb34,51540672,0,0x0,8
tick,0x7ffd597cfb34,51556046,0,0x0,8
tick,0x7ffd597cfb34,51572076,0,0x0,8
tick,0x7ffd597cfb34,51588103,0,0x0,8
tick,0x7ffd597cfb34,51603690,0,0x0,8
tick,0x7ffd597cfb34,51619462,0,0x0,8
tick,0x7ffd597cfb34,51635522,0,0x0,8
tick,0x7ffd597cfb34,51650907,0,0x0,8
tick,0x7ffd597cfb34,51666699,0,0x0,8
tick,0x7ffd597cfb34,51681881,0,0x0,8
tick,0x7ffd597cfb34,51697915,0,0x0,8
tick,0x7ffd597cfb34,51713516,0,0x0,8
tick,0x7ffd597cfb34,51729362,0,0x0,8
tick,0x7ffd597cfb34,51745031,0,0x0,8
tick,0x7ffd597cfb34,51760625,0,0x0,8
tick,0x7ffd597cfb34,51776649,0,0x0,8
tick,0x7ffd597cfb34,51792642,0,0x0,8
tick,0x7ffd597cfb34,51807977,0,0x0,8
tick,0x7ffd597cfb34,51823797,0,0x0,8
tick,0x7ffd597cfb34,51839620,0,0x0,8
tick,0x7ffd597cfb34,51855595,0,0x0,8
tick,0x7ffd597cfb34,51871640,0,0x0,8
tick,0x7ffd597cfb34,51887623,0,0x0,8
tick,0x7ffd597cfb34,51903636,0,0x0,8
tick,0x7ffd597cfb34,51919028,0,0x0,8
tick,0x7ffd597cfb34,51935134,0,0x0,8
tick,0x7ffd597cfb34,51951038,0,0x0,8
tick,0x7ffd597cfb34,51967056,0,0x0,8
tick,0x7ffd597cfb34,51982402,0,0x0,8
tick,0x7ffd597cfb34,51997542,0,0x0,8
tick,0x7ffd597cfb34,52013548,0,0x0,8
tick,0x7ffd597cfb34,52029545,0,0x0,8
tick,0x7ffd597cfb34,52045546,0,0x0,8
tick,0x7ffd597cfb34,52061050,0,0x0,8
tick,0x7ffd597cfb34,52077045,0,0x0,8
tick,0x7ffd597cfb34,52092989,0,0x0,8
tick,0x7ffd597cfb34,52109044,0,0x0,8
tick,0x7ffd597cfb34,52125041,0,0x0,8
tick,0x7ffd597cfb34,52141066,0,0x0,8
tick,0x7ffd597cfb34,52157050,0,0x0,8
tick,0x7ffd597cfb34,52172812,0,0x0,8
tick,0x7ffd597cfb34,52188053,0,0x0,8
tick,0x7ffd597cfb34,52203541,0,0x0,8
tick,0x7ffd597cfb34,52219084,0,0x0,8
tick,0x7ffd597cfb34,52235075,0,0x0,8
tick,0x7ffd597cfb34,52251058,0,0x0,8
tick,0x7ffd597cfb34,52267056,0,0x0,8
tick,0x7ffd597cfb34,52282709,0,0x0,8
tick,0x7ffd597cfb34,52298062,0,0x0,8
tick,0x7ffd597cfb34,52314058,0,0x0,8
tick,0x7ffd597cfb34,52330054,0,0x0,8
tick,0x7ffd597cfb34,52345534,0,0x0,8
tick,0x7ffd597cfb34,52361087,0,0x0,8
tick,0x7ffd597cfb34,52376237,0,0x0,8
tick,0x7ffd597cfb34,52391620,0,0x0,8
tick,0x7ffd597cfb34,52406901,0,0x0,8
tick,0x7ffd597cfb34,52422619,0,0x0,8
tick,0x7ffd597cfb34,52437610,0,0x0,8
tick,0x7ffd597cfb34,52453559,0,0x0,8
tick,0x7ffd597cfb34,52469288,0,0x0,8
tick,0x7ffd597cfb34,52484659,0,0x0,8
tick,0x7ffd597cfb34,52500567,0,0x0,8
tick,0x7ffd597cfb34,52516553,0,0x0,8
tick,0x7ffd597cfb34,52532623,0,0x0,8
tick,0x7ffd597cfb34,52548642,0,0x0,8
tick,0x7ffd597cfb34,52563706,0,0x0,8
tick,0x7ffd597cfb34,52578585,0,0x0,8
tick,0x7ffd597cfb34,52594701,0,0x0,8
tick,0x7ffd597cfb34,52610572,0,0x0,8
tick,0x7ffd597cfb34,52626545,0,0x0,8
tick,0x7ffd597cfb34,52642559,0,0x0,8
tick,0x7ffd597cfb34,52658585,0,0x0,8
tick,0x7ffd597cfb34,52674573,0,0x0,8
tick,0x7ffd597cfb34,52690582,0,0x0,8
tick,0x7ffd597cfb34,52706567,0,0x0,8
tick,0x7ffd597cfb34,52722261,0,0x0,8
tick,0x7ffd597cfb34,52738260,0,0x0,8
tick,0x7ffd597cfb34,52754284,0,0x0,8
tick,0x7ffd597cfb34,52769657,0,0x0,8
tick,0x7ffd597cfb34,52785560,0,0x0,8
tick,0x7ffd597cfb34,52801578,0,0x0,8
tick,0x7ffd597cfb34,52817581,0,0x0,8
tick,0x7ffd597cfb34,52833562,0,0x0,8
tick,0x7ffd597cfb34,52849595,0,0x0,8
tick,0x7ffd597cfb34,52865579,0,0x0,8
tick,0x7ffd597cfb34,52881598,0,0x0,8
tick,0x7ffd597cfb34,52896575,0,0x0,8
tick,0x7ffd597cfb34,52911593,0,0x0,8
tick,0x7ffd597cfb34,52927609,0,0x0,8
tick,0x7ffd597cfb34,52943616,0,0x0,8
tick,0x7ffd597cfb34,52959593,0,0x0,8
tick,0x7ffd597cfb34,52975711,0,0x0,8
tick,0x7ffd597cfb34,52990570,0,0x0,8
tick,0x7ffd597cfb34,53006426,0,0x0,8
tick,0x7ffd597cfb34,53021553,0,0x0,8
tick,0x7ffd597cfb34,53037555,0,0x0,8
tick,0x7ffd597cfb34,53053381,0,0x0,8
tick,0x7ffd597cfb34,53069388,0,0x0,8
tick,0x7ffd597cfb34,53084417,0,0x0,8
tick,0x7ffd597cfb34,53099397,0,0x0,8
tick,0x7ffd597cfb34,53114402,0,0x0,8
tick,0x7ffd597cfb34,53130434,0,0x0,8
tick,0x7ffd597cfb34,53145421,0,0x0,8
tick,0x7ffd597cfb34,53160751,0,0x0,8
tick,0x7ffd597cfb34,53176448,0,0x0,8
tick,0x7ffd597cfb34,53191545,0,0x0,8
tick,0x7ffd597cfb34,53207142,0,0x0,8
tick,0x7ffd597cfb34,53223165,0,0x0,8
tick,0x7ffd597cfb34,53239145,0,0x0,8
tick,0x7ffd597cfb34,53255159,0,0x0,8
tick,0x7ffd597cfb34,53270559,0,0x0,8
tick,0x7ffd597cfb34,53286162,0,0x0,8
tick,0x7ffd597cfb34,53301562,0,0x0,8
tick,0x7ffd597cfb34,53317173,0,0x0,8
tick,0x7ffd597cfb34,53333224,0,0x0,8
tick,0x7ffd597cfb34,53349290,0,0x0,8
tick,0x7ffd597cfb34,53364572,0,0x0,8
tick,0x7ffd597cfb34,53380154,0,0x0,8
tick,0x7ffd597cfb34,53396151,0,0x0,8
tick,0x7ffd597cfb34,53411271,0,0x0,8
tick,0x7ffd597cfb34,53427403,0,0x0,8
tick,0x7ffd597cfb34,53442551,0,0x0,8
tick,0x7ffd597cfb34,53458665,0,0x0,8
tick,0x7ffd597cfb34,53474607,0,0x0,8
tick,0x7ffd597cfb34,53490651,0,0x0,8
tick,0x7ffd597cfb34,53506656,0,0x0,8
tick,0x7ffd597cfb34,53522533,0,0x0,8
tick,0x7ffd597cfb34,53538561,0,0x0,8
tick,0x7ffd597cfb34,53554614,0,0x0,8
tick,0x7ffd597cfb34,53571093,0,0x0,8
tick,0x7ffd597cfb34,53586663,0,0x0,8
tick,0x7ffd597cfb34,53602584,0,0x0,8
tick,0x7ffd597cfb34,53618177,0,0x0,8
tick,0x7ffd597cfb34,53633514,0,0x0,8
tick,0x7ffd597cfb34,53649157,0,0x0,8
tick,0x7ffd597cfb34,53664181,0,0x0,8
tick,0x7ffd597cfb34,53680162,0,0x0,8
tick,0x7ffd597cfb34,53695199,0,0x0,8
tick,0x7ffd597cfb34,53711193,0,0x0,8
tick,0x7ffd597cfb34,53727181,0,0x0,8
tick,0x7ffd597cfb34,53742500,0,0x0,8
tick,0x7ffd597cfb34,53758178,0,0x0,8
tick,0x7ffd597cfb34,53773540,0,0x0,8
tick,0x7ffd597cfb34,53789171,0,0x0,8
tick,0x7ffd597cfb34,53804650,0,0x0,8
tick,0x7ffd597cfb34,53819558,0,0x0,8
tick,0x7ffd597cfb34,53835555,0,0x0,8
tick,0x7ffd597cfb34,53851548,0,0x0,8
tick,0x7ffd597cfb34,53867270,0,0x0,8
tick,0x7ffd597cfb34,53883001,0,0x0,8
tick,0x7ffd597cfb34,53898989,0,0x0,8
tick,0x7ffd597cfb34,53914003,0,0x0,8
tick,0x7ffd597cfb34,53929016,0,0x0,8
tick,0x7ffd597cfb34,53945021,0,0x0,8
tick,0x7ffd597cfb34,53960004,0,0x0,8
tick,0x7ffd597cfb34,53975037,0,0x0,8
tick,0x7ffd597cfb34,53991014,0,0x0,8
tick,0x7ffd597cfb34,54007040,0,0x0,8
tick,0x7ffd597cfb34,54023024,0,0x0,8
tick,0x7ffd597cfb34,54039041,0,0x0,8
tick,0x7ffd597cfb34,54055045,0,0x0,8
tick,0x7ffd597cfb34,54071038,0,0x0,8
tick,0x7ffd597cfb34,54087034,0,0x0,8
tick,0x7ffd597cfb34,54102071,0,0x0,8
tick,0x7ffd597cfb34,54117052,0,0x0,8
tick,0x7ffd597cfb34,54132589,0,0x0,8
tick,0x7ffd597cfb34,54148544,0,0x0,8
tick,0x7ffd597cfb34,54163679,0,0x0,8
tick,0x7ffd597cfb34,54178985,0,0x0,8
tick,0x7ffd597cfb34,54194599,0,0x0,8
tick,0x7ffd597cfb34,54210687,0,0x0,8
tick,0x7ffd597cfb34,54225868,0,0x0,8
tick,0x7ffd597cfb34,54241605,0,0x0,8
tick,0x7ffd597cfb34,54257644,0,0x0,8
tick,0x7ffd597cfb34,54273512,0,0x0,8
tick,0x7ffd597cfb34,54288570,0,0x0,8
tick,0x7ffd597cfb34,54303540,0,0x0,8
tick,0x7ffd597cfb34,54319545,0,0x0,8
tick,0x7ffd597cfb34,54335242,0,0x0,8
tick,0x7ffd597cfb34,54350662,0,0x0,8
tick,0x7ffd597cfb34,54366048,0,0x0,8
tick,0x7ffd597cfb34,54381237,0,0x0,8
tick,0x7ffd597cfb34,54396368,0,0x0,8
tick,0x7ffd597cfb34,54412222,0,0x0,8
tick,0x7ffd597cfb34,54427253,0,0x0,8
tick,0x7ffd597cfb34,54443250,0,0x0,8
tick,0x7ffd597cfb34,54459227,0,0x0,8
tick,0x7ffd597cfb34,54475220,0,0x0,8
tick,0x7ffd597cfb34,54491227,0,0x0,8
tick,0x7ffd597cfb34,54507265,0,0x0,8
tick,0x7ffd597cfb34,54522252,0,0x0,8
tick,0x7ffd597cfb34,54537244,0,0x0,8
tick,0x7ffd597cfb34,54553234,0,0x0,8
tick,0x7ffd597cfb34,54569255,0,0x0,8
tick,0x7ffd597cfb34,54585242,0,0x0,8
tick,0x7ffd597cfb34,54601262,0,0x0,8
tick,0x7ffd597cfb34,54617254,0,0x0,8
tick,0x7ffd597cfb34,54633248,0,0x0,8
tick,0x7ffd597cfb34,54649260,0,0x0,8
tick,0x7ffd597cfb34,54665282,0,0x0,8
tick,0x7ffd597cfb34,54680979,0,0x0,8
tick,0x7ffd597cfb34,54696409,0,0x0,8
tick,0x7ffd597cfb34,54711432,0,0x0,8
tick,0x7ffd597cfb34,54727279,0,0x0,8
tick,0x7ffd597cfb34,54743228,0,0x0,8
tick,0x7ffd597cfb34,54759236,0,0x0,8
tick,0x7ffd597cfb34,54775152,0,0x0,8
tick,0x7ffd597cfb34,54790326,0,0x0,8
tick,0x7ffd597cfb34,54806244,0,0x0,8
tick,0x7ffd597cfb34,54821639,0,0x0,8
tick,0x7ffd597cfb34,54837818,0,0x0,8
tick,0x7ffd597cfb34,54853836,0,0x0,8
tick,0x7ffd597cfb34,54869791,0,0x0,8
tick,0x7ffd597cfb34,54886597,0,0x0,8
tick,0x7ffd597cfb34,54902788,0,0x0,8
tick,0x7ffd597cfb34,54918912,0,0x0,8
tick,0x7ffd597cfb34,54934285,0,0x0,8
tick,0x7ffd597cfb34,54949445,0,0x0,8
tick,0x7ffd597cfb34,54965193,0,0x0,8
tick,0x7ffd597cfb34,54980192,0,0x0,8
tick,0x7ffd597cfb34,54995439,0,0x0,8
tick,0x7ffd597cfb34,55011272,0,0x0,8
tick,0x7ffd597cfb34,55026558,0,0x0,8
tick,0x7ffd597cfb34,55042577,0,0x0,8
tick,0x7ffd597cfb34,55057033,0,0x0,8
tick,0x7ffd597cfb34,55072250,0,0x0,8
tick,0x7ffd597cfb34,55088232,0,0x0,8
tick,0x7ffd597cfb34,55103981,0,0x0,8
tick,0x7ffd597cfb34,55119277,0,0x0,8
tick,0x7ffd597cfb34,55134171,0,0x0,8
tick,0x7ffd597cfb34,55150209,0,0x0,8
tick,0x7ffd597cfb34,55166128,0,0x0,8
tick,0x7ffd597cfb34,55181708,0,0x0,8
tick,0x7ffd597cfb34,55197453,0,0x0,8
tick,0x7ffd597cfb34,55212801,0,0x0,8
tick,0x7ffd597cfb34,55228471,0,0x0,8
tick,0x7ffd597cfb34,55243831,0,0x0,8
tick,0x7ffd597cfb34,55259676,0,0x0,8
tick,0x7ffd597cfb34,55275655,0,0x0,8
tick,0x7ffd597cfb34,55291483,0,0x0,8
tick,0x7ffd597cfb34,55306690,0,0x0,8
tick,0x7ffd597cfb34,55321669,0,0x0,8
tick,0x7ffd597cfb34,55337680,0,0x0,8
tick,0x7ffd597cfb34,55353322,0,0x0,8
tick,0x7ffd597cfb34,55368911,0,0x0,8
tick,0x7ffd597cfb34,55384343,0,0x0,8
tick,0x7ffd597cfb34,55399314,0,0x0,8
tick,0x7ffd597cfb34,55414436,0,0x0,8
tick,0x7ffd597cfb34,55430365,0,0x0,8
tick,0x7ffd597cfb34,55445848,0,0x0,8
tick,0x7ffd597cfb34,55462038,0,0x0,8
tick,0x7ffd597cfb34,55477864,0,0x0,8
tick,0x7ffd597cfb34,55493295,0,0x0,8
tick,0x7ffd597cfb34,55508820,0,0x0,8
tick,0x7ffd597cfb34,55524186,0,0x0,8
tick,0x7ffd597cfb34,55540259,0,0x0,8
tick,0x7ffd597cfb34,55556342,0,0x0,8
tick,0x7ffd597cfb34,55571704,0,0x0,8
tick,0x7ffd597cfb34,55587729,0,0x0,8
tick,0x7ffd597cfb34,55603462,0,0x0,8
tick,0x7ffd597cfb34,55619286,0,0x0,8
tick,0x7ffd597cfb34,55633754,0,0x0,8
tick,0x7ffd597cfb34,55649058,0,0x0,8
tick,0x7ffd597cfb34,55665051,0,0x0,8
tick,0x7ffd597cfb34,55680113,0,0x0,8
tick,0x7ffd597cfb34,55696131,0,0x0,8
tick,0x7ffd597cfb34,55711025,0,0x0,8
tick,0x7ffd597cfb34,55727133,0,0x0,8
tick,0x7ffd597cfb34,55742236,0,0x0,8
tick,0x7ffd597cfb34,55757049,0,0x0,8
tick,0x7ffd597cfb34,55773096,0,0x0,8
tick,0x7ffd597cfb34,55788658,0,0x0,8
tick,0x7ffd597cfb34,55804619,0,0x0,8
tick,0x7ffd597cfb34,55820467,0,0x0,8
tick,0x7ffd597cfb34,55836605,0,0x0,8
tick,0x7ffd597cfb34,55853046,0,0x0,8
tick,0x7ffd597cfb34,55868515,0,0x0,8
tick,0x7ffd597cfb34,55883619,0,0x0,8
tick,0x7ffd597cfb34,55899061,0,0x0,8
tick,0x7ffd597cfb34,55914335,0,0x0,8
tick,0x7ffd597cfb34,55929355,0,0x0,8
tick,0x7ffd597cfb34,55945313,0,0x0,8
tick,0x7ffd597cfb34,55960503,0,0x0,8
tick,0x7ffd597cfb34,55976335,0,0x0,8
tick,0x7ffd597cfb34,55991319,0,0x0,8
tick,0x7ffd597cfb34,56006487,0,0x0,8
tick,0x7ffd597cfb34,56022511,0,0x0,8
tick,0x7ffd597cfb34,56037550,0,0x0,8
tick,0x7ffd597cfb34,56053530,0,0x0,8
tick,0x7ffd597cfb34,56069367,0,0x0,8
tick,0x7ffd597cfb34,56085419,0,0x0,8
tick,0x7ffd597cfb34,56100742,0,0x0,8
tick,0x7ffd597cfb34,56116344,0,0x0,8
tick,0x7ffd597cfb34,56132320,0,0x0,8
tick,0x7ffd597cfb34,56147330,0,0x0,8
tick,0x7ffd597cfb34,56162493,0,0x0,8
tick,0x7ffd597cfb34,56178357,0,0x0,8
tick,0x7ffd597cfb34,56194460,0,0x0,8
tick,0x7ffd597cfb34,56209342,0,0x0,8
tick,0x7ffd597cfb34,56224325,0,0x0,8
tick,0x7ffd597cfb34,56239519,0,0x0,8
tick,0x7ffd597cfb34,56255668,0,0x0,8
tick,0x7ffd597cfb34,56270711,0,0x0,8
tick,0x7ffd597cfb34,56286352,0,0x0,8
tick,0x7ffd597cfb34,56301572,0,0x0,8
tick,0x7ffd597cfb34,56317362,0,0x0,8
tick,0x7ffd597cfb34,56333333,0,0x0,8
tick,0x7ffd597cfb34,56349326,0,0x0,8
tick,0x7ffd597cfb34,56365357,0,0x0,8
tick,0x7ffd597cfb34,56381364,0,0x0,8
tick,0x7ffd597cfb34,56397346,0,0x0,8
tick,0x7ffd597cfb34,56413379,0,0x0,8
tick,0x7ffd597cfb34,56429368,0,0x0,8
tick,0x7ffd597cfb34,56445368,0,0x0,8
tick,0x7ffd597cfb34,56461394,0,0x0,8
tick,0x7ffd597cfb34,56477391,0,0x0,8
tick,0x7ffd597cfb34,56492540,0,0x0,8
tick,0x7ffd597cfb34,56507376,0,0x0,8
tick,0x7ffd597cfb34,56523386,0,0x0,8
tick,0x7ffd597cfb34,56538582,0,0x0,8
tick,0x7ffd597cfb34,56553821,0,0x0,8
tick,0x7ffd597cfb34,56568566,0,0x0,8
tick,0x7ffd597cfb34,56584243,0,0x0,8
tick,0x7ffd597cfb34,56600365,0,0x0,8
tick,0x7ffd597cfb34,56616364,0,0x0,8
tick,0x7ffd597cfb34,56632383,0,0x0,8
tick,0x7ffd597cfb34,56648370,0,0x0,8
tick,0x7ffd597cfb34,56664384,0,0x0,8
tick,0x7ffd597cfb34,56679585,0,0x0,8
tick,0x7ffd597cfb34,56695526,0,0x0,8
tick,0x7ffd597cfb34,56710722,0,0x0,8
tick,0x7ffd597cfb34,56725855,0,0x0,8
tick,0x7ffd597cfb34,56741238,0,0x0,8
tick,0x7ffd597cfb34,56756623,0,0x0,8
tick,0x7ffd597cfb34,56771753,0,0x0,8
tick,0x7ffd597cfb34,56787403,0,0x0,8
tick,0x7ffd597cfb34,56802487,0,0x0,8
tick,0x7ffd597cfb34,56818398,0,0x0,8
tick,0x7ffd597cfb34,56834392,0,0x0,8
tick,0x7ffd597cfb34,56850382,0,0x0,8
tick,0x7ffd597cfb34,56865399,0,0x0,8
tick,0x7ffd597cfb34,56880410,0,0x0,8
tick,0x7ffd597cfb34,56895645,0,0x0,8
tick,0x7ffd597cfb34,56911393,0,0x0,8
tick,0x7ffd597cfb34,56926932,0,0x0,8
tick,0x7ffd597cfb34,56942514,0,0x0,8
tick,0x7ffd597cfb34,56958383,0,0x0,8
tick,0x7ffd597cfb34,56973740,0,0x0,8
tick,0x7ffd597cfb34,56988896,0,0x0,8
tick,0x7ffd597cfb34,57004779,0,0x0,8
tick,0x7ffd597cfb34,57020760,0,0x0,8
tick,0x7ffd597cfb34,57036403,0,0x0,8
tick,0x7ffd597cfb34,57052408,0,0x0,8
tick,0x7ffd597cfb34,57068429,0,0x0,8
tick,0x7ffd597cfb34,57084404,0,0x0,8
tick,0x7ffd597cfb34,57099420,0,0x0,8
tick,0x7ffd597cfb34,57114432,0,0x0,8
tick,0x7ffd597cfb34,57130410,0,0x0,8
tick,0x7ffd597cfb34,57146411,0,0x0,8
tick,0x7ffd597cfb34,57162460,0,0x0,8
tick,0x7ffd597cfb34,57177828,0,0x0,8
tick,0x7ffd597cfb34,57193476,0,0x0,8
tick,0x7ffd597cfb34,57209082,0,0x0,8
tick,0x7ffd597cfb34,57224876,0,0x0,8
tick,0x7ffd597cfb34,57240336,0,0x0,8
tick,0x7ffd597cfb34,57255065,0,0x0,8
tick,0x7ffd597cfb34,57270585,0,0x0,8
tick,0x7ffd597cfb34,57285416,0,0x0,8
tick,0x7ffd597cfb34,57300552,0,0x0,8
tick,0x7ffd597cfb34,57316607,0,0x0,8
tick,0x7ffd597cfb34,57332632,0,0x0,8
tick,0x7ffd597cfb34,57347851,0,0x0,8
tick,0x7ffd597cfb34,57363243,0,0x0,8
tick,0x7ffd597cfb34,57379195,0,0x0,8
tick,0x7ffd597cfb34,57394421,0,0x0,8
tick,0x7ffd597cfb34,57409633,0,0x0,8
tick,0x7ffd597cfb34,57425695,0,0x0,8
tick,0x7ffd597cfb34,57441388,0,0x0,8
tick,0x7ffd597cfb34,57456702,0,0x0,8
tick,0x7ffd597cfb34,57471704,0,0x0,8
tick,0x7ffd597cfb34,57487418,0,0x0,8
tick,0x7ffd597cfb34,57502868,0,0x0,8
tick,0x7ffd597cfb34,57518189,0,0x0,8
tick,0x7ffd597cfb34,57533458,0,0x0,8
tick,0x7ffd597cfb34,57548601,0,0x0,8
tick,0x7ffd597cfb34,57563734,0,0x0,8
tick,0x7ffd597cfb34,57579627,0,0x0,8
tick,0x7ffd597cfb34,57594913,0,0x0,8
tick,0x7ffd597cfb34,57610052,0,0x0,8
tick,0x7ffd597cfb34,57625506,0,0x0,8
tick,0x7ffd597cfb34,57641985,0,0x0,8
tick,0x7ffd597cfb34,57657485,0,0x0,8
tick,0x7ffd597cfb34,57673377,0,0x0,8
tick,0x7ffd597cfb34,57688496,0,0x0,8
tick,0x7ffd597cfb34,57704430,0,0x0,8
tick,0x7ffd597cfb34,57720056,0,0x0,8
tick,0x7ffd597cfb34,57736578,0,0x0,8
tick,0x7ffd597cfb34,57752552,0,0x0,8
tick,0x7ffd597cfb34,57768621,0,0x0,8
tick,0x7ffd597cfb34,57784218,0,0x0,8
tick,0x7ffd597cfb34,57800079,0,0x0,8
tick,0x7ffd597cfb34,57816178,0,0x0,8
tick,0x7ffd597cfb34,57832159,0,0x0,8
tick,0x7ffd597cfb34,57847128,0,0x0,8
tick,0x7ffd597cfb34,57862747,0,0x0,8
tick,0x7ffd597cfb34,57878554,0,0x0,8
tick,0x7ffd597cfb34,57894021,0,0x0,8
tick,0x7ffd597cfb34,57909474,0,0x0,8
tick,0x7ffd597cfb34,57924703,0,0x0,8
tick,0x7ffd597cfb34,57940711,0,0x0,8
tick,0x7ffd597cfb34,57956453,0,0x0,8
tick,0x7ffd597cfb34,57972458,0,0x0,8
tick,0x7ffd597cfb34,57988461,0,0x0,8
tick,0x7ffd597cfb34,58004459,0,0x0,8
tick,0x7ffd597cfb34,58020501,0,0x0,8
tick,0x7ffd597cfb34,58035489,0,0x0,8
tick,0x7ffd597cfb34,58050466,0,0x0,8
tick,0x7ffd597cfb34,58066467,0,0x0,8
tick,0x7ffd597cfb34,58081474,0,0x0,8
tick,0x7ffd597cfb34,58097345,0,0x0,8
tick,0x7ffd597cfb34,58113483,0,0x0,8
tick,0x7ffd597cfb34,58129501,0,0x0,8
tick,0x7ffd597cfb34,58145520,0,0x0,8
tick,0x7ffd597cfb34,58161522,0,0x0,8
tick,0x7ffd597cfb34,58176655,0,0x0,8
tick,0x7ffd597cfb34,58192689,0,0x0,8
tick,0x7ffd597cfb34,58207511,0,0x0,8
tick,0x7ffd597cfb34,58223519,0,0x0,8
tick,0x7ffd597cfb34,58239526,0,0x0,8
tick,0x7ffd597cfb34,58255533,0,0x0,8
tick,0x7ffd597cfb34,58271496,0,0x0,8
tick,0x7ffd597cfb34,58287527,0,0x0,8
tick,0x7ffd597cfb34,58302957,0,0x0,8
tick,0x7ffd597cfb34,58318287,0,0x0,8
tick,0x7ffd597cfb34,58333353,0,0x0,8
tick,0x7ffd597cfb34,58348504,0,0x0,8
tick,0x7ffd597cfb34,58363652,0,0x0,8
tick,0x7ffd597cfb34,58379505,0,0x0,8
tick,0x7ffd597cfb34,58394515,0,0x0,8
tick,0x7ffd597cfb34,58410512,0,0x0,8
tick,0x7ffd597cfb34,58425676,0,0x0,8
tick,0x7ffd597cfb34,58441338,0,0x0,8
tick,0x7ffd597cfb34,58457242,0,0x0,8
tick,0x7ffd597cfb34,58472727,0,0x0,8
tick,0x7ffd597cfb34,58489242,0,0x0,8
tick,0x7ffd597cfb34,58504825,0,0x0,8
tick,0x7ffd597cfb34,58519809,0,0x0,8
tick,0x7ffd597cfb34,58535510,0,0x0,8
tick,0x7ffd597cfb34,58551503,0,0x0,8
tick,0x7ffd597cfb34,58567516,0,0x0,8
tick,0x7ffd597cfb34,58583413,0,0x0,8
tick,0x7ffd597cfb34,58599087,0,0x0,8
tick,0x7ffd597cfb34,58615161,0,0x0,8
tick,0x7ffd597cfb34,58630303,0,0x0,8
tick,0x7ffd597cfb34,58645546,0,0x0,8
tick,0x7ffd597cfb34,58660749,0,0x0,8
tick,0x7ffd597cfb34,58676733,0,0x0,8
tick,0x7ffd597cfb34,58692032,0,0x0,8
tick,0x7ffd597cfb34,58706827,0,0x0,8
tick,0x7ffd597cfb34,58721872,0,0x0,8
tick,0x7ffd597cfb34,58737884,0,0x0,8
tick,0x7ffd597cfb34,58752845,0,0x0,8
tick,0x7ffd597cfb34,58768443,0,0x0,8
tick,0x7ffd597cfb34,58784347,0,0x0,8
tick,0x7ffd597cfb34,58800446,0,0x0,8
tick,0x7ffd597cfb34,58816504,0,0x0,8
tick,0x7ffd597cfb34,58832517,0,0x0,8
tick,0x7ffd597cfb34,58847843,0,0x0,8
tick,0x7ffd597cfb34,58863562,0,0x0,8
tick,0x7ffd597cfb34,58878806,0,0x0,8
tick,0x7ffd597cfb34,58894560,0,0x0,8
tick,0x7ffd597cfb34,58909529,0,0x0,8
tick,0x7ffd597cfb34,58925620,0,0x0,8
tick,0x7ffd597cfb34,58940556,0,0x0,8
tick,0x7ffd597cfb34,58956533,0,0x0,8
tick,0x7ffd597cfb34,58972533,0,0x0,8
tick,0x7ffd597cfb34,58988510,0,0x0,8
tick,0x7ffd597cfb34,59003750,0,0x0,8
tick,0x7ffd597cfb34,59018527,0,0x0,8
tick,0x7ffd597cfb34,59035003,0,0x0,8
tick,0x7ffd597cfb34,59051078,0,0x0,8
tick,0x7ffd597cfb34,59066864,0,0x0,8
tick,0x7ffd597cfb34,59082085,0,0x0,8
tick,0x7ffd597cfb34,59097539,0,0x0,8
tick,0x7ffd597cfb34,59113664,0,0x0,8
tick,0x7ffd597cfb34,59128760,0,0x0,8
tick,0x7ffd597cfb34,59143755,0,0x0,8
tick,0x7ffd597cfb34,59159045,0,0x0,8
tick,0x7ffd597cfb34,59174299,0,0x0,8
tick,0x7ffd597cfb34,59189567,0,0x0,8
tick,0x7ffd597cfb34,59204956,0,0x0,8
tick,0x7ffd597cfb34,59220060,0,0x0,8
tick,0x7ffd597cfb34,59235540,0,0x0,8
tick,0x7ffd597cfb34,59251564,0,0x0,8
tick,0x7ffd597cfb34,59267539,0,0x0,8
tick,0x7ffd597cfb34,59283553,0,0x0,8
tick,0x7ffd597cfb34,59298714,0,0x0,8
tick,0x7ffd597cfb34,59313623,0,0x0,8
tick,0x7ffd597cfb34,59328717,0,0x0,8
tick,0x7ffd597cfb34,59344122,0,0x0,8
tick,0x7ffd597cfb34,59359589,0,0x0,8
tick,0x7ffd597cfb34,59374847,0,0x0,8
tick,0x7ffd597cfb34,59390538,0,0x0,8
tick,0x7ffd597cfb34,59405969,0,0x0,8
tick,0x7ffd597cfb34,59421277,0,0x0,8
tick,0x7ffd597cfb34,59437136,0,0x0,8
tick,0x7ffd597cfb34,59453248,0,0x0,8
tick,0x7ffd597cfb34,59468904,0,0x0,8
tick,0x7ffd597cfb34,59484880,0,0x0,8
tick,0x7ffd597cfb34,59500156,0,0x0,8
tick,0x7ffd597cfb34,59515390,0,0x0,8
tick,0x7ffd597cfb34,59530949,0,0x0,8
tick,0x7ffd597cfb34,59546276,0,0x0,8
tick,0x7ffd597cfb34,59561905,0,0x0,8
tick,0x7ffd597cfb34,59577329,0,0x0,8
tick,0x7ffd597cfb34,59592758,0,0x0,8
tick,0x7ffd597cfb34,59607743,0,0x0,8
tick,0x7ffd597cfb34,59622878,0,0x0,8
tick,0x7ffd597cfb34,59638598,0,0x0,8
tick,0x7ffd597cfb34,59654037,0,0x0,8
tick,0x7ffd597cfb34,59669738,0,0x0,8
tick,0x7ffd597cfb34,59685733,0,0x0,8
tick,0x7ffd597cfb34,59701744,0,0x0,8
tick,0x7ffd597cfb34,59717780,0,0x0,8
tick,0x7ffd597cfb34,59732715,0,0x0,8
tick,0x7ffd597cfb34,59748273,0,0x0,8
tick,0x7ffd597cfb34,59764006,0,0x0,8
tick,0x7ffd597cfb34,59779484,0,0x0,8
tick,0x7ffd597cfb34,59795089,0,0x0,8
tick,0x7ffd597cfb34,59809959,0,0x0,8
tick,0x7ffd597cfb34,59825815,0,0x0,8
tick,0x7ffd597cfb34,59841842,0,0x0,8
tick,0x7ffd597cfb34,59857408,0,0x0,8
tick,0x7ffd597cfb34,59872556,0,0x0,8
tick,0x7ffd597cfb34,59888264,0,0x0,8
tick,0x7ffd597cfb34,59903860,0,0x0,8
tick,0x7ffd597cfb34,59918894,0,0x0,8
tick,0x7ffd597cfb34,59934451,0,0x0,8
tick,0x7ffd597cfb34,59950010,0,0x0,8
tick,0x7ffd597cfb34,59965838,0,0x0,8
tick,0x7ffd597cfb34,59981439,0,0x0,8
tick,0x7ffd597cfb34,59997204,0,0x0,8
tick,0x7ffd597cfb34,60012530,0,0x0,8
tick,0x7ffd597cfb34,60027840,0,0x0,8
tick,0x7ffd597cfb34,60044015,0,0x0,8
tick,0x7ffd597cfb34,60060253,0,0x0,8
tick,0x7ffd597cfb34,60075516,0,0x0,8
tick,0x7ffd597cfb34,60090742,0,0x0,8
tick,0x7ffd597cfb34,60106467,0,0x0,8
tick,0x7ffd597cfb34,60121472,0,0x0,8
tick,0x7ffd597cfb34,60137584,0,0x0,8
tick,0x7ffd597cfb34,60153489,0,0x0,8
tick,0x7ffd597cfb34,60168831,0,0x0,8
tick,0x7ffd597cfb34,60184469,0,0x0,8
tick,0x7ffd597cfb34,60200113,0,0x0,8
tick,0x7ffd597cfb34,60216244,0,0x0,8
tick,0x7ffd597cfb34,60232078,0,0x0,8
tick,0x7ffd597cfb34,60247765,0,0x0,8
tick,0x7ffd597cfb34,60262949,0,0x0,8
tick,0x7ffd597cfb34,60278896,0,0x0,8
tick,0x7ffd597cfb34,60293862,0,0x0,8
tick,0x7ffd597cfb34,60308809,0,0x0,8
tick,0x7ffd597cfb34,60324148,0,0x0,8
tick,0x7ffd597cfb34,60339321,0,0x0,8
tick,0x7ffd597cfb34,60355410,0,0x0,8
tick,0x7ffd597cfb34,60371336,0,0x0,8
tick,0x7ffd597cfb34,60387468,0,0x0,8
tick,0x7ffd597cfb34,60403373,0,0x0,8
tick,0x7ffd597cfb34,60418940,0,0x0,8
tick,0x7ffd597cfb34,60434439,0,0x0,8
tick,0x7ffd597cfb34,60450633,0,0x0,8
tick,0x7ffd597cfb34,60466400,0,0x0,8
tick,0x7ffd597cfb34,60481867,0,0x0,8
tick,0x7ffd597cfb34,60497355,0,0x0,8
tick,0x7ffd597cfb34,60512947,0,0x0,8
tick,0x7ffd597cfb34,60527857,0,0x0,8
tick,0x7ffd597cfb34,60543700,0,0x0,8
tick,0x7ffd597cfb34,60558936,0,0x0,8
tick,0x7ffd597cfb34,60573786,0,0x0,8
tick,0x7ffd597cfb34,60589931,0,0x0,8
tick,0x7ffd597cfb34,60605389,0,0x0,8
tick,0x7ffd597cfb34,60620606,0,0x0,8
tick,0x7ffd597cfb34,60636105,0,0x0,8
tick,0x7ffd597cfb34,60651481,0,0x0,8
tick,0x7ffd597cfb34,60667464,0,0x0,8
tick,0x7ffd597cfb34,60682609,0,0x0,8
tick,0x7ffd597cfb34,60697593,0,0x0,8
tick,0x7ffd597cfb34,60713102,0,0x0,8
tick,0x7ffd597cfb34,60728746,0,0x0,8
tick,0x7ffd597cfb34,60744229,0,0x0,8
tick,0x7ffd597cfb34,60760394,0,0x0,8
tick,0x7ffd597cfb34,60775874,0,0x0,8
tick,0x7ffd597cfb34,60792414,0,0x0,8
tick,0x7ffd597cfb34,60808617,0,0x0,8
tick,0x7ffd597cfb34,60823900,0,0x0,8
tick,0x7ffd597cfb34,60839913,0,0x0,8
tick,0x7ffd597cfb34,60855259,0,0x0,8
tick,0x7ffd597cfb34,60871460,0,0x0,8
tick,0x7ffd597cfb34,60887896,0,0x0,8
tick,0x7ffd597cfb34,60903692,0,0x0,8
tick,0x7ffd597cfb34,60919753,0,0x0,8
tick,0x7ffd597cfb34,60935492,0,0x0,8
tick,0x7ffd597cfb34,60952095,0,0x0,8
tick,0x7ffd597cfb34,60968136,0,0x0,8
tick,0x7ffd597cfb34,60984547,0,0x0,8
tick,0x7ffd597cfb34,61000413,0,0x0,8
tick,0x7ffd597cfb34,61015495,0,0x0,8
tick,0x7ffd597cfb34,61030647,0,0x0,8
tick,0x7ffd597cfb34,61046410,0,0x0,8
tick,0x7ffd597cfb34,61062243,0,0x0,8
tick,0x7ffd597cfb34,61077740,0,0x0,8
tick,0x7ffd597cfb34,61094085,0,0x0,8
tick,0x7ffd597cfb34,61109811,0,0x0,8
tick,0x7ffd597cfb34,61126119,0,0x0,8
tick,0x7ffd597cfb34,61141544,0,0x0,8
tick,0x7ffd597cfb34,61157904,0,0x0,8
tick,0x7ffd597cfb34,61173280,0,0x0,8
tick,0x7ffd597cfb34,61189619,0,0x0,8
tick,0x7ffd597cfb34,61204909,0,0x0,8
tick,0x7ffd597cfb34,61220409,0,0x0,8
tick,0x7ffd597cfb34,61235811,0,0x0,8
tick,0x7ffd597cfb34,61251801,0,0x0,8
tick,0x7ffd597cfb34,61267777,0,0x0,8
tick,0x7ffd597cfb34,61283332,0,0x0,8
tick,0x7ffd597cfb34,61299592,0,0x0,8
tick,0x7ffd597cfb34,61315221,0,0x0,8
tick,0x7ffd597cfb34,61331002,0,0x0,8
tick,0x7ffd597cfb34,61346498,0,0x0,8
tick,0x7ffd597cfb34,61361623,0,0x0,8
tick,0x7ffd597cfb34,61377526,0,0x0,8
tick,0x7ffd597cfb34,61393325,0,0x0,8
tick,0x7ffd597cfb34,61409322,0,0x0,8
tick,0x7ffd597cfb34,61425313,0,0x0,8
tick,0x7ffd597cfb34,61441147,0,0x0,8
tick,0x7ffd597cfb34,61457248,0,0x0,8
tick,0x7ffd597cfb34,61473206,0,0x0,8
tick,0x7ffd597cfb34,61489197,0,0x0,8
tick,0x7ffd597cfb34,61505277,0,0x0,8
tick,0x7ffd597cfb34,61521291,0,0x0,8
tick,0x7ffd597cfb34,61537262,0,0x0,8
tick,0x7ffd597cfb34,61553189,0,0x0,8
tick,0x7ffd597cfb34,61569275,0,0x0,8
tick,0x7ffd597cfb34,61585186,0,0x0,8
tick,0x7ffd597cfb34,61601335,0,0x0,8
tick,0x7ffd597cfb34,61617186,0,0x0,8
tick,0x7ffd597cfb34,61633197,0,0x0,8
tick,0x7ffd597cfb34,61648197,0,0x0,8
tick,0x7ffd597cfb34,61663412,0,0x0,8
tick,0x7ffd597cfb34,61679314,0,0x0,8
tick,0x7ffd597cfb34,61695333,0,0x0,8
tick,0x7ffd597cfb34,61710321,0,0x0,8
tick,0x7ffd597cfb34,61726238,0,0x0,8
tick,0x7ffd597cfb34,61741305,0,0x0,8
tick,0x7ffd597cfb34,61757248,0,0x0,8
tick,0x7ffd597cfb34,61773329,0,0x0,8
tick,0x7ffd597cfb34,61789343,0,0x0,8
tick,0x7ffd597cfb34,61805236,0,0x0,8
tick,0x7ffd597cfb34,61821226,0,0x0,8
tick,0x7ffd597cfb34,61837225,0,0x0,8
tick,0x7ffd597cfb34,61853268,0,0x0,8
tick,0x7ffd597cfb34,61869244,0,0x0,8
tick,0x7ffd597cfb34,61885275,0,0x0,8
tick,0x7ffd597cfb34,61901234,0,0x0,8
tick,0x7ffd597cfb34,61917247,0,0x0,8
tick,0x7ffd597cfb34,61933258,0,0x0,8
tick,0x7ffd597cfb34,61949269,0,0x0,8
tick,0x7ffd597cfb34,61965300,0,0x0,8
tick,0x7ffd597cfb34,61981297,0,0x0,8
tick,0x7ffd597cfb34,61997379,0,0x0,8
tick,0x7ffd597cfb34,62013270,0,0x0,8
tick,0x7ffd597cfb34,62029405,0,0x0,8
tick,0x7ffd597cfb34,62044383,0,0x0,8
tick,0x7ffd597cfb34,62060440,0,0x0,8
tick,0x7ffd597cfb34,62075401,0,0x0,8
tick,0x7ffd597cfb34,62091289,0,0x0,8
tick,0x7ffd597cfb34,62107419,0,0x0,8
tick,0x7ffd597cfb34,62122303,0,0x0,8
tick,0x7ffd597cfb34,62138405,0,0x0,8
tick,0x7ffd597cfb34,62153312,0,0x0,8
tick,0x7ffd597cfb34,62169308,0,0x0,8
tick,0x7ffd597cfb34,62185303,0,0x0,8
tick,0x7ffd597cfb34,62201317,0,0x0,8
tick,0x7ffd597cfb34,62217337,0,0x0,8
tick,0x7ffd597cfb34,62233335,0,0x0,8
tick,0x7ffd597cfb34,62249519,0,0x0,8
tick,0x7ffd597cfb34,62265530,0,0x0,8
tick,0x7ffd597cfb34,62281558,0,0x0,8
tick,0x7ffd597cfb34,62297451,0,0x0,8
tick,0x7ffd597cfb34,62313430,0,0x0,8
tick,0x7ffd597cfb34,62329463,0,0x0,8
tick,0x7ffd597cfb34,62344441,0,0x0,8
tick,0x7ffd597cfb34,62359448,0,0x0,8
tick,0x7ffd597cfb34,62375435,0,0x0,8
tick,0x7ffd597cfb34,62391468,0,0x0,8
tick,0x7ffd597cfb34,62407468,0,0x0,8
tick,0x7ffd597cfb34,62423449,0,0x0,8
tick,0x7ffd597cfb34,62439349,0,0x0,8
tick,0x7ffd597cfb34,62455405,0,0x0,8
tick,0x7ffd597cfb34,62471393,0,0x0,8
tick,0x7ffd597cfb34,62487384,0,0x0,8
tick,0x7ffd597cfb34,62503468,0,0x0,8
tick,0x7ffd597cfb34,62519489,0,0x0,8
tick,0x7ffd597cfb34,62535482,0,0x0,8
tick,0x7ffd597cfb34,62551411,0,0x0,8
tick,0x7ffd597cfb34,62567473,0,0x0,8
tick,0x7ffd597cfb34,62583410,0,0x0,8
tick,0x7ffd597cfb34,62599495,0,0x0,8
tick,0x7ffd597cfb34,62615406,0,0x0,8
tick,0x7ffd597cfb34,62631525,0,0x0,8
tick,0x7ffd597cfb34,62647497,0,0x0,8
tick,0x7ffd597cfb34,62663490,0,0x0,8
tick,0x7ffd597cfb34,62679527,0,0x0,8
tick,0x7ffd597cfb34,62695476,0,0x0,8
tick,0x7ffd597cfb34,62711427,0,0x0,8
tick,0x7ffd597cfb34,62727585,0,0x0,8
tick,0x7ffd597cfb34,62743516,0,0x0,8
tick,0x7ffd597cfb34,62759528,0,0x0,8
tick,0x7ffd597cfb34,62775550,0,0x0,8
tick,0x7ffd597cfb34,62791445,0,0x0,8
tick,0x7ffd597cfb34,62807493,0,0x0,8
tick,0x7ffd597cfb34,62823573,0,0x0,8
tick,0x7ffd597cfb34,62839448,0,0x0,8
tick,0x7ffd597cfb34,62855532,0,0x0,8
tick,0x7ffd597cfb34,62871511,0,0x0,8
tick,0x7ffd597cfb34,62887567,0,0x0,8
tick,0x7ffd597cfb34,62903582,0,0x0,8
tick,0x7ffd597cfb34,62919566,0,0x0,8
tick,0x7ffd597cfb34,62935508,0,0x0,8
tick,0x7ffd597cfb34,62951596,0,0x0,8
tick,0x7ffd597cfb34,62967570,0,0x0,8
tick,0x7ffd597cfb34,62983543,0,0x0,8
tick,0x7ffd597cfb34,62999545,0,0x0,8
tick,0x7ffd597cfb34,63015479,0,0x0,8
tick,0x7ffd597cfb34,63031517,0,0x0,8
tick,0x7ffd597cfb34,63047503,0,0x0,8
tick,0x7ffd597cfb34,63063536,0,0x0,8
tick,0x7ffd597cfb34,63079590,0,0x0,8
tick,0x7ffd597cfb34,63095601,0,0x0,8
tick,0x7ffd597cfb34,63111606,0,0x0,8
tick,0x7ffd597cfb34,63127559,0,0x0,8
tick,0x7ffd597cfb34,63143629,0,0x0,8
tick,0x7ffd597cfb34,63159568,0,0x0,8
tick,0x7ffd597cfb34,63175633,0,0x0,8
tick,0x7ffd597cfb34,63191579,0,0x0,8
tick,0x7ffd597cfb34,63207639,0,0x0,8
tick,0x7ffd597cfb34,63223581,0,0x0,8
tick,0x7ffd597cfb34,63239642,0,0x0,8
tick,0x7ffd597cfb34,63255653,0,0x0,8
tick,0x7ffd597cfb34,63271681,0,0x0,8
tick,0x7ffd597cfb34,63287556,0,0x0,8
tick,0x7ffd597cfb34,63303555,0,0x0,8
tick,0x7ffd597cfb34,63319581,0,0x0,8
tick,0x7ffd597cfb34,63335722,0,0x0,8
tick,0x7ffd597cfb34,63351625,0,0x0,8
tick,0x7ffd597cfb34,63366674,0,0x0,8
tick,0x7ffd597cfb34,63382699,0,0x0,8
tick,0x7ffd597cfb34,63397603,0,0x0,8
tick,0x7ffd597cfb34,63413702,0,0x0,8
tick,0x7ffd597cfb34,63429731,0,0x0,8
tick,0x7ffd597cfb34,63445586,0,0x0,8
tick,0x7ffd597cfb34,63461613,0,0x0,8
tick,0x7ffd597cfb34,63477809,0,0x0,8
tick,0x7ffd597cfb34,63492851,0,0x0,8
tick,0x7ffd597cfb34,63508849,0,0x0,8
tick,0x7ffd597cfb34,63524989,0,0x0,8
tick,0x7ffd597cfb34,63540860,0,0x0,8
tick,0x7ffd597cfb34,63556916,0,0x0,8
tick,0x7ffd597cfb34,63573007,0,0x0,8
tick,0x7ffd597cfb34,63588892,0,0x0,8
tick,0x7ffd597cfb34,63604817,0,0x0,8
tick,0x7ffd597cfb34,63620719,0,0x0,8
tick,0x7ffd597cfb34,63636273,0,0x0,8
tick,0x7ffd597cfb34,63652579,0,0x0,8
tick,0x7ffd597cfb34,63668406,0,0x0,8
tick,0x7ffd597cfb34,63684213,0,0x0,8
tick,0x7ffd597cfb34,63699885,0,0x0,8
tick,0x7ffd597cfb34,63715625,0,0x0,8
tick,0x7ffd597cfb34,63731474,0,0x0,8
tick,0x7ffd597cfb34,63747270,0,0x0,8
tick,0x7ffd597cfb34,63763538,0,0x0,8
tick,0x7ffd597cfb34,63779176,0,0x0,8
tick,0x7ffd597cfb34,63794750,0,0x0,8
tick,0x7ffd597cfb34,63810355,0,0x0,8
tick,0x7ffd597cfb34,63825605,0,0x0,8
tick,0x7ffd597cfb34,63840523,0,0x0,8
tick,0x7ffd597cfb34,63856218,0,0x0,8
tick,0x7ffd597cfb34,63872415,0,0x0,8
tick,0x7ffd597cfb34,63888206,0,0x0,8
tick,0x7ffd597cfb34,63903886,0,0x0,8
tick,0x7ffd597cfb34,63919587,0,0x0,8
tick,0x7ffd597cfb34,63935478,0,0x0,8
tick,0x7ffd597cfb34,63951282,0,0x0,8
tick,0x7ffd597cfb34,63967031,0,0x0,8
tick,0x7ffd597cfb34,63983003,0,0x0,8
tick,0x7ffd597cfb34,63999391,0,0x0,8
tick,0x7ffd597cfb34,64014823,0,0x0,8
tick,0x7ffd597cfb34,64030395,0,0x0,8
tick,0x7ffd597cfb34,64046034,0,0x0,8
tick,0x7ffd597cfb34,64061665,0,0x0,8
tick,0x7ffd597cfb34,64077399,0,0x0,8
tick,0x7ffd597cfb34,64092786,0,0x0,8
tick,0x7ffd597cfb34,64108526,0,0x0,8
tick,0x7ffd597cfb34,64123832,0,0x0,8
tick,0x7ffd597cfb34,64139581,0,0x0,8
tick,0x7ffd597cfb34,64155421,0,0x0,8
tick,0x7ffd597cfb34,64170996,0,0x0,8
tick,0x7ffd597cfb34,64187156,0,0x0,8
tick,0x7ffd597cfb34,64203320,0,0x0,8
tick,0x7ffd597cfb34,64218820,0,0x0,8
tick,0x7ffd597cfb34,64234266,0,0x0,8
tick,0x7ffd597cfb34,64249855,0,0x0,8
tick,0x7ffd597cfb34,64265376,0,0x0,8
tick,0x7ffd597cfb34,64281519,0,0x0,8
tick,0x7ffd597cfb34,64297224,0,0x0,8
tick,0x7ffd597cfb34,64312693,0,0x0,8
tick,0x7ffd597cfb34,64328463,0,0x0,8
tick,0x7ffd597cfb34,64344527,0,0x0,8
tick,0x7ffd597cfb34,64360308,0,0x0,8
tick,0x7ffd597cfb34,64376200,0,0x0,8
tick,0x7ffd597cfb34,64392167,0,0x0,8
tick,0x7ffd597cfb34,64408405,0,0x0,8
tick,0x7ffd597cfb34,64423896,0,0x0,8
tick,0x7ffd597cfb34,64439567,0,0x0,8
tick,0x7ffd597cfb34,64455692,0,0x0,8
tick,0x7ffd597cfb34,64471627,0,0x0,8
tick,0x7ffd597cfb34,64487030,0,0x0,8
tick,0x7ffd597cfb34,64502236,0,0x0,8
tick,0x7ffd597cfb34,64517586,0,0x0,8
tick,0x7ffd597cfb34,64534127,0,0x0,8
tick,0x7ffd597cfb34,64550262,0,0x0,8
tick,0x7ffd597cfb34,64566034,0,0x0,8
tick,0x7ffd597cfb34,64581686,0,0x0,8
tick,0x7ffd597cfb34,64596811,0,0x0,8
tick,0x7ffd597cfb34,64612780,0,0x0,8
tick,0x7ffd597cfb34,64628466,0,0x0,8
tick,0x7ffd597cfb34,64644361,0,0x0,8
tick,0x7ffd597cfb34,64660090,0,0x0,8
tick,0x7ffd597cfb34,64676317,0,0x0,8
tick,0x7ffd597cfb34,64692192,0,0x0,8
tick,0x7ffd597cfb34,64707955,0,0x0,8
tick,0x7ffd597cfb34,64723889,0,0x0,8
tick,0x7ffd597cfb34,64739640,0,0x0,8
tick,0x7ffd597cfb34,64756156,0,0x0,8
tick,0x7ffd597cfb34,64771645,0,0x0,8
tick,0x7ffd597cfb34,64787315,0,0x0,8
tick,0x7ffd597cfb34,64802929,0,0x0,8
tick,0x7ffd597cfb34,64819028,0,0x0,8
tick,0x7ffd597cfb34,64835171,0,0x0,8
tick,0x7ffd597cfb34,64850539,0,0x0,8
tick,0x7ffd597cfb34,64866349,0,0x0,8
tick,0x7ffd597cfb34,64881466,0,0x0,8
tick,0x7ffd597cfb34,64896338,0,0x0,8
tick,0x7ffd597cfb34,64912382,0,0x0,8
tick,0x7ffd597cfb34,64928367,0,0x0,8
tick,0x7ffd597cfb34,64943908,0,0x0,8
tick,0x7ffd597cfb34,64959716,0,0x0,8
tick,0x7ffd597cfb34,64975356,0,0x0,8
tick,0x7ffd597cfb34,64991092,0,0x0,8
tick,0x7ffd597cfb34,65006694,0,0x0,8
tick,0x7ffd597cfb34,65023015,0,0x0,8
tick,0x7ffd597cfb34,65039187,0,0x0,8
tick,0x7ffd597cfb34,65054916,0,0x0,8
tick,0x7ffd597cfb34,65071128,0,0x0,8
tick,0x7ffd597cfb34,65086945,0,0x0,8
tick,0x7ffd597cfb34,65102762,0,0x0,8
tick,0x7ffd597cfb34,65118089,0,0x0,8
tick,0x7ffd597cfb34,65134131,0,0x0,8
tick,0x7ffd597cfb34,65149371,0,0x0,8
tick,0x7ffd597cfb34,65165035,0,0x0,8
tick,0x7ffd597cfb34,65180970,0,0x0,8
tick,0x7ffd597cfb34,65197225,0,0x0,8
tick,0x7ffd597cfb34,65213272,0,0x0,8
tick,0x7ffd597cfb34,65228373,0,0x0,8
tick,0x7ffd597cfb34,65243998,0,0x0,8
tick,0x7ffd597cfb34,65259720,0,0x0,8
tick,0x7ffd597cfb34,65275523,0,0x0,8
tick,0x7ffd597cfb34,65291841,0,0x0,8
tick,0x7ffd597cfb34,65307917,0,0x0,8
tick,0x7ffd597cfb34,65323856,0,0x0,8
tick,0x7ffd597cfb34,65339363,0,0x0,8
tick,0x7ffd597cfb34,65355115,0,0x0,8
tick,0x7ffd597cfb34,65370427,0,0x0,8
tick,0x7ffd597cfb34,65386524,0,0x0,8
tick,0x7ffd597cfb34,65402212,0,0x0,8
tick,0x7ffd597cfb34,65418252,0,0x0,8
tick,0x7ffd597cfb34,65434406,0,0x0,8
tick,0x7ffd597cfb34,65450704,0,0x0,8
tick,0x7ffd597cfb34,65466406,0,0x0,8
tick,0x7ffd597cfb34,65482314,0,0x0,8
tick,0x7ffd597cfb34,65498174,0,0x0,8
tick,0x7ffd597cfb34,65514376,0,0x0,8
tick,0x7ffd597cfb34,65529980,0,0x0,8
tick,0x7ffd597cfb34,65546304,0,0x0,8
tick,0x7ffd597cfb34,65562727,0,0x0,8
tick,0x7ffd597cfb34,65578404,0,0x0,8
tick,0x7ffd597cfb34,65594865,0,0x0,8
tick,0x7ffd597cfb34,65610484,0,0x0,8
tick,0x7ffd597cfb34,65626270,0,0x0,8
tick,0x7ffd597cfb34,65641150,0,0x0,8
tick,0x7ffd597cfb34,65657404,0,0x0,8
tick,0x7ffd597cfb34,65673293,0,0x0,8
tick,0x7ffd597cfb34,65689364,0,0x0,8
tick,0x7ffd597cfb34,65705304,0,0x0,8
tick,0x7ffd597cfb34,65721025,0,0x0,8
tick,0x7ffd597cfb34,65737228,0,0x0,8
tick,0x7ffd597cfb34,65752980,0,0x0,8
tick,0x7ffd597cfb34,65769392,0,0x0,8
tick,0x7ffd597cfb34,65785274,0,0x0,8
tick,0x7ffd597cfb34,65801328,0,0x0,8
tick,0x7ffd597cfb34,65817301,0,0x0,8
tick,0x7ffd597cfb34,65832279,0,0x0,8
tick,0x7ffd597cfb34,65847703,0,0x0,8
tick,0x7ffd597cfb34,65863402,0,0x0,8
tick,0x7ffd597cfb34,65879371,0,0x0,8
tick,0x7ffd597cfb34,65895854,0,0x0,8
tick,0x7ffd597cfb34,65911435,0,0x0,8
tick,0x7ffd597cfb34,65927274,0,0x0,8
tick,0x7ffd597cfb34,65943247,0,0x0,8
tick,0x7ffd597cfb34,65959303,0,0x0,8
tick,0x7ffd597cfb34,65975068,0,0x0,8
tick,0x7ffd597cfb34,65991026,0,0x0,8
tick,0x7ffd597cfb34,66006504,0,0x0,8
tick,0x7ffd597cfb34,66022696,0,0x0,8
tick,0x7ffd597cfb34,66038326,0,0x0,8
tick,0x7ffd597cfb34,66053996,0,0x0,8
tick,0x7ffd597cfb34,66069736,0,0x0,8
tick,0x7ffd597cfb34,66085461,0,0x0,8
tick,0x7ffd597cfb34,66101166,0,0x0,8
tick,0x7ffd597cfb34,66117649,0,0x0,8
tick,0x7ffd597cfb34,66133645,0,0x0,8
tick,0x7ffd597cfb34,66149763,0,0x0,8
tick,0x7ffd597cfb34,66165874,0,0x0,8
tick,0x7ffd597cfb34,66182052,0,0x0,8
tick,0x7ffd597cfb34,66197884,0,0x0,8
tick,0x7ffd597cfb34,66213658,0,0x0,8
tick,0x7ffd597cfb34,66229933,0,0x0,8
tick,0x7ffd597cfb34,66245765,0,0x0,8
tick,0x7ffd597cfb34,66261297,0,0x0,8
tick,0x7ffd597cfb34,66277454,0,0x0,8
tick,0x7ffd597cfb34,66293072,0,0x0,8
tick,0x7ffd597cfb34,66308154,0,0x0,8
tick,0x7ffd597cfb34,66323797,0,0x0,8
tick,0x7ffd597cfb34,66339700,0,0x0,8
tick,0x7ffd597cfb34,66355471,0,0x0,8
tick,0x7ffd597cfb34,66371155,0,0x0,8
tick,0x7ffd597cfb34,66386566,0,0x0,8
tick,0x7ffd597cfb34,66402182,0,0x0,8
tick,0x7ffd597cfb34,66417845,0,0x0,8
tick,0x7ffd597cfb34,66433208,0,0x0,8
tick,0x7ffd597cfb34,66449329,0,0x0,8
tick,0x7ffd597cfb34,66465003,0,0x0,8
tick,0x7ffd597cfb34,66480958,0,0x0,8
tick,0x7ffd597cfb34,66496638,0,0x0,8
tick,0x7ffd597cfb34,66512163,0,0x0,8
tick,0x7ffd597cfb34,66527947,0,0x0,8
tick,0x7ffd597cfb34,66543514,0,0x0,8
tick,0x7ffd597cfb34,66559529,0,0x0,8
tick,0x7ffd597cfb34,66574977,0,0x0,8
tick,0x7ffd597cfb34,66590746,0,0x0,8
tick,0x7ffd597cfb34,66606872,0,0x0,8
tick,0x7ffd597cfb34,66623158,0,0x0,8
tick,0x7ffd597cfb34,66639043,0,0x0,8
tick,0x7ffd597cfb34,66654927,0,0x0,8
tick,0x7ffd597cfb34,66670719,0,0x0,8
tick,0x7ffd597cfb34,66686120,0,0x0,8
tick,0x7ffd597cfb34,66702280,0,0x0,8
tick,0x7ffd597cfb34,66718458,0,0x0,8
tick,0x7ffd597cfb34,66734080,0,0x0,8
tick,0x7ffd597cfb34,66749829,0,0x0,8
tick,0x7ffd597cfb34,66765611,0,0x0,8
tick,0x7ffd597cfb34,66781740,0,0x0,8
tick,0x7ffd597cfb34,66797402,0,0x0,8
tick,0x7ffd597cfb34,66812660,0,0x0,8
tick,0x7ffd597cfb34,66828276,0,0x0,8
tick,0x7ffd597cfb34,66843891,0,0x0,8
tick,0x7ffd597cfb34,66859988,0,0x0,8
tick,0x7ffd597cfb34,66876294,0,0x0,8
tick,0x7ffd597cfb34,66892824,0,0x0,8
tick,0x7ffd597cfb34,66908332,0,0x0,8
tick,0x7ffd597cfb34,66924701,0,0x0,8
tick,0x7ffd597cfb34,66940747,0,0x0,8
tick,0x7ffd597cfb34,66956239,0,0x0,8
tick,0x7ffd597cfb34,66972054,0,0x0,8
tick,0x7ffd597cfb34,66987502,0,0x0,8
tick,0x7ffd597cfb34,67003503,0,0x0,8
tick,0x7ffd597cfb34,67019254,0,0x0,8
tick,0x7ffd597cfb34,67035275,0,0x0,8
tick,0x7ffd597cfb34,67051072,0,0x0,8
tick,0x7ffd597cfb34,67067091,0,0x0,8
tick,0x7ffd597cfb34,67082412,0,0x0,8
tick,0x7ffd597cfb34,67097552,0,0x0,8
tick,0x7ffd597cfb34,67112936,0,0x0,8
tick,0x7ffd597cfb34,67128830,0,0x0,8
tick,0x7ffd597cfb34,67144637,0,0x0,8
tick,0x7ffd597cfb34,67159908,0,0x0,8
tick,0x7ffd597cfb34,67175415,0,0x0,8
tick,0x7ffd597cfb34,67190511,0,0x0,8
tick,0x7ffd597cfb34,67206756,0,0x0,8
tick,0x7ffd597cfb34,67222378,0,0x0,8
tick,0x7ffd597cfb34,67238308,0,0x0,8
tick,0x7ffd597cfb34,67253867,0,0x0,8
tick,0x7ffd597cfb34,67269866,0,0x0,8
tick,0x7ffd597cfb34,67285685,0,0x0,8
tick,0x7ffd597cfb34,67300906,0,0x0,8
tick,0x7ffd597cfb34,67317127,0,0x0,8
tick,0x7ffd597cfb34,67332782,0,0x0,8
tick,0x7ffd597cfb34,67348404,0,0x0,8
tick,0x7ffd597cfb34,67364326,0,0x0,8
tick,0x7ffd597cfb34,67380359,0,0x0,8
tick,0x7ffd597cfb34,67396229,0,0x0,8
tick,0x7ffd597cfb34,67411978,0,0x0,8
tick,0x7ffd597cfb34,67428041,0,0x0,8
tick,0x7ffd597cfb34,67443655,0,0x0,8
tick,0x7ffd597cfb34,67459609,0,0x0,8
tick,0x7ffd597cfb34,67476538,0,0x0,8
tick,0x7ffd597cfb34,67490752,0,0x0,8
tick,0x7ffd597cfb34,67506963,0,0x0,8
tick,0x7ffd597cfb34,67522718,0,0x0,8
tick,0x7ffd597cfb34,67538848,0,0x0,8
tick,0x7ffd597cfb34,67554268,0,0x0,8
tick,0x7ffd597cfb34,67570365,0,0x0,8
tick,0x7ffd597cfb34,67586765,0,0x0,8
tick,0x7ffd597cfb34,67602767,0,0x0,8
tick,0x7ffd597cfb34,67618979,0,0x0,8
tick,0x7ffd597cfb34,67634662,0,0x0,8
tick,0x7ffd597cfb34,67650155,0,0x0,8
tick,0x7ffd597cfb34,67665612,0,0x0,8
tick,0x7ffd597cfb34,67682410,0,0x0,8
tick,0x7ffd597cfb34,67698082,0,0x0,8
tick,0x7ffd597cfb34,67713667,0,0x0,8
tick,0x7ffd597cfb34,67729627,0,0x0,8
tick,0x7ffd597cfb34,67745628,0,0x0,8
tick,0x7ffd597cfb34,67762152,0,0x0,8
tick,0x7ffd597cfb34,67777773,0,0x0,8
tick,0x7ffd597cfb34,67793244,0,0x0,8
tick,0x7ffd597cfb34,67809116,0,0x0,8
tick,0x7ffd597cfb34,67825229,0,0x0,8
tick,0x7ffd597cfb34,67841057,0,0x0,8
tick,0x7ffd597cfb34,67856515,0,0x0,8
tick,0x7ffd597cfb34,67872830,0,0x0,8
tick,0x7ffd597cfb34,67888689,0,0x0,8
tick,0x7ffd597cfb34,67905313,0,0x0,8
tick,0x7ffd597cfb34,67920658,0,0x0,8
tick,0x7ffd597cfb34,67936642,0,0x0,8
tick,0x7ffd597cfb34,67952542,0,0x0,8
tick,0x7ffd597cfb34,67968542,0,0x0,8
tick,0x7ffd597cfb34,67984553,0,0x0,8
tick,0x7ffd597cfb34,68000223,0,0x0,8
tick,0x7ffd597cfb34,68016227,0,0x0,8
tick,0x7ffd597cfb34,68032217,0,0x0,8
tick,0x7ffd597cfb34,68047914,0,0x0,8
tick,0x7ffd597cfb34,68063414,0,0x0,8
tick,0x7ffd597cfb34,68079227,0,0x0,8
tick,0x7ffd597cfb34,68094256,0,0x0,8
tick,0x7ffd597cfb34,68110155,0,0x0,8
tick,0x7ffd597cfb34,68126249,0,0x0,8
tick,0x7ffd597cfb34,68141533,0,0x0,8
tick,0x7ffd597cfb34,68157523,0,0x0,8
tick,0x7ffd597cfb34,68173241,0,0x0,8
tick,0x7ffd597cfb34,68189311,0,0x0,8
tick,0x7ffd597cfb34,68204729,0,0x0,8
tick,0x7ffd597cfb34,68221369,0,0x0,8
tick,0x7ffd597cfb34,68237509,0,0x0,8
tick,0x7ffd597cfb34,68253208,0,0x0,8
tick,0x7ffd597cfb34,68268661,0,0x0,8
tick,0x7ffd597cfb34,68284672,0,0x0,8
tick,0x7ffd597cfb34,68300413,0,0x0,8
tick,0x7ffd597cfb34,68315975,0,0x0,8
tick,0x7ffd597cfb34,68331716,0,0x0,8
tick,0x7ffd597cfb34,68347130,0,0x0,8
tick,0x7ffd597cfb34,68363022,0,0x0,8
tick,0x7ffd597cfb34,68378871,0,0x0,8
tick,0x7ffd597cfb34,68394409,0,0x0,8
tick,0x7ffd597cfb34,68409984,0,0x0,8
tick,0x7ffd597cfb34,68425540,0,0x0,8
tick,0x7ffd597cfb34,68440771,0,0x0,8
tick,0x7ffd597cfb34,68456609,0,0x0,8
tick,0x7ffd597cfb34,68471603,0,0x0,8
tick,0x7ffd597cfb34,68487825,0,0x0,8
tick,0x7ffd597cfb34,68503377,0,0x0,8
tick,0x7ffd597cfb34,68518982,0,0x0,8
tick,0x7ffd597cfb34,68534826,0,0x0,8
tick,0x7ffd597cfb34,68551205,0,0x0,8
tick,0x7ffd597cfb34,68567513,0,0x0,8
tick,0x7ffd597cfb34,68583776,0,0x0,8
tick,0x7ffd597cfb34,68599672,0,0x0,8
tick,0x7ffd597cfb34,68615107,0,0x0,8
tick,0x7ffd597cfb34,68630936,0,0x0,8
tick,0x7ffd597cfb34,68646786,0,0x0,8
tick,0x7ffd597cfb34,68662419,0,0x0,8
tick,0x7ffd597cfb34,68678180,0,0x0,8
tick,0x7ffd597cfb34,68693896,0,0x0,8
tick,0x7ffd597cfb34,68709637,0,0x0,8
tick,0x7ffd597cfb34,68725611,0,0x0,8
tick,0x7ffd597cfb34,68741946,0,0x0,8
tick,0x7ffd597cfb34,68757656,0,0x0,8
tick,0x7ffd597cfb34,68773682,0,0x0,8
tick,0x7ffd597cfb34,68789556,0,0x0,8
tick,0x7ffd597cfb34,68805423,0,0x0,8
tick,0x7ffd597cfb34,68821171,0,0x0,8
tick,0x7ffd597cfb34,68837142,0,0x0,8
tick,0x7ffd597cfb34,68853064,0,0x0,8
tick,0x7ffd597cfb34,68868460,0,0x0,8
tick,0x7ffd597cfb34,68884564,0,0x0,8
tick,0x7ffd597cfb34,68900230,0,0x0,8
tick,0x7ffd597cfb34,68915969,0,0x0,8
tick,0x7ffd597cfb34,68931893,0,0x0,8
tick,0x7ffd597cfb34,68947396,0,0x0,8
tick,0x7ffd597cfb34,68963288,0,0x0,8
tick,0x7ffd597cfb34,68978961,0,0x0,8
tick,0x7ffd597cfb34,68994347,0,0x0,8
tick,0x7ffd597cfb34,69009597,0,0x0,8
tick,0x7ffd597cfb34,69025673,0,0x0,8
tick,0x7ffd597cfb34,69041241,0,0x0,8
tick,0x7ffd597cfb34,69057207,0,0x0,8
tick,0x7ffd597cfb34,69073228,0,0x0,8
tick,0x7ffd597cfb34,69089203,0,0x0,8
tick,0x7ffd597cfb34,69104234,0,0x0,8
tick,0x7ffd597cfb34,69119216,0,0x0,8
tick,0x7ffd597cfb34,69135886,0,0x0,8
tick,0x7ffd597cfb34,69151180,0,0x0,8
tick,0x7ffd597cfb34,69166751,0,0x0,8
tick,0x7ffd597cfb34,69182530,0,0x0,8
tick,0x7ffd597cfb34,69197775,0,0x0,8
tick,0x7ffd597cfb34,69213877,0,0x0,8
tick,0x7ffd597cfb34,69229774,0,0x0,8
tick,0x7ffd597cfb34,69245230,0,0x0,8
tick,0x7ffd597cfb34,69261226,0,0x0,8
tick,0x7ffd597cfb34,69277233,0,0x0,8
tick,0x7ffd597cfb34,69293239,0,0x0,8
tick,0x7ffd597cfb34,69309235,0,0x0,8
tick,0x7ffd597cfb34,69324407,0,0x0,8
tick,0x7ffd597cfb34,69339439,0,0x0,8
tick,0x7ffd597cfb34,69354229,0,0x0,8
tick,0x7ffd597cfb34,69369263,0,0x0,8
tick,0x7ffd597cfb34,69385262,0,0x0,8
tick,0x7ffd597cfb34,69401229,0,0x0,8
tick,0x7ffd597cfb34,69417253,0,0x0,8
tick,0x7ffd597cfb34,69433222,0,0x0,8
tick,0x7ffd597cfb34,69448465,0,0x0,8
tick,0x7ffd597cfb34,69463429,0,0x0,8
tick,0x7ffd597cfb34,69479251,0,0x0,8
tick,0x7ffd597cfb34,69494470,0,0x0,8
tick,0x7ffd597cfb34,69509268,0,0x0,8
tick,0x7ffd597cfb34,69524548,0,0x0,8
tick,0x7ffd597cfb34,69540268,0,0x0,8
tick,0x7ffd597cfb34,69555229,0,0x0,8
tick,0x7ffd597cfb34,69571242,0,0x0,8
tick,0x7ffd597cfb34,69587249,0,0x0,8
tick,0x7ffd597cfb34,69603246,0,0x0,8
tick,0x7ffd597cfb34,69618729,0,0x0,8
tick,0x7ffd597cfb34,69634320,0,0x0,8
tick,0x7ffd597cfb34,69650079,0,0x0,8
tick,0x7ffd597cfb34,69665141,0,0x0,8
tick,0x7ffd597cfb34,69680770,0,0x0,8
tick,0x7ffd597cfb34,69695447,0,0x0,8
tick,0x7ffd597cfb34,69711430,0,0x0,8
tick,0x7ffd597cfb34,69727497,0,0x0,8
tick,0x7ffd597cfb34,69742646,0,0x0,8
tick,0x7ffd597cfb34,69757479,0,0x0,8
tick,0x7ffd597cfb34,69772277,0,0x0,8
tick,0x7ffd597cfb34,69788307,0,0x0,8
tick,0x7ffd597cfb34,69803434,0,0x0,8
tick,0x7ffd597cfb34,69818864,0,0x0,8
tick,0x7ffd597cfb34,69834993,0,0x0,8
tick,0x7ffd597cfb34,69850222,0,0x0,8
tick,0x7ffd597cfb34,69865569,0,0x0,8
tick,0x7ffd597cfb34,69881486,0,0x0,8
tick,0x7ffd597cfb34,69897384,0,0x0,8
tick,0x7ffd597cfb34,69912449,0,0x0,8
tick,0x7ffd597cfb34,69927858,0,0x0,8
tick,0x7ffd597cfb34,69943028,0,0x0,8
tick,0x7ffd597cfb34,69958154,0,0x0,8
tick,0x7ffd597cfb34,69974182,0,0x0,8
tick,0x7ffd597cfb34,69990197,0,0x0,8
tick,0x7ffd597cfb34,70006196,0,0x0,8
tick,0x7ffd597cfb34,70022460,0,0x0,8
tick,0x7ffd597cfb34,70038258,0,0x0,8
tick,0x7ffd597cfb34,70054218,0,0x0,8
tick,0x7ffd597cfb34,70069681,0,0x0,8
tick,0x7ffd597cfb34,70085006,0,0x0,8
tick,0x7ffd597cfb34,70100508,0,0x0,8
tick,0x7ffd597cfb34,70116548,0,0x0,8
tick,0x7ffd597cfb34,70132575,0,0x0,8
tick,0x7ffd597cfb34,70147961,0,0x0,8
tick,0x7ffd597cfb34,70163740,0,0x0,8
tick,0x7ffd597cfb34,70179116,0,0x0,8
tick,0x7ffd597cfb34,70194108,0,0x0,8
tick,0x7ffd597cfb34,70210108,0,0x0,8
tick,0x7ffd597cfb34,70226123,0,0x0,8
tick,0x7ffd597cfb34,70242104,0,0x0,8
tick,0x7ffd597cfb34,70258137,0,0x0,8
tick,0x7ffd597cfb34,70274111,0,0x0,8
tick,0x7ffd597cfb34,70290113,0,0x0,8
tick,0x7ffd597cfb34,70305064,0,0x0,8
tick,0x7ffd597cfb34,70321135,0,0x0,8
tick,0x7ffd597cfb34,70336074,0,0x0,8
tick,0x7ffd597cfb34,70351286,0,0x0,8
tick,0x7ffd597cfb34,70367300,0,0x0,8
tick,0x7ffd597cfb34,70382304,0,0x0,8
tick,0x7ffd597cfb34,70398346,0,0x0,8
tick,0x7ffd597cfb34,70414366,0,0x0,8
tick,0x7ffd597cfb34,70430380,0,0x0,8
tick,0x7ffd597cfb34,70446399,0,0x0,8
tick,0x7ffd597cfb34,70462564,0,0x0,8
tick,0x7ffd597cfb34,70477735,0,0x0,8
tick,0x7ffd597cfb34,70493434,0,0x0,8
tick,0x7ffd597cfb34,70509480,0,0x0,8
tick,0x7ffd597cfb34,70525580,0,0x0,8
tick,0x7ffd597cfb34,70540940,0,0x0,8
tick,0x7ffd597cfb34,70556348,0,0x0,8
tick,0x7ffd597cfb34,70572084,0,0x0,8
tick,0x7ffd597cfb34,70587568,0,0x0,8
tick,0x7ffd597cfb34,70603503,0,0x0,8
tick,0x7ffd597cfb34,70619322,0,0x0,8
tick,0x7ffd597cfb34,70635323,0,0x0,8
tick,0x7ffd597cfb34,70650661,0,0x0,8
tick,0x7ffd597cfb34,70666052,0,0x0,8
tick,0x7ffd597cfb34,70682065,0,0x0,8
tick,0x7ffd597cfb34,70698079,0,0x0,8
tick,0x7ffd597cfb34,70713217,0,0x0,8
tick,0x7ffd597cfb34,70728349,0,0x0,8
tick,0x7ffd597cfb34,70744323,0,0x0,8
tick,0x7ffd597cfb34,70760328,0,0x0,8
tick,0x7ffd597cfb34,70776320,0,0x0,8
tick,0x7ffd597cfb34,70791536,0,0x0,8
tick,0x7ffd597cfb34,70806547,0,0x0,8
tick,0x7ffd597cfb34,70822112,0,0x0,8
tick,0x7ffd597cfb34,70837488,0,0x0,8
tick,0x7ffd597cfb34,70853368,0,0x0,8
tick,0x7ffd597cfb34,70869328,0,0x0,8
tick,0x7ffd597cfb34,70885368,0,0x0,8
tick,0x7ffd597cfb34,70901345,0,0x0,8
tick,0x7ffd597cfb34,70917417,0,0x0,8
tick,0x7ffd597cfb34,70933370,0,0x0,8
tick,0x7ffd597cfb34,70949377,0,0x0,8
tick,0x7ffd597cfb34,70965362,0,0x0,8
tick,0x7ffd597cfb34,70981383,0,0x0,8
tick,0x7ffd597cfb34,70997385,0,0x0,8
tick,0x7ffd597cfb34,71013381,0,0x0,8
tick,0x7ffd597cfb34,71029379,0,0x0,8
tick,0x7ffd597cfb34,71045397,0,0x0,8
tick,0x7ffd597cfb34,71061400,0,0x0,8
tick,0x7ffd597cfb34,71077343,0,0x0,8
tick,0x7ffd597cfb34,71093350,0,0x0,8
tick,0x7ffd597cfb34,71109375,0,0x0,8
tick,0x7ffd597cfb34,71125346,0,0x0,8
tick,0x7ffd597cfb34,71141367,0,0x0,8
tick,0x7ffd597cfb34,71157375,0,0x0,8
tick,0x7ffd597cfb34,71173363,0,0x0,8
tick,0x7ffd597cfb34,71189354,0,0x0,8
tick,0x7ffd597cfb34,71205365,0,0x0,8
tick,0x7ffd597cfb34,71221386,0,0x0,8
tick,0x7ffd597cfb34,71237380,0,0x0,8
tick,0x7ffd597cfb34,71253360,0,0x0,8
tick,0x7ffd597cfb34,71269377,0,0x0,8
tick,0x7ffd597cfb34,71285367,0,0x0,8
tick,0x7ffd597cfb34,71301354,0,0x0,8
tick,0x7ffd597cfb34,71317355,0,0x0,8
tick,0x7ffd597cfb34,71333378,0,0x0,8
tick,0x7ffd597cfb34,71349382,0,0x0,8
tick,0x7ffd597cfb34,71365391,0,0x0,8
tick,0x7ffd597cfb34,71381420,0,0x0,8
tick,0x7ffd597cfb34,71397360,0,0x0,8
tick,0x7ffd597cfb34,71413451,0,0x0,8
tick,0x7ffd597cfb34,71429404,0,0x0,8
tick,0x7ffd597cfb34,71444562,0,0x0,8
tick,0x7ffd597cfb34,71460010,0,0x0,8
tick,0x7ffd597cfb34,71475624,0,0x0,8
tick,0x7ffd597cfb34,71491189,0,0x0,8
tick,0x7ffd597cfb34,71506137,0,0x0,8
tick,0x7ffd597cfb34,71521388,0,0x0,8
tick,0x7ffd597cfb34,71537371,0,0x0,8
tick,0x7ffd597cfb34,71552389,0,0x0,8
tick,0x7ffd597cfb34,71567370,0,0x0,8
tick,0x7ffd597cfb34,71583295,0,0x0,8
tick,0x7ffd597cfb34,71599304,0,0x0,8
tick,0x7ffd597cfb34,71614325,0,0x0,8
tick,0x7ffd597cfb34,71630523,0,0x0,8
tick,0x7ffd597cfb34,71645566,0,0x0,8
tick,0x7ffd597cfb34,71660559,0,0x0,8
tick,0x7ffd597cfb34,71676074,0,0x0,8
tick,0x7ffd597cfb34,71691477,0,0x0,8
tick,0x7ffd597cfb34,71707057,0,0x0,8
tick,0x7ffd597cfb34,71722798,0,0x0,8
tick,0x7ffd597cfb34,71738094,0,0x0,8
tick,0x7ffd597cfb34,71753770,0,0x0,8
tick,0x7ffd597cfb34,71769447,0,0x0,8
tick,0x7ffd597cfb34,71785431,0,0x0,8
tick,0x7ffd597cfb34,71801408,0,0x0,8
tick,0x7ffd597cfb34,71816412,0,0x0,8
tick,0x7ffd597cfb34,71832435,0,0x0,8
tick,0x7ffd597cfb34,71847420,0,0x0,8
tick,0x7ffd597cfb34,71863457,0,0x0,8
tick,0x7ffd597cfb34,71879454,0,0x0,8
tick,0x7ffd597cfb34,71894729,0,0x0,8
tick,0x7ffd597cfb34,71910397,0,0x0,8
tick,0x7ffd597cfb34,71925402,0,0x0,8
tick,0x7ffd597cfb34,71941390,0,0x0,8
tick,0x7ffd597cfb34,71957557,0,0x0,8
tick,0x7ffd597cfb34,71973026,0,0x0,8
tick,0x7ffd597cfb34,71988880,0,0x0,8
tick,0x7ffd597cfb34,72004189,0,0x0,8
tick,0x7ffd597cfb34,72020216,0,0x0,8
tick,0x7ffd597cfb34,72035381,0,0x0,8
tick,0x7ffd597cfb34,72050180,0,0x0,8
tick,0x7ffd597cfb34,72065756,0,0x0,8
tick,0x7ffd597cfb34,72081593,0,0x0,8
tick,0x7ffd597cfb34,72097274,0,0x0,8
tick,0x7ffd597cfb34,72112500,0,0x0,8
tick,0x7ffd597cfb34,72128309,0,0x0,8
tick,0x7ffd597cfb34,72143328,0,0x0,8
tick,0x7ffd597cfb34,72158604,0,0x0,8
tick,0x7ffd597cfb34,72174227,0,0x0,8
tick,0x7ffd597cfb34,72189270,0,0x0,8
tick,0x7ffd597cfb34,72205219,0,0x0,8
tick,0x7ffd597cfb34,72220319,0,0x0,8
tick,0x7ffd597cfb34,72235205,0,0x0,8
tick,0x7ffd597cfb34,72251383,0,0x0,8
tick,0x7ffd597cfb34,72267239,0,0x0,8
tick,0x7ffd597cfb34,72283290,0,0x0,8
tick,0x7ffd597cfb34,72299171,0,0x0,8
tick,0x7ffd597cfb34,72315270,0,0x0,8
tick,0x7ffd597cfb34,72330470,0,0x0,8
tick,0x7ffd597cfb34,72346418,0,0x0,8
tick,0x7ffd597cfb34,72361806,0,0x0,8
tick,0x7ffd597cfb34,72377811,0,0x0,8
tick,0x7ffd597cfb34,72393835,0,0x0,8
tick,0x7ffd597cfb34,72409833,0,0x0,8
tick,0x7ffd597cfb34,72425823,0,0x0,8
tick,0x7ffd597cfb34,72441828,0,0x0,8
tick,0x7ffd597cfb34,72457849,0,0x0,8
tick,0x7ffd597cfb34,72473821,0,0x0,8
tick,0x7ffd597cfb34,72488846,0,0x0,8
tick,0x7ffd597cfb34,72503829,0,0x0,8
tick,0x7ffd597cfb34,72519854,0,0x0,8
tick,0x7ffd597cfb34,72534857,0,0x0,8
tick,0x7ffd597cfb34,72549879,0,0x0,8
tick,0x7ffd597cfb34,72565852,0,0x0,8
tick,0x7ffd597cfb34,72581845,0,0x0,8
tick,0x7ffd597cfb34,72597878,0,0x0,8
tick,0x7ffd597cfb34,72613891,0,0x0,8
tick,0x7ffd597cfb34,72629850,0,0x0,8
tick,0x7ffd597cfb34,72645878,0,0x0,8
tick,0x7ffd597cfb34,72661898,0,0x0,8
tick,0x7ffd597cfb34,72677882,0,0x0,8
tick,0x7ffd597cfb34,72693873,0,0x0,8
tick,0x7ffd597cfb34,72709894,0,0x0,8
tick,0x7ffd597cfb34,72725886,0,0x0,8
tick,0x7ffd597cfb34,72741908,0,0x0,8
tick,0x7ffd597cfb34,72757868,0,0x0,8
tick,0x7ffd597cfb34,72773882,0,0x0,8
tick,0x7ffd597cfb34,72789889,0,0x0,8
tick,0x7ffd597cfb34,72805897,0,0x0,8
tick,0x7ffd597cfb34,72821885,0,0x0,8
tick,0x7ffd597cfb34,72837919,0,0x0,8
tick,0x7ffd597cfb34,72853905,0,0x0,8
tick,0x7ffd597cfb34,72869918,0,0x0,8
tick,0x7ffd597cfb34,72885907,0,0x0,8
tick,0x7ffd597cfb34,72901922,0,0x0,8
tick,0x7ffd597cfb34,72917944,0,0x0,8
tick,0x7ffd597cfb34,72932924,0,0x0,8
tick,0x7ffd597cfb34,72947956,0,0x0,8
tick,0x7ffd597cfb34,72963933,0,0x0,8
tick,0x7ffd597cfb34,72979917,0,0x0,8
tick,0x7ffd597cfb34,72995494,0,0x0,8
tick,0x7ffd597cfb34,73010473,0,0x0,8
tick,0x7ffd597cfb34,73026507,0,0x0,8
tick,0x7ffd597cfb34,73041499,0,0x0,8
tick,0x7ffd597cfb34,73057513,0,0x0,8
tick,0x7ffd597cfb34,73072501,0,0x0,8
tick,0x7ffd597cfb34,73088490,0,0x0,8
tick,0x7ffd597cfb34,73104501,0,0x0,8
tick,0x7ffd597cfb34,73120512,0,0x0,8
tick,0x7ffd597cfb34,73136505,0,0x0,8
tick,0x7ffd597cfb34,73151527,0,0x0,8
tick,0x7ffd597cfb34,73167532,0,0x0,8
tick,0x7ffd597cfb34,73182580,0,0x0,8
tick,0x7ffd597cfb34,73198520,0,0x0,8
tick,0x7ffd597cfb34,73214599,0,0x0,8
tick,0x7ffd597cfb34,73230671,0,0x0,8
tick,0x7ffd597cfb34,73246521,0,0x0,8
tick,0x7ffd597cfb34,73262539,0,0x0,8
tick,0x7ffd597cfb34,73278515,0,0x0,8
tick,0x7ffd597cfb34,73293516,0,0x0,8
tick,0x7ffd597cfb34,73309522,0,0x0,8
tick,0x7ffd597cfb34,73324499,0,0x0,8
tick,0x7ffd597cfb34,73340509,0,0x0,8
tick,0x7ffd597cfb34,73356508,0,0x0,8
tick,0x7ffd597cfb34,73372528,0,0x0,8
tick,0x7ffd597cfb34,73387534,0,0x0,8
tick,0x7ffd597cfb34,73402526,0,0x0,8
tick,0x7ffd597cfb34,73418496,0,0x0,8
tick,0x7ffd597cfb34,73434529,0,0x0,8
tick,0x7ffd597cfb34,73450499,0,0x0,8
tick,0x7ffd597cfb34,73466515,0,0x0,8
tick,0x7ffd597cfb34,73482528,0,0x0,8
tick,0x7ffd597cfb34,73498534,0,0x0,8
tick,0x7ffd597cfb34,73514503,0,0x0,8
tick,0x7ffd597cfb34,73530514,0,0x0,8
tick,0x7ffd597cfb34,73546527,0,0x0,8
tick,0x7ffd597cfb34,73562518,0,0x0,8
tick,0x7ffd597cfb34,73577505,0,0x0,8
tick,0x7ffd597cfb34,73593527,0,0x0,8
tick,0x7ffd597cfb34,73608529,0,0x0,8
tick,0x7ffd597cfb34,73624541,0,0x0,8
tick,0x7ffd597cfb34,73639527,0,0x0,8
tick,0x7ffd597cfb34,73654531,0,0x0,8
tick,0x7ffd597cfb34,73670553,0,0x0,8
tick,0x7ffd597cfb34,73686535,0,0x0,8
tick,0x7ffd597cfb34,73701539,0,0x0,8
tick,0x7ffd597cfb34,73717531,0,0x0,8
tick,0x7ffd597cfb34,73732542,0,0x0,8
tick,0x7ffd597cfb34,73748536,0,0x0,8
tick,0x7ffd597cfb34,73764568,0,0x0,8
tick,0x7ffd597cfb34,73780558,0,0x0,8
tick,0x7ffd597cfb34,73795703,0,0x0,8
tick,0x7ffd597cfb34,73810663,0,0x0,8
tick,0x7ffd597cfb34,73825739,0,0x0,8
tick,0x7ffd597cfb34,73841928,0,0x0,8
tick,0x7ffd597cfb34,73857878,0,0x0,8
tick,0x7ffd597cfb34,73872766,0,0x0,8
tick,0x7ffd597cfb34,73887923,0,0x0,8
tick,0x7ffd597cfb34,73902816,0,0x0,8
tick,0x7ffd597cfb34,73918873,0,0x0,8
tick,0x7ffd597cfb34,73933890,0,0x0,8
tick,0x7ffd597cfb34,73949697,0,0x0,8
tick,0x7ffd597cfb34,73964807,0,0x0,8
tick,0x7ffd597cfb34,73979901,0,0x0,8
tick,0x7ffd597cfb34,73995090,0,0x0,8
tick,0x7ffd597cfb34,74010994,0,0x0,8
tick,0x7ffd597cfb34,74025935,0,0x0,8
tick,0x7ffd597cfb34,74041946,0,0x0,8
tick,0x7ffd597cfb34,74057968,0,0x0,8
tick,0x7ffd597cfb34,74073940,0,0x0,8
tick,0x7ffd597cfb34,74089962,0,0x0,8
tick,0x7ffd597cfb34,74105948,0,0x0,8
tick,0x7ffd597cfb34,74122070,0,0x0,8
tick,0x7ffd597cfb34,74137971,0,0x0,8
tick,0x7ffd597cfb34,74153363,0,0x0,8
tick,0x7ffd597cfb34,74168582,0,0x0,8
tick,0x7ffd597cfb34,74184003,0,0x0,8
tick,0x7ffd597cfb34,74199756,0,0x0,8
tick,0x7ffd597cfb34,74214971,0,0x0,8
tick,0x7ffd597cfb34,74230906,0,0x0,8
tick,0x7ffd597cfb34,74246628,0,0x0,8
tick,0x7ffd597cfb34,74262745,0,0x0,8
tick,0x7ffd597cfb34,74278671,0,0x0,8
tick,0x7ffd597cfb34,74294229,0,0x0,8
tick,0x7ffd597cfb34,74309353,0,0x0,8
tick,0x7ffd597cfb34,74325460,0,0x0,8
tick,0x7ffd597cfb34,74340666,0,0x0,8
tick,0x7ffd597cfb34,74355944,0,0x0,8
tick,0x7ffd597cfb34,74371784,0,0x0,8
tick,0x7ffd597cfb34,74387179,0,0x0,8
tick,0x7ffd597cfb34,74402853,0,0x0,8
tick,0x7ffd597cfb34,74418651,0,0x0,8
tick,0x7ffd597cfb34,74434377,0,0x0,8
tick,0x7ffd597cfb34,74449094,0,0x0,8
tick,0x7ffd597cfb34,74464820,0,0x0,8
tick,0x7ffd597cfb34,74480845,0,0x0,8
tick,0x7ffd597cfb34,74496489,0,0x0,8
tick,0x7ffd597cfb34,74512005,0,0x0,8
tick,0x7ffd597cfb34,74527893,0,0x0,8
tick,0x7ffd597cfb34,74544088,0,0x0,8
tick,0x7ffd597cfb34,74559434,0,0x0,8
tick,0x7ffd597cfb34,74574815,0,0x0,8
tick,0x7ffd597cfb34,74590851,0,0x0,8
tick,0x7ffd597cfb34,74606344,0,0x0,8
tick,0x7ffd597cfb34,74622319,0,0x0,8
tick,0x7ffd597cfb34,74638086,0,0x0,8
tick,0x7ffd597cfb34,74653265,0,0x0,8
tick,0x7ffd597cfb34,74668701,0,0x0,8
tick,0x7ffd597cfb34,74683871,0,0x0,8
tick,0x7ffd597cfb34,74699590,0,0x0,8
tick,0x7ffd597cfb34,74714759,0,0x0,8
tick,0x7ffd597cfb34,74730606,0,0x0,8
tick,0x7ffd597cfb34,74746649,0,0x0,8
tick,0x7ffd597cfb34,74761926,0,0x0,8
tick,0x7ffd597cfb34,74777625,0,0x0,8
tick,0x7ffd597cfb34,74792588,0,0x0,8
tick,0x7ffd597cfb34,74807609,0,0x0,8
tick,0x7ffd597cfb34,74823624,0,0x0,8
tick,0x7ffd597cfb34,74838615,0,0x0,8
tick,0x7ffd597cfb34,74854595,0,0x0,8
tick,0x7ffd597cfb34,74870610,0,0x0,8
tick,0x7ffd597cfb34,74886633,0,0x0,8
tick,0x7ffd597cfb34,74902639,0,0x0,8
tick,0x7ffd597cfb34,74918615,0,0x0,8
tick,0x7ffd597cfb34,74934601,0,0x0,8
tick,0x7ffd597cfb34,74950594,0,0x0,8
tick,0x7ffd597cfb34,74966630,0,0x0,8
tick,0x7ffd597cfb34,74981604,0,0x0,8
tick,0x7ffd597cfb34,74997670,0,0x0,8
tick,0x7ffd597cfb34,75012665,0,0x0,8
tick,0x7ffd597cfb34,75028658,0,0x0,8
tick,0x7ffd597cfb34,75044633,0,0x0,8
tick,0x7ffd597cfb34,75060680,0,0x0,8
tick,0x7ffd597cfb34,75075976,0,0x0,8
tick,0x7ffd597cfb34,75091830,0,0x0,8
tick,0x7ffd597cfb34,75107799,0,0x0,8
tick,0x7ffd597cfb34,75123823,0,0x0,8
tick,0x7ffd597cfb34,75139641,0,0x0,8
tick,0x7ffd597cfb34,75155695,0,0x0,8
tick,0x7ffd597cfb34,75171721,0,0x0,8
tick,0x7ffd597cfb34,75187644,0,0x0,8
tick,0x7ffd597cfb34,75203688,0,0x0,8
tick,0x7ffd597cfb34,75219639,0,0x0,8
tick,0x7ffd597cfb34,75235662,0,0x0,8
tick,0x7ffd597cfb34,75251657,0,0x0,8
tick,0x7ffd597cfb34,75267655,0,0x0,8
tick,0x7ffd597cfb34,75283641,0,0x0,8
tick,0x7ffd597cfb34,75299651,0,0x0,8
tick,0x7ffd597cfb34,75315349,0,0x0,8
tick,0x7ffd597cfb34,75331354,0,0x0,8
tick,0x7ffd597cfb34,75346659,0,0x0,8
tick,0x7ffd597cfb34,75362747,0,0x0,8
tick,0x7ffd597cfb34,75378681,0,0x0,8
tick,0x7ffd597cfb34,75394187,0,0x0,8
tick,0x7ffd597cfb34,75409867,0,0x0,8
tick,0x7ffd597cfb34,75425760,0,0x0,8
tick,0x7ffd597cfb34,75441779,0,0x0,8
tick,0x7ffd597cfb34,75457813,0,0x0,8
tick,0x7ffd597cfb34,75473787,0,0x0,8
tick,0x7ffd597cfb34,75489814,0,0x0,8
tick,0x7ffd597cfb34,75505677,0,0x0,8
tick,0x7ffd597cfb34,75521553,0,0x0,8
tick,0x7ffd597cfb34,75536987,0,0x0,8
tick,0x7ffd597cfb34,75551835,0,0x0,8
tick,0x7ffd597cfb34,75567065,0,0x0,8
tick,0x7ffd597cfb34,75582694,0,0x0,8
tick,0x7ffd597cfb34,75598385,0,0x0,8
tick,0x7ffd597cfb34,75613441,0,0x0,8
tick,0x7ffd597cfb34,75628741,0,0x0,8
tick,0x7ffd597cfb34,75644075,0,0x0,8
tick,0x7ffd597cfb34,75659338,0,0x0,8
tick,0x7ffd597cfb34,75675410,0,0x0,8
tick,0x7ffd597cfb34,75690549,0,0x0,8
tick,0x7ffd597cfb34,75705445,0,0x0,8
tick,0x7ffd597cfb34,75721574,0,0x0,8
tick,0x7ffd597cfb34,75737472,0,0x0,8
tick,0x7ffd597cfb34,75752692,0,0x0,8
tick,0x7ffd597cfb34,75768656,0,0x0,8
tick,0x7ffd597cfb34,75783867,0,0x0,8
tick,0x7ffd597cfb34,75799842,0,0x0,8
tick,0x7ffd597cfb34,75814480,0,0x0,8
tick,0x7ffd597cfb34,75830497,0,0x0,8
tick,0x7ffd597cfb34,75845852,0,0x0,8
tick,0x7ffd597cfb34,75861604,0,0x0,8
tick,0x7ffd597cfb34,75876762,0,0x0,8
tick,0x7ffd597cfb34,75891851,0,0x0,8
tick,0x7ffd597cfb34,75907950,0,0x0,8
tick,0x7ffd597cfb34,75922590,0,0x0,8
tick,0x7ffd597cfb34,75938763,0,0x0,8
tick,0x7ffd597cfb34,75953826,0,0x0,8
tick,0x7ffd597cfb34,75969679,0,0x0,8
tick,0x7ffd597cfb34,75985088,0,0x0,8
tick,0x7ffd597cfb34,76000701,0,0x0,8
tick,0x7ffd597cfb34,76016474,0,0x0,8
tick,0x7ffd597cfb34,76031925,0,0x0,8
tick,0x7ffd597cfb34,76047806,0,0x0,8
tick,0x7ffd597cfb34,76063101,0,0x0,8
tick,0x7ffd597cfb34,76078601,0,0x0,8
tick,0x7ffd597cfb34,76094784,0,0x0,8
tick,0x7ffd597cfb34,76110639,0,0x0,8
tick,0x7ffd597cfb34,76126326,0,0x0,8
tick,0x7ffd597cfb34,76142005,0,0x0,8
tick,0x7ffd597cfb34,76157459,0,0x0,8
tick,0x7ffd597cfb34,76172641,0,0x0,8
tick,0x7ffd597cfb34,76188782,0,0x0,8
tick,0x7ffd597cfb34,76204114,0,0x0,8
tick,0x7ffd597cfb34,76220013,0,0x0,8
tick,0x7ffd597cfb34,76235463,0,0x0,8
tick,0x7ffd597cfb34,76251727,0,0x0,8
tick,0x7ffd597cfb34,76268096,0,0x0,8
tick,0x7ffd597cfb34,76283394,0,0x0,8
tick,0x7ffd597cfb34,76299252,0,0x0,8
tick,0x7ffd597cfb34,76314535,0,0x0,8
tick,0x7ffd597cfb34,76330674,0,0x0,8
tick,0x7ffd597cfb34,76346930,0,0x0,8
tick,0x7ffd597cfb34,76362502,0,0x0,8
tick,0x7ffd597cfb34,76377960,0,0x0,8
tick,0x7ffd597cfb34,76393020,0,0x0,8
tick,0x7ffd597cfb34,76409420,0,0x0,8
tick,0x7ffd597cfb34,76424962,0,0x0,8
tick,0x7ffd597cfb34,76440370,0,0x0,8
tick,0x7ffd597cfb34,76456137,0,0x0,8
tick,0x7ffd597cfb34,76471368,0,0x0,8
tick,0x7ffd597cfb34,76486863,0,0x0,8
tick,0x7ffd597cfb34,76502456,0,0x0,8
tick,0x7ffd597cfb34,76517973,0,0x0,8
tick,0x7ffd597cfb34,76533423,0,0x0,8
tick,0x7ffd597cfb34,76549811,0,0x0,8
tick,0x7ffd597cfb34,76565906,0,0x0,8
tick,0x7ffd597cfb34,76581480,0,0x0,8
tick,0x7ffd597cfb34,76597275,0,0x0,8
tick,0x7ffd597cfb34,76613042,0,0x0,8
tick,0x7ffd597cfb34,76628208,0,0x0,8
tick,0x7ffd597cfb34,76643671,0,0x0,8
tick,0x7ffd597cfb34,76659015,0,0x0,8
tick,0x7ffd597cfb34,76675286,0,0x0,8
tick,0x7ffd597cfb34,76690766,0,0x0,8
tick,0x7ffd597cfb34,76705969,0,0x0,8
tick,0x7ffd597cfb34,76722105,0,0x0,8
tick,0x7ffd597cfb34,76737627,0,0x0,8
tick,0x7ffd597cfb34,76753655,0,0x0,8
tick,0x7ffd597cfb34,76769782,0,0x0,8
tick,0x7ffd597cfb34,76785859,0,0x0,8
tick,0x7ffd597cfb34,76801734,0,0x0,8
tick,0x7ffd597cfb34,76817077,0,0x0,8
tick,0x7ffd597cfb34,76832525,0,0x0,8
tick,0x7ffd597cfb34,76848696,0,0x0,8
tick,0x7ffd597cfb34,76864044,0,0x0,8
tick,0x7ffd597cfb34,76880111,0,0x0,8
tick,0x7ffd597cfb34,76896016,0,0x0,8
tick,0x7ffd597cfb34,76912084,0,0x0,8
tick,0x7ffd597cfb34,76927212,0,0x0,8
tick,0x7ffd597cfb34,76942740,0,0x0,8
tick,0x7ffd597cfb34,76958618,0,0x0,8
tick,0x7ffd597cfb34,76973680,0,0x0,8
tick,0x7ffd597cfb34,76989429,0,0x0,8
tick,0x7ffd597cfb34,77005737,0,0x0,8
tick,0x7ffd597cfb34,77021467,0,0x0,8
tick,0x7ffd597cfb34,77036480,0,0x0,8
tick,0x7ffd597cfb34,77052649,0,0x0,8
tick,0x7ffd597cfb34,77068078,0,0x0,8
tick,0x7ffd597cfb34,77083826,0,0x0,8
tick,0x7ffd597cfb34,77099735,0,0x0,8
tick,0x7ffd597cfb34,77115615,0,0x0,8
tick,0x7ffd597cfb34,77131619,0,0x0,8
tick,0x7ffd597cfb34,77147844,0,0x0,8
tick,0x7ffd597cfb34,77163673,0,0x0,8
tick,0x7ffd597cfb34,77179634,0,0x0,8
tick,0x7ffd597cfb34,77195590,0,0x0,8
tick,0x7ffd597cfb34,77211489,0,0x0,8
tick,0x7ffd597cfb34,77227135,0,0x0,8
tick,0x7ffd597cfb34,77242731,0,0x0,8
tick,0x7ffd597cfb34,77258529,0,0x0,8
tick,0x7ffd597cfb34,77274257,0,0x0,8
tick,0x7ffd597cfb34,77289860,0,0x0,8
tick,0x7ffd597cfb34,77306633,0,0x0,8
tick,0x7ffd597cfb34,77322246,0,0x0,8
tick,0x7ffd597cfb34,77338120,0,0x0,8
tick,0x7ffd597cfb34,77354177,0,0x0,8
tick,0x7ffd597cfb34,77370123,0,0x0,8
tick,0x7ffd597cfb34,77386404,0,0x0,8
tick,0x7ffd597cfb34,77402158,0,0x0,8
tick,0x7ffd597cfb34,77418508,0,0x0,8
tick,0x7ffd597cfb34,77434311,0,0x0,8
tick,0x7ffd597cfb34,77450521,0,0x0,8
tick,0x7ffd597cfb34,77466255,0,0x0,8
tick,0x7ffd597cfb34,77482058,0,0x0,8
tick,0x7ffd597cfb34,77498155,0,0x0,8
tick,0x7ffd597cfb34,77514008,0,0x0,8
tick,0x7ffd597cfb34,77529556,0,0x0,8
tick,0x7ffd597cfb34,77545521,0,0x0,8
tick,0x7ffd597cfb34,77560613,0,0x0,8
tick,0x7ffd597cfb34,77576303,0,0x0,8
tick,0x7ffd597cfb34,77592734,0,0x0,8
tick,0x7ffd597cfb34,77608106,0,0x0,8
tick,0x7ffd597cfb34,77624196,0,0x0,8
tick,0x7ffd597cfb34,77639695,0,0x0,8
tick,0x7ffd597cfb34,77655604,0,0x0,8
tick,0x7ffd597cfb34,77671343,0,0x0,8
tick,0x7ffd597cfb34,77687322,0,0x0,8
tick,0x7ffd597cfb34,77703010,0,0x0,8
tick,0x7ffd597cfb34,77718265,0,0x0,8
tick,0x7ffd597cfb34,77734006,0,0x0,8
tick,0x7ffd597cfb34,77749759,0,0x0,8
tick,0x7ffd597cfb34,77765954,0,0x0,8
tick,0x7ffd597cfb34,77781507,0,0x0,8
tick,0x7ffd597cfb34,77797855,0,0x0,8
tick,0x7ffd597cfb34,77813893,0,0x0,8
tick,0x7ffd597cfb34,77829274,0,0x0,8
tick,0x7ffd597cfb34,77845043,0,0x0,8
tick,0x7ffd597cfb34,77861191,0,0x0,8
tick,0x7ffd597cfb34,77877389,0,0x0,8
tick,0x7ffd597cfb34,77893181,0,0x0,8
tick,0x7ffd597cfb34,77908832,0,0x0,8
tick,0x7ffd597cfb34,77925184,0,0x0,8
tick,0x7ffd597cfb34,77940771,0,0x0,8
tick,0x7ffd597cfb34,77956997,0,0x0,8
tick,0x7ffd597cfb34,77972606,0,0x0,8
tick,0x7ffd597cfb34,77988923,0,0x0,8
tick,0x7ffd597cfb34,78004753,0,0x0,8
tick,0x7ffd597cfb34,78020651,0,0x0,8
tick,0x7ffd597cfb34,78036290,0,0x0,8
tick,0x7ffd597cfb34,78052130,0,0x0,8
tick,0x7ffd597cfb34,78067851,0,0x0,8
tick,0x7ffd597cfb34,78083501,0,0x0,8
tick,0x7ffd597cfb34,78099099,0,0x0,8
tick,0x7ffd597cfb34,78114205,0,0x0,8
tick,0x7ffd597cfb34,78130130,0,0x0,8
tick,0x7ffd597cfb34,78145198,0,0x0,8
tick,0x7ffd597cfb34,78161125,0,0x0,8
tick,0x7ffd597cfb34,78176637,0,0x0,8
tick,0x7ffd597cfb34,78191804,0,0x0,8
tick,0x7ffd597cfb34,78207655,0,0x0,8
tick,0x7ffd597cfb34,78223761,0,0x0,8
tick,0x7ffd597cfb34,78239331,0,0x0,8
tick,0x7ffd597cfb34,78255308,0,0x0,8
tick,0x7ffd597cfb34,78270278,0,0x0,8
tick,0x7ffd597cfb34,78286049,0,0x0,8
tick,0x7ffd597cfb34,78301892,0,0x0,8
tick,0x7ffd597cfb34,78317530,0,0x0,8
tick,0x7ffd597cfb34,78333550,0,0x0,8
tick,0x7ffd597cfb34,78349287,0,0x0,8
tick,0x7ffd597cfb34,78365030,0,0x0,8
tick,0x7ffd597cfb34,78380497,0,0x0,8
tick,0x7ffd597cfb34,78396042,0,0x0,8
tick,0x7ffd597cfb34,78411287,0,0x0,8
tick,0x7ffd597cfb34,78427806,0,0x0,8
tick,0x7ffd597cfb34,78443090,0,0x0,8
tick,0x7ffd597cfb34,78459592,0,0x0,8
tick,0x7ffd597cfb34,78475095,0,0x0,8
tick,0x7ffd597cfb34,78490780,0,0x0,8
tick,0x7ffd597cfb34,78506644,0,0x0,8
tick,0x7ffd597cfb34,78522818,0,0x0,8
tick,0x7ffd597cfb34,78538658,0,0x0,8
tick,0x7ffd597cfb34,78554680,0,0x0,8
tick,0x7ffd597cfb34,78570693,0,0x0,8
tick,0x7ffd597cfb34,78586725,0,0x0,8
tick,0x7ffd597cfb34,78602714,0,0x0,8
tick,0x7ffd597cfb34,78618735,0,0x0,8
tick,0x7ffd597cfb34,78634845,0,0x0,8
tick,0x7ffd597cfb34,78650722,0,0x0,8
tick,0x7ffd597cfb34,78666925,0,0x0,8
tick,0x7ffd597cfb34,78682846,0,0x0,8
tick,0x7ffd597cfb34,78698328,0,0x0,8
tick,0x7ffd597cfb34,78714250,0,0x0,8
tick,0x7ffd597cfb34,78730406,0,0x0,8
tick,0x7ffd597cfb34,78746376,0,0x0,8
tick,0x7ffd597cfb34,78762366,0,0x0,8
tick,0x7ffd597cfb34,78778357,0,0x0,8
tick,0x7ffd597cfb34,78794267,0,0x0,8
tick,0x7ffd597cfb34,78810279,0,0x0,8
tick,0x7ffd597cfb34,78826267,0,0x0,8
tick,0x7ffd597cfb34,78842390,0,0x0,8
tick,0x7ffd597cfb34,78858394,0,0x0,8
tick,0x7ffd597cfb34,78874288,0,0x0,8
tick,0x7ffd597cfb34,78890292,0,0x0,8
tick,0x7ffd597cfb34,78906401,0,0x0,8
tick,0x7ffd597cfb34,78922399,0,0x0,8
tick,0x7ffd597cfb34,78938407,0,0x0,8
tick,0x7ffd597cfb34,78954420,0,0x0,8
tick,0x7ffd597cfb34,78969765,0,0x0,8
tick,0x7ffd597cfb34,78985894,0,0x0,8
tick,0x7ffd597cfb34,79001777,0,0x0,8
tick,0x7ffd597cfb34,79017499,0,0x0,8
tick,0x7ffd597cfb34,79033247,0,0x0,8
tick,0x7ffd597cfb34,79049193,0,0x0,8
tick,0x7ffd597cfb34,79065164,0,0x0,8
tick,0x7ffd597cfb34,79081254,0,0x0,8
tick,0x7ffd597cfb34,79096299,0,0x0,8
tick,0x7ffd597cfb34,79112765,0,0x0,8
tick,0x7ffd597cfb34,79128364,0,0x0,8
tick,0x7ffd597cfb34,79144003,0,0x0,8
tick,0x7ffd597cfb34,79160016,0,0x0,8
tick,0x7ffd597cfb34,79176115,0,0x0,8
tick,0x7ffd597cfb34,79192115,0,0x0,8
tick,0x7ffd597cfb34,79208021,0,0x0,8
tick,0x7ffd597cfb34,79224131,0,0x0,8
tick,0x7ffd597cfb34,79240040,0,0x0,8
tick,0x7ffd597cfb34,79256041,0,0x0,8
tick,0x7ffd597cfb34,79272133,0,0x0,8
tick,0x7ffd597cfb34,79288035,0,0x0,8
tick,0x7ffd597cfb34,79304050,0,0x0,8
tick,0x7ffd597cfb34,79320032,0,0x0,8
tick,0x7ffd597cfb34,79336043,0,0x0,8
tick,0x7ffd597cfb34,79352084,0,0x0,8
tick,0x7ffd597cfb34,79368062,0,0x0,8
tick,0x7ffd597cfb34,79384079,0,0x0,8
tick,0x7ffd597cfb34,79400070,0,0x0,8
tick,0x7ffd597cfb34,79416079,0,0x0,8
tick,0x7ffd597cfb34,79432111,0,0x0,8
tick,0x7ffd597cfb34,79448089,0,0x0,8
tick,0x7ffd597cfb34,79464108,0,0x0,8
tick,0x7ffd597cfb34,79480074,0,0x0,8
tick,0x7ffd597cfb34,79495296,0,0x0,8
tick,0x7ffd597cfb34,79510220,0,0x0,8
tick,0x7ffd597cfb34,79525936,0,0x0,8
tick,0x7ffd597cfb34,79541951,0,0x0,8
tick,0x7ffd597cfb34,79557959,0,0x0,8
tick,0x7ffd597cfb34,79573950,0,0x0,8
tick,0x7ffd597cfb34,79590066,0,0x0,8
tick,0x7ffd597cfb34,79605950,0,0x0,8
tick,0x7ffd597cfb34,79621935,0,0x0,8
tick,0x7ffd597cfb34,79637967,0,0x0,8
tick,0x7ffd597cfb34,79653950,0,0x0,8
tick,0x7ffd597cfb34,79669953,0,0x0,8
tick,0x7ffd597cfb34,79685960,0,0x0,8
tick,0x7ffd597cfb34,79701982,0,0x0,8
tick,0x7ffd597cfb34,79717960,0,0x0,8
tick,0x7ffd597cfb34,79733984,0,0x0,8
tick,0x7ffd597cfb34,79749994,0,0x0,8
tick,0x7ffd597cfb34,79766008,0,0x0,8
tick,0x7ffd597cfb34,79781984,0,0x0,8
tick,0x7ffd597cfb34,79798056,0,0x0,8
tick,0x7ffd597cfb34,79813005,0,0x0,8
tick,0x7ffd597cfb34,79829014,0,0x0,8
tick,0x7ffd597cfb34,79844013,0,0x0,8
tick,0x7ffd597cfb34,79860014,0,0x0,8
tick,0x7ffd597cfb34,79876029,0,0x0,8
tick,0x7ffd597cfb34,79892014,0,0x0,8
tick,0x7ffd597cfb34,79908006,0,0x0,8
tick,0x7ffd597cfb34,79924039,0,0x0,8
tick,0x7ffd597cfb34,79939152,0,0x0,8
tick,0x7ffd597cfb34,79954023,0,0x0,8
tick,0x7ffd597cfb34,79969240,0,0x0,8
tick,0x7ffd597cfb34,79984874,0,0x0,8
tick,0x7ffd597cfb34,79999888,0,0x0,8
tick,0x7ffd597cfb34,80015893,0,0x0,8
tick,0x7ffd597cfb34,80032042,0,0x0,8
tick,0x7ffd597cfb34,80046883,0,0x0,8
tick,0x7ffd597cfb34,80062901,0,0x0,8
tick,0x7ffd597cfb34,80077901,0,0x0,8
tick,0x7ffd597cfb34,80093912,0,0x0,8
tick,0x7ffd597cfb34,80108900,0,0x0,8
tick,0x7ffd597cfb34,80123889,0,0x0,8
tick,0x7ffd597cfb34,80139913,0,0x0,8
tick,0x7ffd597cfb34,80155903,0,0x0,8
tick,0x7ffd597cfb34,80171915,0,0x0,8
tick,0x7ffd597cfb34,80186917,0,0x0,8
tick,0x7ffd597cfb34,80201909,0,0x0,8
tick,0x7ffd597cfb34,80217947,0,0x0,8
tick,0x7ffd597cfb34,80233942,0,0x0,8
tick,0x7ffd597cfb34,80249952,0,0x0,8
tick,0x7ffd597cfb34,80265930,0,0x0,8
tick,0x7ffd597cfb34,80281943,0,0x0,8
tick,0x7ffd597cfb34,80297935,0,0x0,8
tick,0x7ffd597cfb34,80313922,0,0x0,8
tick,0x7ffd597cfb34,80329939,0,0x0,8
tick,0x7ffd597cfb34,80345942,0,0x0,8
tick,0x7ffd597cfb34,80361953,0,0x0,8
tick,0x7ffd597cfb34,80378053,0,0x0,8
tick,0x7ffd597cfb34,80393950,0,0x0,8
tick,0x7ffd597cfb34,80410183,0,0x0,8
tick,0x7ffd597cfb34,80426064,0,0x0,8
tick,0x7ffd597cfb34,80442012,0,0x0,8
tick,0x7ffd597cfb34,80457988,0,0x0,8
tick,0x7ffd597cfb34,80474051,0,0x0,8
tick,0x7ffd597cfb34,80490078,0,0x0,8
tick,0x7ffd597cfb34,80505995,0,0x0,8
tick,0x7ffd597cfb34,80522156,0,0x0,8
tick,0x7ffd597cfb34,80537982,0,0x0,8
tick,0x7ffd597cfb34,80554016,0,0x0,8
tick,0x7ffd597cfb34,80570374,0,0x0,8
tick,0x7ffd597cfb34,80586249,0,0x0,8
tick,0x7ffd597cfb34,80602104,0,0x0,8
tick,0x7ffd597cfb34,80618077,0,0x0,8
tick,0x7ffd597cfb34,80634132,0,0x0,8
tick,0x7ffd597cfb34,80650171,0,0x0,8
tick,0x7ffd597cfb34,80666080,0,0x0,8
tick,0x7ffd597cfb34,80682228,0,0x0,8
tick,0x7ffd597cfb34,80698332,0,0x0,8
tick,0x7ffd597cfb34,80714174,0,0x0,8
tick,0x7ffd597cfb34,80730034,0,0x0,8
tick,0x7ffd597cfb34,80746445,0,0x0,8
tick,0x7ffd597cfb34,80762159,0,0x0,8
tick,0x7ffd597cfb34,80778043,0,0x0,8
tick,0x7ffd597cfb34,80794978,0,0x0,8
tick,0x7ffd597cfb34,80810060,0,0x0,8
tick,0x7ffd597cfb34,80826041,0,0x0,8
tick,0x7ffd597cfb34,80843768,0,0x0,8
tick,0x7ffd597cfb34,80858046,0,0x0,8
tick,0x7ffd597cfb34,80874244,0,0x0,8
tick,0x7ffd597cfb34,80891034,0,0x0,8
tick,0x7ffd597cfb34,80906400,0,0x0,8
tick,0x7ffd597cfb34,80922171,0,0x0,8
tick,0x7ffd597cfb34,80940525,0,0x0,8
tick,0x7ffd597cfb34,80954090,0,0x0,8
tick,0x7ffd597cfb34,80970168,0,0x0,8
tick,0x7ffd597cfb34,80987476,0,0x0,8
tick,0x7ffd597cfb34,81002118,0,0x0,8
tick,0x7ffd597cfb34,81018086,0,0x0,8
tick,0x7ffd597cfb34,81034203,0,0x0,8
tick,0x7ffd597cfb34,81050326,0,0x0,8
tick,0x7ffd597cfb34,81066092,0,0x0,8
tick,0x7ffd597cfb34,81082103,0,0x0,8
tick,0x7ffd597cfb34,81098133,0,0x0,8
tick,0x7ffd597cfb34,81114667,0,0x0,8
tick,0x7ffd597cfb34,81130153,0,0x0,8
tick,0x7ffd597cfb34,81146119,0,0x0,8
tick,0x7ffd597cfb34,81162188,0,0x0,8
tick,0x7ffd597cfb34,81178156,0,0x0,8
tick,0x7ffd597cfb34,81194280,0,0x0,8
tick,0x7ffd597cfb34,81210130,0,0x0,8
tick,0x7ffd597cfb34,81226148,0,0x0,8
tick,0x7ffd597cfb34,81242141,0,0x0,8
tick,0x7ffd597cfb34,81258158,0,0x0,8
tick,0x7ffd597cfb34,81274167,0,0x0,8
tick,0x7ffd597cfb34,81290170,0,0x0,8
tick,0x7ffd597cfb34,81306149,0,0x0,8
tick,0x7ffd597cfb34,81322200,0,0x0,8
tick,0x7ffd597cfb34,81338165,0,0x0,8
tick,0x7ffd597cfb34,81354185,0,0x0,8
tick,0x7ffd597cfb34,81370214,0,0x0,8
tick,0x7ffd597cfb34,81386200,0,0x0,8
tick,0x7ffd597cfb34,81402191,0,0x0,8
tick,0x7ffd597cfb34,81418428,0,0x0,8
tick,0x7ffd597cfb34,81434182,0,0x0,8
tick,0x7ffd597cfb34,81450181,0,0x0,8
tick,0x7ffd597cfb34,81466198,0,0x0,8
tick,0x7ffd597cfb34,81481697,0,0x0,8
tick,0x7ffd597cfb34,81497105,0,0x0,8
tick,0x7ffd597cfb34,81513170,0,0x0,8
tick,0x7ffd597cfb34,81529886,0,0x0,8
tick,0x7ffd597cfb34,81545082,0,0x0,8
tick,0x7ffd597cfb34,81560076,0,0x0,8
tick,0x7ffd597cfb34,81576080,0,0x0,8
tick,0x7ffd597cfb34,81591104,0,0x0,8
tick,0x7ffd597cfb34,81607110,0,0x0,8
tick,0x7ffd597cfb34,81623104,0,0x0,8
tick,0x7ffd597cfb34,81639861,0,0x0,8
tick,0x7ffd597cfb34,81655718,0,0x0,8
tick,0x7ffd597cfb34,81670164,0,0x0,8
tick,0x7ffd597cfb34,81686149,0,0x0,8
tick,0x7ffd597cfb34,81701125,0,0x0,8
tick,0x7ffd597cfb34,81717116,0,0x0,8
tick,0x7ffd597cfb34,81733123,0,0x0,8
tick,0x7ffd597cfb34,81749204,0,0x0,8
tick,0x7ffd597cfb34,81765563,0,0x0,8
tick,0x7ffd597cfb34,81781320,0,0x0,8
tick,0x7ffd597cfb34,81797199,0,0x0,8
tick,0x7ffd597cfb34,81813144,0,0x0,8
tick,0x7ffd597cfb34,81830877,0,0x0,8
tick,0x7ffd597cfb34,81845140,0,0x0,8
tick,0x7ffd597cfb34,81861192,0,0x0,8
tick,0x7ffd597cfb34,81877159,0,0x0,8
tick,0x7ffd597cfb34,81893223,0,0x0,8
tick,0x7ffd597cfb34,81909199,0,0x0,8
tick,0x7ffd597cfb34,81925273,0,0x0,8
tick,0x7ffd597cfb34,81940174,0,0x0,8
tick,0x7ffd597cfb34,81956177,0,0x0,8
tick,0x7ffd597cfb34,81971189,0,0x0,8
tick,0x7ffd597cfb34,81987615,0,0x0,8
tick,0x7ffd597cfb34,82003197,0,0x0,8
tick,0x7ffd597cfb34,82019212,0,0x0,8
tick,0x7ffd597cfb34,82035203,0,0x0,8
tick,0x7ffd597cfb34,82052292,0,0x0,8
tick,0x7ffd597cfb34,82067208,0,0x0,8
tick,0x7ffd597cfb34,82083217,0,0x0,8
tick,0x7ffd597cfb34,82099207,0,0x0,8
tick,0x7ffd597cfb34,82115219,0,0x0,8
tick,0x7ffd597cfb34,82131222,0,0x0,8
tick,0x7ffd597cfb34,82147230,0,0x0,8
tick,0x7ffd597cfb34,82163239,0,0x0,8
tick,0x7ffd597cfb34,82179257,0,0x0,8
tick,0x7ffd597cfb34,82195250,0,0x0,8
tick,0x7ffd597cfb34,82211243,0,0x0,8
tick,0x7ffd597cfb34,82227222,0,0x0,8
tick,0x7ffd597cfb34,82242258,0,0x0,8
tick,0x7ffd597cfb34,82258255,0,0x0,8
tick,0x7ffd597cfb34,82273267,0,0x0,8
tick,0x7ffd597cfb34,82289237,0,0x0,8
tick,0x7ffd597cfb34,82305263,0,0x0,8
tick,0x7ffd597cfb34,82321244,0,0x0,8
tick,0x7ffd597cfb34,82337278,0,0x0,8
tick,0x7ffd597cfb34,82352305,0,0x0,8
tick,0x7ffd597cfb34,82368288,0,0x0,8
tick,0x7ffd597cfb34,82383388,0,0x0,8
tick,0x7ffd597cfb34,82399286,0,0x0,8
tick,0x7ffd597cfb34,82414278,0,0x0,8
tick,0x7ffd597cfb34,82429342,0,0x0,8
tick,0x7ffd597cfb34,82445317,0,0x0,8
tick,0x7ffd597cfb34,82461321,0,0x0,8
tick,0x7ffd597cfb34,82477314,0,0x0,8
tick,0x7ffd597cfb34,82493299,0,0x0,8
tick,0x7ffd597cfb34,82509313,0,0x0,8
tick,0x7ffd597cfb34,82525331,0,0x0,8
tick,0x7ffd597cfb34,82541310,0,0x0,8
tick,0x7ffd597cfb34,82556332,0,0x0,8
tick,0x7ffd597cfb34,82571317,0,0x0,8
tick,0x7ffd597cfb34,82587210,0,0x0,8
tick,0x7ffd597cfb34,82602199,0,0x0,8
tick,0x7ffd597cfb34,82617220,0,0x0,8
tick,0x7ffd597cfb34,82633203,0,0x0,8
tick,0x7ffd597cfb34,82648270,0,0x0,8
tick,0x7ffd597cfb34,82663197,0,0x0,8
tick,0x7ffd597cfb34,82679266,0,0x0,8
tick,0x7ffd597cfb34,82694276,0,0x0,8
tick,0x7ffd597cfb34,82710627,0,0x0,8
tick,0x7ffd597cfb34,82725279,0,0x0,8
tick,0x7ffd597cfb34,82741613,0,0x0,8
tick,0x7ffd597cfb34,82756230,0,0x0,8
tick,0x7ffd597cfb34,82772267,0,0x0,8
tick,0x7ffd597cfb34,82787233,0,0x0,8
tick,0x7ffd597cfb34,82803260,0,0x0,8
tick,0x7ffd597cfb34,82819260,0,0x0,8
tick,0x7ffd597cfb34,82835272,0,0x0,8
tick,0x7ffd597cfb34,82851259,0,0x0,8
tick,0x7ffd597cfb34,82867304,0,0x0,8
tick,0x7ffd597cfb34,82883327,0,0x0,8
tick,0x7ffd597cfb34,82898686,0,0x0,8
tick,0x7ffd597cfb34,82913261,0,0x0,8
tick,0x7ffd597cfb34,82928333,0,0x0,8
tick,0x7ffd597cfb34,82944661,0,0x0,8
tick,0x7ffd597cfb34,82960318,0,0x0,8
tick,0x7ffd597cfb34,82975288,0,0x0,8
tick,0x7ffd597cfb34,82991297,0,0x0,8
tick,0x7ffd597cfb34,83006474,0,0x0,8
tick,0x7ffd597cfb34,83022522,0,0x0,8
tick,0x7ffd597cfb34,83037291,0,0x0,8
tick,0x7ffd597cfb34,83052307,0,0x0,8
tick,0x7ffd597cfb34,83068359,0,0x0,8
tick,0x7ffd597cfb34,83084396,0,0x0,8
tick,0x7ffd597cfb34,83100373,0,0x0,8
tick,0x7ffd597cfb34,83116474,0,0x0,8
tick,0x7ffd597cfb34,83132168,0,0x0,8
tick,0x7ffd597cfb34,83147386,0,0x0,8
tick,0x7ffd597cfb34,83162927,0,0x0,8
tick,0x7ffd597cfb34,83178779,0,0x0,8
tick,0x7ffd597cfb34,83194243,0,0x0,8
tick,0x7ffd597cfb34,83209974,0,0x0,8
tick,0x7ffd597cfb34,83226077,0,0x0,8
tick,0x7ffd597cfb34,83240939,0,0x0,8
tick,0x7ffd597cfb34,83256811,0,0x0,8
tick,0x7ffd597cfb34,83271957,0,0x0,8
tick,0x7ffd597cfb34,83287944,0,0x0,8
tick,0x7ffd597cfb34,83303831,0,0x0,8
tick,0x7ffd597cfb34,83319809,0,0x0,8
tick,0x7ffd597cfb34,83335755,0,0x0,8
tick,0x7ffd597cfb34,83350999,0,0x0,8
tick,0x7ffd597cfb34,83366393,0,0x0,8
tick,0x7ffd597cfb34,83382411,0,0x0,8
tick,0x7ffd597cfb34,83398581,0,0x0,8
tick,0x7ffd597cfb34,83413441,0,0x0,8
tick,0x7ffd597cfb34,83428744,0,0x0,8
tick,0x7ffd597cfb34,83444931,0,0x0,8
tick,0x7ffd597cfb34,83459915,0,0x0,8
tick,0x7ffd597cfb34,83475846,0,0x0,8
tick,0x7ffd597cfb34,83490709,0,0x0,8
tick,0x7ffd597cfb34,83506883,0,0x0,8
tick,0x7ffd597cfb34,83521710,0,0x0,8
tick,0x7ffd597cfb34,83536812,0,0x0,8
tick,0x7ffd597cfb34,83552715,0,0x0,8
tick,0x7ffd597cfb34,83567854,0,0x0,8
tick,0x7ffd597cfb34,83583874,0,0x0,8
tick,0x7ffd597cfb34,83599849,0,0x0,8
tick,0x7ffd597cfb34,83615874,0,0x0,8
tick,0x7ffd597cfb34,83631092,0,0x0,8
tick,0x7ffd597cfb34,83647090,0,0x0,8
tick,0x7ffd597cfb34,83662993,0,0x0,8
tick,0x7ffd597cfb34,83678115,0,0x0,8
tick,0x7ffd597cfb34,83694097,0,0x0,8
tick,0x7ffd597cfb34,83709450,0,0x0,8
tick,0x7ffd597cfb34,83725716,0,0x0,8
tick,0x7ffd597cfb34,83741647,0,0x0,8
tick,0x7ffd597cfb34,83756623,0,0x0,8
tick,0x7ffd597cfb34,83772567,0,0x0,8
tick,0x7ffd597cfb34,83788649,0,0x0,8
tick,0x7ffd597cfb34,83804066,0,0x0,8
tick,0x7ffd597cfb34,83819575,0,0x0,8
tick,0x7ffd597cfb34,83834430,0,0x0,8
tick,0x7ffd597cfb34,83850958,0,0x0,8
tick,0x7ffd597cfb34,83866050,0,0x0,8
tick,0x7ffd597cfb34,83881730,0,0x0,8
tick,0x7ffd597cfb34,83896682,0,0x0,8
tick,0x7ffd597cfb34,83912473,0,0x0,8
tick,0x7ffd597cfb34,83928222,0,0x0,8
tick,0x7ffd597cfb34,83944331,0,0x0,8
tick,0x7ffd597cfb34,83959537,0,0x0,8
tick,0x7ffd597cfb34,83975218,0,0x0,8
tick,0x7ffd597cfb34,83990780,0,0x0,8
tick,0x7ffd597cfb34,84006558,0,0x0,8
tick,0x7ffd597cfb34,84022501,0,0x0,8
tick,0x7ffd597cfb34,84038650,0,0x0,8
tick,0x7ffd597cfb34,84053647,0,0x0,8
tick,0x7ffd597cfb34,84069250,0,0x0,8
tick,0x7ffd597cfb34,84084770,0,0x0,8
tick,0x7ffd597cfb34,84100785,0,0x0,8
tick,0x7ffd597cfb34,84116637,0,0x0,8
tick,0x7ffd597cfb34,84132423,0,0x0,8
tick,0x7ffd597cfb34,84148257,0,0x0,8
tick,0x7ffd597cfb34,84164545,0,0x0,8
tick,0x7ffd597cfb34,84180036,0,0x0,8
tick,0x7ffd597cfb34,84195780,0,0x0,8
tick,0x7ffd597cfb34,84211577,0,0x0,8
tick,0x7ffd597cfb34,84227143,0,0x0,8
tick,0x7ffd597cfb34,84242278,0,0x0,8
tick,0x7ffd597cfb34,84258548,0,0x0,8
tick,0x7ffd597cfb34,84273993,0,0x0,8
tick,0x7ffd597cfb34,84289986,0,0x0,8
tick,0x7ffd597cfb34,84305606,0,0x0,8
tick,0x7ffd597cfb34,84321370,0,0x0,8
tick,0x7ffd597cfb34,84337123,0,0x0,8
tick,0x7ffd597cfb34,84352985,0,0x0,8
tick,0x7ffd597cfb34,84369520,0,0x0,8
tick,0x7ffd597cfb34,84384981,0,0x0,8
tick,0x7ffd597cfb34,84401520,0,0x0,8
tick,0x7ffd597cfb34,84417761,0,0x0,8
tick,0x7ffd597cfb34,84433816,0,0x0,8
tick,0x7ffd597cfb34,84449576,0,0x0,8
tick,0x7ffd597cfb34,84465486,0,0x0,8
tick,0x7ffd597cfb34,84481438,0,0x0,8
tick,0x7ffd597cfb34,84497748,0,0x0,8
tick,0x7ffd597cfb34,84514384,0,0x0,8
tick,0x7ffd597cfb34,84529577,0,0x0,8
tick,0x7ffd597cfb34,84545733,0,0x0,8
tick,0x7ffd597cfb34,84561494,0,0x0,8
tick,0x7ffd597cfb34,84577566,0,0x0,8
tick,0x7ffd597cfb34,84593034,0,0x0,8
tick,0x7ffd597cfb34,84609026,0,0x0,8
tick,0x7ffd597cfb34,84624571,0,0x0,8
tick,0x7ffd597cfb34,84640404,0,0x0,8
tick,0x7ffd597cfb34,84656171,0,0x0,8
tick,0x7ffd597cfb34,84671699,0,0x0,8
tick,0x7ffd597cfb34,84687568,0,0x0,8
tick,0x7ffd597cfb34,84703201,0,0x0,8
tick,0x7ffd597cfb34,84718816,0,0x0,8
tick,0x7ffd597cfb34,84734561,0,0x0,8
tick,0x7ffd597cfb34,84750229,0,0x0,8
tick,0x7ffd597cfb34,84766298,0,0x0,8
tick,0x7ffd597cfb34,84781927,0,0x0,8
tick,0x7ffd597cfb34,84797391,0,0x0,8
tick,0x7ffd597cfb34,84813119,0,0x0,8
tick,0x7ffd597cfb34,84828407,0,0x0,8
tick,0x7ffd597cfb34,84843922,0,0x0,8
tick,0x7ffd597cfb34,84859825,0,0x0,8
tick,0x7ffd597cfb34,84875194,0,0x0,8
tick,0x7ffd597cfb34,84891199,0,0x0,8
tick,0x7ffd597cfb34,84906560,0,0x0,8
tick,0x7ffd597cfb34,84922570,0,0x0,8
tick,0x7ffd597cfb34,84938565,0,0x0,8
tick,0x7ffd597cfb34,84954654,0,0x0,8
tick,0x7ffd597cfb34,84970568,0,0x0,8
tick,0x7ffd597cfb34,84986587,0,0x0,8
tick,0x7ffd597cfb34,85002659,0,0x0,8
tick,0x7ffd597cfb34,85018600,0,0x0,8
tick,0x7ffd597cfb34,85034596,0,0x0,8
tick,0x7ffd597cfb34,85050744,0,0x0,8
tick,0x7ffd597cfb34,85066592,0,0x0,8
tick,0x7ffd597cfb34,85082733,0,0x0,8
tick,0x7ffd597cfb34,85098463,0,0x0,8
tick,0x7ffd597cfb34,85113811,0,0x0,8
tick,0x7ffd597cfb34,85129231,0,0x0,8
tick,0x7ffd597cfb34,85145277,0,0x0,8
tick,0x7ffd597cfb34,85160679,0,0x0,8
tick,0x7ffd597cfb34,85176930,0,0x0,8
tick,0x7ffd597cfb34,85192949,0,0x0,8
tick,0x7ffd597cfb34,85209046,0,0x0,8
tick,0x7ffd597cfb34,85224287,0,0x0,8
tick,0x7ffd597cfb34,85239945,0,0x0,8
tick,0x7ffd597cfb34,85255099,0,0x0,8
tick,0x7ffd597cfb34,85270384,0,0x0,8
tick,0x7ffd597cfb34,85286115,0,0x0,8
tick,0x7ffd597cfb34,85302397,0,0x0,8
tick,0x7ffd597cfb34,85318302,0,0x0,8
tick,0x7ffd597cfb34,85333963,0,0x0,8
tick,0x7ffd597cfb34,85350327,0,0x0,8
tick,0x7ffd597cfb34,85367002,0,0x0,8
tick,0x7ffd597cfb34,85382502,0,0x0,8
tick,0x7ffd597cfb34,85397292,0,0x0,8
tick,0x7ffd597cfb34,85412461,0,0x0,8
tick,0x7ffd597cfb34,85429098,0,0x0,8
tick,0x7ffd597cfb34,85445215,0,0x0,8
tick,0x7ffd597cfb34,85460801,0,0x0,8
tick,0x7ffd597cfb34,85476824,0,0x0,8
tick,0x7ffd597cfb34,85492829,0,0x0,8
tick,0x7ffd597cfb34,85508811,0,0x0,8
tick,0x7ffd597cfb34,85523923,0,0x0,8
tick,0x7ffd597cfb34,85538749,0,0x0,8
tick,0x7ffd597cfb34,85554280,0,0x0,8
tick,0x7ffd597cfb34,85570122,0,0x0,8
tick,0x7ffd597cfb34,85585488,0,0x0,8
tick,0x7ffd597cfb34,85601182,0,0x0,8
tick,0x7ffd597cfb34,85617089,0,0x0,8
tick,0x7ffd597cfb34,85632125,0,0x0,8
tick,0x7ffd597cfb34,85647363,0,0x0,8
tick,0x7ffd597cfb34,85663072,0,0x0,8
tick,0x7ffd597cfb34,85678706,0,0x0,8
tick,0x7ffd597cfb34,85694549,0,0x0,8
tick,0x7ffd597cfb34,85709066,0,0x0,8
tick,0x7ffd597cfb34,85724721,0,0x0,8
tick,0x7ffd597cfb34,85740161,0,0x0,8
tick,0x7ffd597cfb34,85755902,0,0x0,8
tick,0x7ffd597cfb34,85772239,0,0x0,8
tick,0x7ffd597cfb34,85787745,0,0x0,8
tick,0x7ffd597cfb34,85803302,0,0x0,8
tick,0x7ffd597cfb34,85819172,0,0x0,8
tick,0x7ffd597cfb34,85834444,0,0x0,8
tick,0x7ffd597cfb34,85850393,0,0x0,8
tick,0x7ffd597cfb34,85866385,0,0x0,8
tick,0x7ffd597cfb34,85882494,0,0x0,8
tick,0x7ffd597cfb34,85898179,0,0x0,8
tick,0x7ffd597cfb34,85913393,0,0x0,8
tick,0x7ffd597cfb34,85928770,0,0x0,8
tick,0x7ffd597cfb34,85944045,0,0x0,8
tick,0x7ffd597cfb34,85959646,0,0x0,8
tick,0x7ffd597cfb34,85975024,0,0x0,8
tick,0x7ffd597cfb34,85990333,0,0x0,8
tick,0x7ffd597cfb34,86005369,0,0x0,8
tick,0x7ffd597cfb34,86020680,0,0x0,8
tick,0x7ffd597cfb34,86036703,0,0x0,8
tick,0x7ffd597cfb34,86051751,0,0x0,8
tick,0x7ffd597cfb34,86067400,0,0x0,8
tick,0x7ffd597cfb34,86083121,0,0x0,8
tick,0x7ffd597cfb34,86098294,0,0x0,8
tick,0x7ffd597cfb34,86113384,0,0x0,8
tick,0x7ffd597cfb34,86129368,0,0x0,8
tick,0x7ffd597cfb34,86145414,0,0x0,8
tick,0x7ffd597cfb34,86161389,0,0x0,8
tick,0x7ffd597cfb34,86177379,0,0x0,8
tick,0x7ffd597cfb34,86193374,0,0x0,8
tick,0x7ffd597cfb34,86209377,0,0x0,8
tick,0x7ffd597cfb34,86225416,0,0x0,8
tick,0x7ffd597cfb34,86241385,0,0x0,8
tick,0x7ffd597cfb34,86257390,0,0x0,8
tick,0x7ffd597cfb34,86273393,0,0x0,8
tick,0x7ffd597cfb34,86289418,0,0x0,8
tick,0x7ffd597cfb34,86305439,0,0x0,8
tick,0x7ffd597cfb34,86321438,0,0x0,8
tick,0x7ffd597cfb34,86337409,0,0x0,8
tick,0x7ffd597cfb34,86353427,0,0x0,8
tick,0x7ffd597cfb34,86369419,0,0x0,8
tick,0x7ffd597cfb34,86385426,0,0x0,8
tick,0x7ffd597cfb34,86401400,0,0x0,8
tick,0x7ffd597cfb34,86417404,0,0x0,8
tick,0x7ffd597cfb34,86433361,0,0x0,8
tick,0x7ffd597cfb34,86449386,0,0x0,8
tick,0x7ffd597cfb34,86465412,0,0x0,8
tick,0x7ffd597cfb34,86481403,0,0x0,8
tick,0x7ffd597cfb34,86497409,0,0x0,8
tick,0x7ffd597cfb34,86513333,0,0x0,8
tick,0x7ffd597cfb34,86529401,0,0x0,8
tick,0x7ffd597cfb34,86545408,0,0x0,8
tick,0x7ffd597cfb34,86561392,0,0x0,8
tick,0x7ffd597cfb34,86577476,0,0x0,8
tick,0x7ffd597cfb34,86592721,0,0x0,8
tick,0x7ffd597cfb34,86608402,0,0x0,8
tick,0x7ffd597cfb34,86623562,0,0x0,8
tick,0x7ffd597cfb34,86639408,0,0x0,8
tick,0x7ffd597cfb34,86655591,0,0x0,8
tick,0x7ffd597cfb34,86670827,0,0x0,8
tick,0x7ffd597cfb34,86686588,0,0x0,8
tick,0x7ffd597cfb34,86702570,0,0x0,8
tick,0x7ffd597cfb34,86717988,0,0x0,8
tick,0x7ffd597cfb34,86733534,0,0x0,8
tick,0x7ffd597cfb34,86748438,0,0x0,8
tick,0x7ffd597cfb34,86764412,0,0x0,8
tick,0x7ffd597cfb34,86780410,0,0x0,8
tick,0x7ffd597cfb34,86796436,0,0x0,8
tick,0x7ffd597cfb34,86812435,0,0x0,8
tick,0x7ffd597cfb34,86828420,0,0x0,8
tick,0x7ffd597cfb34,86844449,0,0x0,8
tick,0x7ffd597cfb34,86860426,0,0x0,8
tick,0x7ffd597cfb34,86876082,0,0x0,8
tick,0x7ffd597cfb34,86891299,0,0x0,8
tick,0x7ffd597cfb34,86906425,0,0x0,8
tick,0x7ffd597cfb34,86922423,0,0x0,8
tick,0x7ffd597cfb34,86938452,0,0x0,8
tick,0x7ffd597cfb34,86953705,0,0x0,8
tick,0x7ffd597cfb34,86968999,0,0x0,8
tick,0x7ffd597cfb34,86985076,0,0x0,8
tick,0x7ffd597cfb34,87000355,0,0x0,8
tick,0x7ffd597cfb34,87016516,0,0x0,8
tick,0x7ffd597cfb34,87031755,0,0x0,8
tick,0x7ffd597cfb34,87047769,0,0x0,8
tick,0x7ffd597cfb34,87063362,0,0x0,8
tick,0x7ffd597cfb34,87079182,0,0x0,8
tick,0x7ffd597cfb34,87094338,0,0x0,8
tick,0x7ffd597cfb34,87109321,0,0x0,8
tick,0x7ffd597cfb34,87125319,0,0x0,8
tick,0x7ffd597cfb34,87141439,0,0x0,8
tick,0x7ffd597cfb34,87157548,0,0x0,8
tick,0x7ffd597cfb34,87172596,0,0x0,8
tick,0x7ffd597cfb34,87187523,0,0x0,8
tick,0x7ffd597cfb34,87203654,0,0x0,8
tick,0x7ffd597cfb34,87219256,0,0x0,8
tick,0x7ffd597cfb34,87234465,0,0x0,8
tick,0x7ffd597cfb34,87250412,0,0x0,8
tick,0x7ffd597cfb34,87265627,0,0x0,8
tick,0x7ffd597cfb34,87281818,0,0x0,8
tick,0x7ffd597cfb34,87297028,0,0x0,8
tick,0x7ffd597cfb34,87312946,0,0x0,8
tick,0x7ffd597cfb34,87328332,0,0x0,8
tick,0x7ffd597cfb34,87343421,0,0x0,8
tick,0x7ffd597cfb34,87358486,0,0x0,8
tick,0x7ffd597cfb34,87373912,0,0x0,8
tick,0x7ffd597cfb34,87388948,0,0x0,8
tick,0x7ffd597cfb34,87404493,0,0x0,8
tick,0x7ffd597cfb34,87420059,0,0x0,8
tick,0x7ffd597cfb34,87435459,0,0x0,8
tick,0x7ffd597cfb34,87450576,0,0x0,8
tick,0x7ffd597cfb34,87466127,0,0x0,8
tick,0x7ffd597cfb34,87481777,0,0x0,8
tick,0x7ffd597cfb34,87497396,0,0x0,8
tick,0x7ffd597cfb34,87512274,0,0x0,8
tick,0x7ffd597cfb34,87527576,0,0x0,8
tick,0x7ffd597cfb34,87543064,0,0x0,8
tick,0x7ffd597cfb34,87559104,0,0x0,8
tick,0x7ffd597cfb34,87574657,0,0x0,8
tick,0x7ffd597cfb34,87590716,0,0x0,8
tick,0x7ffd597cfb34,87606651,0,0x0,8
tick,0x7ffd597cfb34,87622654,0,0x0,8
tick,0x7ffd597cfb34,87637642,0,0x0,8
tick,0x7ffd597cfb34,87653664,0,0x0,8
tick,0x7ffd597cfb34,87668680,0,0x0,8
tick,0x7ffd597cfb34,87683786,0,0x0,8
tick,0x7ffd597cfb34,87699597,0,0x0,8
tick,0x7ffd597cfb34,87714658,0,0x0,8
tick,0x7ffd597cfb34,87730491,0,0x0,8
tick,0x7ffd597cfb34,87745648,0,0x0,8
tick,0x7ffd597cfb34,87761473,0,0x0,8
tick,0x7ffd597cfb34,87776661,0,0x0,8
tick,0x7ffd597cfb34,87792705,0,0x0,8
tick,0x7ffd597cfb34,87807697,0,0x0,8
tick,0x7ffd597cfb34,87823435,0,0x0,8
tick,0x7ffd597cfb34,87839253,0,0x0,8
tick,0x7ffd597cfb34,87854946,0,0x0,8
tick,0x7ffd597cfb34,87870139,0,0x0,8
tick,0x7ffd597cfb34,87885291,0,0x0,8
tick,0x7ffd597cfb34,87900961,0,0x0,8
tick,0x7ffd597cfb34,87916697,0,0x0,8
tick,0x7ffd597cfb34,87932620,0,0x0,8
tick,0x7ffd597cfb34,87948528,0,0x0,8
tick,0x7ffd597cfb34,87964503,0,0x0,8
tick,0x7ffd597cfb34,87980524,0,0x0,8
tick,0x7ffd597cfb34,87996544,0,0x0,8
tick,0x7ffd597cfb34,88011959,0,0x0,8
tick,0x7ffd597cfb34,88027612,0,0x0,8
tick,0x7ffd597cfb34,88043038,0,0x0,8
tick,0x7ffd597cfb34,88058192,0,0x0,8
tick,0x7ffd597cfb34,88073485,0,0x0,8
tick,0x7ffd597cfb34,88089488,0,0x0,8
tick,0x7ffd597cfb34,88104713,0,0x0,8
tick,0x7ffd597cfb34,88119940,0,0x0,8
tick,0x7ffd597cfb34,88135441,0,0x0,8
tick,0x7ffd597cfb34,88150837,0,0x0,8
tick,0x7ffd597cfb34,88166366,0,0x0,8
tick,0x7ffd597cfb34,88182028,0,0x0,8
tick,0x7ffd597cfb34,88197514,0,0x0,8
tick,0x7ffd597cfb34,88214001,0,0x0,8
tick,0x7ffd597cfb34,88229636,0,0x0,8
tick,0x7ffd597cfb34,88245422,0,0x0,8
tick,0x7ffd597cfb34,88260890,0,0x0,8
tick,0x7ffd597cfb34,88276719,0,0x0,8
tick,0x7ffd597cfb34,88292520,0,0x0,8
tick,0x7ffd597cfb34,88308511,0,0x0,8
tick,0x7ffd597cfb34,88324554,0,0x0,8
tick,0x7ffd597cfb34,88340015,0,0x0,8
tick,0x7ffd597cfb34,88355529,0,0x0,8
tick,0x7ffd597cfb34,88370519,0,0x0,8
tick,0x7ffd597cfb34,88386531,0,0x0,8
tick,0x7ffd597cfb34,88402522,0,0x0,8
tick,0x7ffd597cfb34,88418574,0,0x0,8
tick,0x7ffd597cfb34,88434555,0,0x0,8
tick,0x7ffd597cfb34,88450579,0,0x0,8
tick,0x7ffd597cfb34,88466511,0,0x0,8
tick,0x7ffd597cfb34,88482578,0,0x0,8
tick,0x7ffd597cfb34,88498532,0,0x0,8
tick,0x7ffd597cfb34,88514571,0,0x0,8
tick,0x7ffd597cfb34,88530529,0,0x0,8
tick,0x7ffd597cfb34,88546576,0,0x0,8
tick,0x7ffd597cfb34,88562272,0,0x0,8
tick,0x7ffd597cfb34,88578088,0,0x0,8
tick,0x7ffd597cfb34,88593932,0,0x0,8
tick,0x7ffd597cfb34,88609407,0,0x0,8
tick,0x7ffd597cfb34,88624492,0,0x0,8
tick,0x7ffd597cfb34,88640009,0,0x0,8
tick,0x7ffd597cfb34,88656482,0,0x0,8
tick,0x7ffd597cfb34,88671358,0,0x0,8
tick,0x7ffd597cfb34,88686654,0,0x0,8
tick,0x7ffd597cfb34,88702470,0,0x0,8
tick,0x7ffd597cfb34,88717632,0,0x0,8
tick,0x7ffd597cfb34,88733062,0,0x0,8
tick,0x7ffd597cfb34,88748302,0,0x0,8
tick,0x7ffd597cfb34,88763870,0,0x0,8
tick,0x7ffd597cfb34,88779275,0,0x0,8
tick,0x7ffd597cfb34,88794887,0,0x0,8
tick,0x7ffd597cfb34,88810282,0,0x0,8
tick,0x7ffd597cfb34,88825410,0,0x0,8
tick,0x7ffd597cfb34,88841008,0,0x0,8
tick,0x7ffd597cfb34,88857148,0,0x0,8
tick,0x7ffd597cfb34,88872343,0,0x0,8
tick,0x7ffd597cfb34,88887611,0,0x0,8
tick,0x7ffd597cfb34,88903370,0,0x0,8
tick,0x7ffd597cfb34,88918462,0,0x0,8
tick,0x7ffd597cfb34,88934038,0,0x0,8
tick,0x7ffd597cfb34,88948749,0,0x0,8
tick,0x7ffd597cfb34,88964576,0,0x0,8
tick,0x7ffd597cfb34,88979439,0,0x0,8
tick,0x7ffd597cfb34,88994576,0,0x0,8
tick,0x7ffd597cfb34,89010600,0,0x0,8
tick,0x7ffd597cfb34,89025741,0,0x0,8
tick,0x7ffd597cfb34,89040753,0,0x0,8
tick,0x7ffd597cfb34,89055864,0,0x0,8
tick,0x7ffd597cfb34,89071844,0,0x0,8
tick,0x7ffd597cfb34,89086810,0,0x0,8
tick,0x7ffd597cfb34,89101974,0,0x0,8
tick,0x7ffd597cfb34,89117854,0,0x0,8
tick,0x7ffd597cfb34,89133060,0,0x0,8
tick,0x7ffd597cfb34,89148467,0,0x0,8
tick,0x7ffd597cfb34,89163472,0,0x0,8
tick,0x7ffd597cfb34,89179319,0,0x0,8
tick,0x7ffd597cfb34,89195214,0,0x0,8
tick,0x7ffd597cfb34,89210569,0,0x0,8
tick,0x7ffd597cfb34,89225982,0,0x0,8
tick,0x7ffd597cfb34,89241402,0,0x0,8
tick,0x7ffd597cfb34,89256701,0,0x0,8
tick,0x7ffd597cfb34,89272314,0,0x0,8
tick,0x7ffd597cfb34,89287967,0,0x0,8
tick,0x7ffd597cfb34,89303685,0,0x0,8
tick,0x7ffd597cfb34,89319373,0,0x0,8
tick,0x7ffd597cfb34,89335441,0,0x0,8
tick,0x7ffd597cfb34,89351433,0,0x0,8
tick,0x7ffd597cfb34,89366460,0,0x0,8
tick,0x7ffd597cfb34,89382356,0,0x0,8
tick,0x7ffd597cfb34,89397429,0,0x0,8
tick,0x7ffd597cfb34,89413492,0,0x0,8
tick,0x7ffd597cfb34,89429496,0,0x0,8
tick,0x7ffd597cfb34,89444978,0,0x0,8
tick,0x7ffd597cfb34,89460587,0,0x0,8
tick,0x7ffd597cfb34,89476268,0,0x0,8
tick,0x7ffd597cfb34,89491547,0,0x0,8
tick,0x7ffd597cfb34,89507213,0,0x0,8
tick,0x7ffd597cfb34,89522330,0,0x0,8
tick,0x7ffd597cfb34,89537670,0,0x0,8
tick,0x7ffd597cfb34,89552774,0,0x0,8
tick,0x7ffd597cfb34,89568760,0,0x0,8
tick,0x7ffd597cfb34,89584799,0,0x0,8
tick,0x7ffd597cfb34,89600788,0,0x0,8
tick,0x7ffd597cfb34,89616952,0,0x0,8
tick,0x7ffd597cfb34,89631957,0,0x0,8
tick,0x7ffd597cfb34,89646964,0,0x0,8
tick,0x7ffd597cfb34,89662350,0,0x0,8
tick,0x7ffd597cfb34,89677749,0,0x0,8
tick,0x7ffd597cfb34,89693784,0,0x0,8
tick,0x7ffd597cfb34,89708996,0,0x0,8
tick,0x7ffd597cfb34,89724523,0,0x0,8
tick,0x7ffd597cfb34,89740408,0,0x0,8
tick,0x7ffd597cfb34,89755376,0,0x0,8
tick,0x7ffd597cfb34,89770726,0,0x0,8
tick,0x7ffd597cfb34,89786653,0,0x0,8
tick,0x7ffd597cfb34,89801918,0,0x0,8
tick,0x7ffd597cfb34,89817796,0,0x0,8
tick,0x7ffd597cfb34,89832800,0,0x0,8
tick,0x7ffd597cfb34,89848639,0,0x0,8
tick,0x7ffd597cfb34,89864135,0,0x0,8
tick,0x7ffd597cfb34,89879720,0,0x0,8
tick,0x7ffd597cfb34,89896271,0,0x0,8
tick,0x7ffd597cfb34,89911982,0,0x0,8
tick,0x7ffd597cfb34,89927437,0,0x0,8
tick,0x7ffd597cfb34,89943051,0,0x0,8
tick,0x7ffd597cfb34,89959059,0,0x0,8
tick,0x7ffd597cfb34,89975239,0,0x0,8
tick,0x7ffd597cfb34,89991084,0,0x0,8
tick,0x7ffd597cfb34,90006772,0,0x0,8
tick,0x7ffd597cfb34,90022412,0,0x0,8
tick,0x7ffd597cfb34,90038049,0,0x0,8
tick,0x7ffd597cfb34,90054055,0,0x0,8
tick,0x7ffd597cfb34,90069662,0,0x0,8
tick,0x7ffd597cfb34,90085748,0,0x0,8
tick,0x7ffd597cfb34,90101300,0,0x0,8
tick,0x7ffd597cfb34,90116811,0,0x0,8
tick,0x7ffd597cfb34,90132236,0,0x0,8
tick,0x7ffd597cfb34,90148455,0,0x0,8
tick,0x7ffd597cfb34,90163784,0,0x0,8
tick,0x7ffd597cfb34,90179235,0,0x0,8
tick,0x7ffd597cfb34,90194344,0,0x0,8
tick,0x7ffd597cfb34,90209983,0,0x0,8
tick,0x7ffd597cfb34,90225113,0,0x0,8
tick,0x7ffd597cfb34,90240938,0,0x0,8
tick,0x7ffd597cfb34,90255978,0,0x0,8
tick,0x7ffd597cfb34,90271062,0,0x0,8
tick,0x7ffd597cfb34,90286953,0,0x0,8
tick,0x7ffd597cfb34,90302476,0,0x0,8
tick,0x7ffd597cfb34,90318481,0,0x0,8
tick,0x7ffd597cfb34,90334663,0,0x0,8
tick,0x7ffd597cfb34,90350647,0,0x0,8
tick,0x7ffd597cfb34,90366271,0,0x0,8
tick,0x7ffd597cfb34,90382528,0,0x0,8
tick,0x7ffd597cfb34,90398723,0,0x0,8
tick,0x7ffd597cfb34,90414466,0,0x0,8
tick,0x7ffd597cfb34,90430065,0,0x0,8
tick,0x7ffd597cfb34,90445622,0,0x0,8
tick,0x7ffd597cfb34,90460999,0,0x0,8
tick,0x7ffd597cfb34,90476923,0,0x0,8
tick,0x7ffd597cfb34,90492096,0,0x0,8
tick,0x7ffd597cfb34,90507852,0,0x0,8
tick,0x7ffd597cfb34,90523816,0,0x0,8
tick,0x7ffd597cfb34,90539855,0,0x0,8
tick,0x7ffd597cfb34,90555816,0,0x0,8
tick,0x7ffd597cfb34,90570847,0,0x0,8
tick,0x7ffd597cfb34,90586843,0,0x0,8
tick,0x7ffd597cfb34,90601863,0,0x0,8
tick,0x7ffd597cfb34,90617849,0,0x0,8
tick,0x7ffd597cfb34,90634092,0,0x0,8
tick,0x7ffd597cfb34,90649426,0,0x0,8
tick,0x7ffd597cfb34,90664886,0,0x0,8
tick,0x7ffd597cfb34,90680963,0,0x0,8
tick,0x7ffd597cfb34,90697280,0,0x0,8
tick,0x7ffd597cfb34,90713290,0,0x0,8
tick,0x7ffd597cfb34,90728744,0,0x0,8
tick,0x7ffd597cfb34,90744838,0,0x0,8
tick,0x7ffd597cfb34,90760581,0,0x0,8
tick,0x7ffd597cfb34,90776397,0,0x0,8
tick,0x7ffd597cfb34,90791963,0,0x0,8
tick,0x7ffd597cfb34,90807858,0,0x0,8
tick,0x7ffd597cfb34,90822823,0,0x0,8
tick,0x7ffd597cfb34,90838710,0,0x0,8
tick,0x7ffd597cfb34,90854671,0,0x0,8
tick,0x7ffd597cfb34,90870671,0,0x0,8
tick,0x7ffd597cfb34,90886657,0,0x0,8
tick,0x7ffd597cfb34,90902664,0,0x0,8
tick,0x7ffd597cfb34,90918678,0,0x0,8
tick,0x7ffd597cfb34,90934702,0,0x0,8
tick,0x7ffd597cfb34,90950701,0,0x0,8
tick,0x7ffd597cfb34,90966680,0,0x0,8
tick,0x7ffd597cfb34,90982701,0,0x0,8
tick,0x7ffd597cfb34,90998679,0,0x0,8
tick,0x7ffd597cfb34,91014705,0,0x0,8
tick,0x7ffd597cfb34,91030748,0,0x0,8
tick,0x7ffd597cfb34,91046001,0,0x0,8
tick,0x7ffd597cfb34,91060884,0,0x0,8
tick,0x7ffd597cfb34,91076712,0,0x0,8
tick,0x7ffd597cfb34,91092722,0,0x0,8
tick,0x7ffd597cfb34,91108715,0,0x0,8
tick,0x7ffd597cfb34,91124712,0,0x0,8
tick,0x7ffd597cfb34,91140727,0,0x0,8
tick,0x7ffd597cfb34,91156742,0,0x0,8
tick,0x7ffd597cfb34,91172725,0,0x0,8
tick,0x7ffd597cfb34,91188696,0,0x0,8
tick,0x7ffd597cfb34,91204852,0,0x0,8
tick,0x7ffd597cfb34,91220740,0,0x0,8
tick,0x7ffd597cfb34,91236163,0,0x0,8
tick,0x7ffd597cfb34,91251506,0,0x0,8
tick,0x7ffd597cfb34,91267308,0,0x0,8
tick,0x7ffd597cfb34,91283001,0,0x0,8
tick,0x7ffd597cfb34,91298601,0,0x0,8
tick,0x7ffd597cfb34,91313939,0,0x0,8
tick,0x7ffd597cfb34,91329771,0,0x0,8
tick,0x7ffd597cfb34,91344703,0,0x0,8
tick,0x7ffd597cfb34,91360750,0,0x0,8
tick,0x7ffd597cfb34,91376751,0,0x0,8
tick,0x7ffd597cfb34,91392755,0,0x0,8
tick,0x7ffd597cfb34,91408758,0,0x0,8
tick,0x7ffd597cfb34,91424747,0,0x0,8
tick,0x7ffd597cfb34,91440833,0,0x0,8
tick,0x7ffd597cfb34,91456580,0,0x0,8
tick,0x7ffd597cfb34,91471585,0,0x0,8
tick,0x7ffd597cfb34,91486754,0,0x0,8
tick,0x7ffd597cfb34,91502724,0,0x0,8
tick,0x7ffd597cfb34,91518749,0,0x0,8
tick,0x7ffd597cfb34,91533933,0,0x0,8
tick,0x7ffd597cfb34,91549847,0,0x0,8
tick,0x7ffd597cfb34,91564766,0,0x0,8
tick,0x7ffd597cfb34,91580285,0,0x0,8
tick,0x7ffd597cfb34,91596015,0,0x0,8
tick,0x7ffd597cfb34,91610773,0,0x0,8
tick,0x7ffd597cfb34,91626166,0,0x0,8
tick,0x7ffd597cfb34,91642177,0,0x0,8
tick,0x7ffd597cfb34,91656819,0,0x0,8
tick,0x7ffd597cfb34,91672051,0,0x0,8
tick,0x7ffd597cfb34,91688305,0,0x0,8
tick,0x7ffd597cfb34,91703493,0,0x0,8
tick,0x7ffd597cfb34,91718852,0,0x0,8
tick,0x7ffd597cfb34,91734520,0,0x0,8
tick,0x7ffd597cfb34,91749920,0,0x0,8
tick,0x7ffd597cfb34,91765272,0,0x0,8
tick,0x7ffd597cfb34,91781239,0,0x0,8
tick,0x7ffd597cfb34,91797256,0,0x0,8
tick,0x7ffd597cfb34,91813254,0,0x0,8
tick,0x7ffd597cfb34,91828317,0,0x0,8
tick,0x7ffd597cfb34,91843619,0,0x0,8
tick,0x7ffd597cfb34,91859009,0,0x0,8
tick,0x7ffd597cfb34,91874782,0,0x0,8
tick,0x7ffd597cfb34,91890795,0,0x0,8
tick,0x7ffd597cfb34,91905918,0,0x0,8
tick,0x7ffd597cfb34,91921866,0,0x0,8
tick,0x7ffd597cfb34,91937716,0,0x0,8
tick,0x7ffd597cfb34,91953404,0,0x0,8
tick,0x7ffd597cfb34,91969373,0,0x0,8
tick,0x7ffd597cfb34,91984977,0,0x0,8
tick,0x7ffd597cfb34,92000241,0,0x0,8
tick,0x7ffd597cfb34,92015461,0,0x0,8
tick,0x7ffd597cfb34,92031525,0,0x0,8
tick,0x7ffd597cfb34,92047450,0,0x0,8
tick,0x7ffd597cfb34,92063405,0,0x0,8
tick,0x7ffd597cfb34,92079257,0,0x0,8
tick,0x7ffd597cfb34,92094458,0,0x0,8
tick,0x7ffd597cfb34,92110749,0,0x0,8
tick,0x7ffd597cfb34,92126707,0,0x0,8
tick,0x7ffd597cfb34,92142376,0,0x0,8
tick,0x7ffd597cfb34,92157002,0,0x0,8
tick,0x7ffd597cfb34,92173277,0,0x0,8
tick,0x7ffd597cfb34,92188224,0,0x0,8
tick,0x7ffd597cfb34,92203774,0,0x0,8
tick,0x7ffd597cfb34,92219535,0,0x0,8
tick,0x7ffd597cfb34,92234243,0,0x0,8
tick,0x7ffd597cfb34,92250250,0,0x0,8
tick,0x7ffd597cfb34,92265487,0,0x0,8
tick,0x7ffd597cfb34,92280425,0,0x0,8
tick,0x7ffd597cfb34,92295709,0,0x0,8
tick,0x7ffd597cfb34,92312027,0,0x0,8
tick,0x7ffd597cfb34,92327523,0,0x0,8
tick,0x7ffd597cfb34,92343374,0,0x0,8
tick,0x7ffd597cfb34,92358931,0,0x0,8
tick,0x7ffd597cfb34,92374928,0,0x0,8
tick,0x7ffd597cfb34,92390936,0,0x0,8
tick,0x7ffd597cfb34,92407047,0,0x0,8
tick,0x7ffd597cfb34,92422944,0,0x0,8
tick,0x7ffd597cfb34,92438952,0,0x0,8
tick,0x7ffd597cfb34,92454956,0,0x0,8
tick,0x7ffd597cfb34,92470931,0,0x0,8
tick,0x7ffd597cfb34,92486957,0,0x0,8
tick,0x7ffd597cfb34,92502558,0,0x0,8
tick,0x7ffd597cfb34,92517803,0,0x0,8
tick,0x7ffd597cfb34,92533789,0,0x0,8
tick,0x7ffd597cfb34,92548562,0,0x0,8
tick,0x7ffd597cfb34,92563790,0,0x0,8
tick,0x7ffd597cfb34,92579793,0,0x0,8
tick,0x7ffd597cfb34,92594974,0,0x0,8
tick,0x7ffd597cfb34,92609563,0,0x0,8
tick,0x7ffd597cfb34,92625028,0,0x0,8
tick,0x7ffd597cfb34,92640808,0,0x0,8
tick,0x7ffd597cfb34,92656786,0,0x0,8
tick,0x7ffd597cfb34,92671804,0,0x0,8
tick,0x7ffd597cfb34,92686815,0,0x0,8
tick,0x7ffd597cfb34,92702799,0,0x0,8
tick,0x7ffd597cfb34,92718803,0,0x0,8
tick,0x7ffd597cfb34,92734393,0,0x0,8
tick,0x7ffd597cfb34,92749536,0,0x0,8
tick,0x7ffd597cfb34,92764549,0,0x0,8
tick,0x7ffd597cfb34,92779807,0,0x0,8
tick,0x7ffd597cfb34,92795820,0,0x0,8
tick,0x7ffd597cfb34,92811744,0,0x0,8
tick,0x7ffd597cfb34,92827814,0,0x0,8
tick,0x7ffd597cfb34,92843564,0,0x0,8
tick,0x7ffd597cfb34,92858561,0,0x0,8
tick,0x7ffd597cfb34,92873708,0,0x0,8
tick,0x7ffd597cfb34,92889548,0,0x0,8
tick,0x7ffd597cfb34,92905567,0,0x0,8
tick,0x7ffd597cfb34,92920747,0,0x0,8
tick,0x7ffd597cfb34,92936783,0,0x0,8
tick,0x7ffd597cfb34,92951705,0,0x0,8
tick,0x7ffd597cfb34,92966949,0,0x0,8
tick,0x7ffd597cfb34,92982611,0,0x0,8
tick,0x7ffd597cfb34,92997700,0,0x0,8
tick,0x7ffd597cfb34,93012805,0,0x0,8
tick,0x7ffd597cfb34,93028718,0,0x0,8
tick,0x7ffd597cfb34,93043564,0,0x0,8
tick,0x7ffd597cfb34,93059563,0,0x0,8
tick,0x7ffd597cfb34,93074824,0,0x0,8
tick,0x7ffd597cfb34,93090843,0,0x0,8
tick,0x7ffd597cfb34,93105824,0,0x0,8
tick,0x7ffd597cfb34,93120822,0,0x0,8
tick,0x7ffd597cfb34,93136851,0,0x0,8
tick,0x7ffd597cfb34,93152821,0,0x0,8
tick,0x7ffd597cfb34,93168571,0,0x0,8
tick,0x7ffd597cfb34,93184599,0,0x0,8
tick,0x7ffd597cfb34,93200642,0,0x0,8
tick,0x7ffd597cfb34,93216577,0,0x0,8
tick,0x7ffd597cfb34,93232649,0,0x0,8
tick,0x7ffd597cfb34,93248685,0,0x0,8
tick,0x7ffd597cfb34,93264576,0,0x0,8
tick,0x7ffd597cfb34,93279674,0,0x0,8
tick,0x7ffd597cfb34,93294570,0,0x0,8
tick,0x7ffd597cfb34,93310560,0,0x0,8
tick,0x7ffd597cfb34,93326575,0,0x0,8
tick,0x7ffd597cfb34,93342627,0,0x0,8
tick,0x7ffd597cfb34,93358142,0,0x0,8
tick,0x7ffd597cfb34,93373682,0,0x0,8
tick,0x7ffd597cfb34,93389247,0,0x0,8
tick,0x7ffd597cfb34,93404582,0,0x0,8
tick,0x7ffd597cfb34,93420421,0,0x0,8
tick,0x7ffd597cfb34,93435611,0,0x0,8
tick,0x7ffd597cfb34,93450592,0,0x0,8
tick,0x7ffd597cfb34,93466678,0,0x0,8
tick,0x7ffd597cfb34,93482626,0,0x0,8
tick,0x7ffd597cfb34,93499541,0,0x0,8
tick,0x7ffd597cfb34,93514898,0,0x0,8
tick,0x7ffd597cfb34,93530892,0,0x0,8
tick,0x7ffd597cfb34,93546904,0,0x0,8
tick,0x7ffd597cfb34,93562877,0,0x0,8
tick,0x7ffd597cfb34,93578612,0,0x0,8
tick,0x7ffd597cfb34,93594627,0,0x0,8
tick,0x7ffd597cfb34,93609631,0,0x0,8
tick,0x7ffd597cfb34,93624619,0,0x0,8
tick,0x7ffd597cfb34,93640634,0,0x0,8
tick,0x7ffd597cfb34,93656665,0,0x0,8
tick,0x7ffd597cfb34,93672655,0,0x0,8
tick,0x7ffd597cfb34,93688640,0,0x0,8
tick,0x7ffd597cfb34,93704646,0,0x0,8
tick,0x7ffd597cfb34,93720648,0,0x0,8
tick,0x7ffd597cfb34,93735904,0,0x0,8
tick,0x7ffd597cfb34,93751705,0,0x0,8
tick,0x7ffd597cfb34,93766599,0,0x0,8
tick,0x7ffd597cfb34,93782586,0,0x0,8
tick,0x7ffd597cfb34,93797826,0,0x0,8
tick,0x7ffd597cfb34,93812718,0,0x0,8
tick,0x7ffd597cfb34,93828587,0,0x0,8
tick,0x7ffd597cfb34,93843596,0,0x0,8
tick,0x7ffd597cfb34,93858795,0,0x0,8
tick,0x7ffd597cfb34,93873785,0,0x0,8
tick,0x7ffd597cfb34,93889792,0,0x0,8
tick,0x7ffd597cfb34,93904820,0,0x0,8
tick,0x7ffd597cfb34,93919813,0,0x0,8
tick,0x7ffd597cfb34,93935794,0,0x0,8
tick,0x7ffd597cfb34,93950815,0,0x0,8
tick,0x7ffd597cfb34,93966815,0,0x0,8
tick,0x7ffd597cfb34,93982831,0,0x0,8
tick,0x7ffd597cfb34,93998828,0,0x0,8
tick,0x7ffd597cfb34,94014555,0,0x0,8
tick,0x7ffd597cfb34,94029713,0,0x0,8
tick,0x7ffd597cfb34,94045720,0,0x0,8
tick,0x7ffd597cfb34,94060709,0,0x0,8
tick,0x7ffd597cfb34,94076722,0,0x0,8
tick,0x7ffd597cfb34,94092893,0,0x0,8
tick,0x7ffd597cfb34,94108747,0,0x0,8
tick,0x7ffd597cfb34,94124888,0,0x0,8
tick,0x7ffd597cfb34,94140440,0,0x0,8
tick,0x7ffd597cfb34,94156429,0,0x0,8
tick,0x7ffd597cfb34,94172436,0,0x0,8
tick,0x7ffd597cfb34,94188441,0,0x0,8
tick,0x7ffd597cfb34,94203593,0,0x0,8
tick,0x7ffd597cfb34,94219189,0,0x0,8
tick,0x7ffd597cfb34,94234095,0,0x0,8
tick,0x7ffd597cfb34,94250071,0,0x0,8
tick,0x7ffd597cfb34,94266111,0,0x0,8
tick,0x7ffd597cfb34,94282294,0,0x0,8
tick,0x7ffd597cfb34,94298124,0,0x0,8
tick,0x7ffd597cfb34,94314087,0,0x0,8
tick,0x7ffd597cfb34,94329931,0,0x0,8
tick,0x7ffd597cfb34,94345540,0,0x0,8
tick,0x7ffd597cfb34,94361567,0,0x0,8
tick,0x7ffd597cfb34,94377538,0,0x0,8
tick,0x7ffd597cfb34,94393548,0,0x0,8
tick,0x7ffd597cfb34,94409537,0,0x0,8
tick,0x7ffd597cfb34,94424951,0,0x0,8
tick,0x7ffd597cfb34,94440917,0,0x0,8
tick,0x7ffd597cfb34,94456935,0,0x0,8
tick,0x7ffd597cfb34,94472934,0,0x0,8
tick,0x7ffd597cfb34,94488949,0,0x0,8
tick,0x7ffd597cfb34,94504925,0,0x0,8
tick,0x7ffd597cfb34,94520701,0,0x0,8
tick,0x7ffd597cfb34,94536549,0,0x0,8
tick,0x7ffd597cfb34,94551936,0,0x0,8
tick,0x7ffd597cfb34,94567545,0,0x0,8
tick,0x7ffd597cfb34,94583582,0,0x0,8
tick,0x7ffd597cfb34,94598947,0,0x0,8
tick,0x7ffd597cfb34,94614579,0,0x0,8
tick,0x7ffd597cfb34,94630099,0,0x0,8
tick,0x7ffd597cfb34,94645908,0,0x0,8
tick,0x7ffd597cfb34,94661550,0,0x0,8
tick,0x7ffd597cfb34,94677544,0,0x0,8
tick,0x7ffd597cfb34,94693539,0,0x0,8
tick,0x7ffd597cfb34,94709533,0,0x0,8
tick,0x7ffd597cfb34,94725527,0,0x0,8
tick,0x7ffd597cfb34,94741540,0,0x0,8
tick,0x7ffd597cfb34,94757541,0,0x0,8
tick,0x7ffd597cfb34,94773549,0,0x0,8
tick,0x7ffd597cfb34,94789554,0,0x0,8
tick,0x7ffd597cfb34,94805568,0,0x0,8
tick,0x7ffd597cfb34,94821566,0,0x0,8
tick,0x7ffd597cfb34,94837547,0,0x0,8
tick,0x7ffd597cfb34,94853551,0,0x0,8
tick,0x7ffd597cfb34,94869586,0,0x0,8
tick,0x7ffd597cfb34,94885569,0,0x0,8
tick,0x7ffd597cfb34,94901593,0,0x0,8
tick,0x7ffd597cfb34,94917701,0,0x0,8
tick,0x7ffd597cfb34,94932845,0,0x0,8
tick,0x7ffd597cfb34,94948852,0,0x0,8
tick,0x7ffd597cfb34,94963968,0,0x0,8
tick,0x7ffd597cfb34,94979318,0,0x0,8
tick,0x7ffd597cfb34,94994238,0,0x0,8
tick,0x7ffd597cfb34,95010786,0,0x0,8
tick,0x7ffd597cfb34,95026481,0,0x0,8
tick,0x7ffd597cfb34,95041871,0,0x0,8
tick,0x7ffd597cfb34,95057088,0,0x0,8
tick,0x7ffd597cfb34,95072216,0,0x0,8
tick,0x7ffd597cfb34,95088196,0,0x0,8
tick,0x7ffd597cfb34,95104064,0,0x0,8
tick,0x7ffd597cfb34,95120430,0,0x0,8
tick,0x7ffd597cfb34,95136572,0,0x0,8
tick,0x7ffd597cfb34,95151563,0,0x0,8
tick,0x7ffd597cfb34,95167475,0,0x0,8
tick,0x7ffd597cfb34,95182847,0,0x0,8
tick,0x7ffd597cfb34,95199028,0,0x0,8
tick,0x7ffd597cfb34,95213863,0,0x0,8
tick,0x7ffd597cfb34,95229384,0,0x0,8
tick,0x7ffd597cfb34,95245387,0,0x0,8
tick,0x7ffd597cfb34,95261017,0,0x0,8
tick,0x7ffd597cfb34,95276689,0,0x0,8
tick,0x7ffd597cfb34,95292397,0,0x0,8
tick,0x7ffd597cfb34,95308144,0,0x0,8
tick,0x7ffd597cfb34,95324211,0,0x0,8
tick,0x7ffd597cfb34,95339967,0,0x0,8
tick,0x7ffd597cfb34,95355260,0,0x0,8
tick,0x7ffd597cfb34,95370801,0,0x0,8
tick,0x7ffd597cfb34,95386303,0,0x0,8
tick,0x7ffd597cfb34,95401741,0,0x0,8
tick,0x7ffd597cfb34,95417108,0,0x0,8
tick,0x7ffd597cfb34,95433082,0,0x0,8
tick,0x7ffd597cfb34,95448673,0,0x0,8
tick,0x7ffd597cfb34,95464586,0,0x0,8
tick,0x7ffd597cfb34,95480486,0,0x0,8
tick,0x7ffd597cfb34,95496494,0,0x0,8
tick,0x7ffd597cfb34,95512483,0,0x0,8
tick,0x7ffd597cfb34,95528497,0,0x0,8
tick,0x7ffd597cfb34,95543989,0,0x0,8
tick,0x7ffd597cfb34,95559734,0,0x0,8
tick,0x7ffd597cfb34,95574743,0,0x0,8
tick,0x7ffd597cfb34,95590110,0,0x0,8
tick,0x7ffd597cfb34,95606107,0,0x0,8
tick,0x7ffd597cfb34,95621097,0,0x0,8
tick,0x7ffd597cfb34,95635944,0,0x0,8
tick,0x7ffd597cfb34,95651559,0,0x0,8
tick,0x7ffd597cfb34,95666838,0,0x0,8
tick,0x7ffd597cfb34,95682339,0,0x0,8
tick,0x7ffd597cfb34,95697864,0,0x0,8
tick,0x7ffd597cfb34,95713031,0,0x0,8
tick,0x7ffd597cfb34,95728625,0,0x0,8
tick,0x7ffd597cfb34,95744617,0,0x0,8
tick,0x7ffd597cfb34,95760531,0,0x0,8
tick,0x7ffd597cfb34,95776175,0,0x0,8
tick,0x7ffd597cfb34,95792011,0,0x0,8
tick,0x7ffd597cfb34,95807602,0,0x0,8
tick,0x7ffd597cfb34,95823232,0,0x0,8
tick,0x7ffd597cfb34,95839545,0,0x0,8
tick,0x7ffd597cfb34,95855376,0,0x0,8
tick,0x7ffd597cfb34,95871436,0,0x0,8
tick,0x7ffd597cfb34,95887454,0,0x0,8
tick,0x7ffd597cfb34,95903054,0,0x0,8
tick,0x7ffd597cfb34,95918835,0,0x0,8
tick,0x7ffd597cfb34,95934857,0,0x0,8
tick,0x7ffd597cfb34,95950837,0,0x0,8
tick,0x7ffd597cfb34,95966531,0,0x0,8
tick,0x7ffd597cfb34,95982362,0,0x0,8
tick,0x7ffd597cfb34,95998190,0,0x0,8
tick,0x7ffd597cfb34,96013917,0,0x0,8
tick,0x7ffd597cfb34,96028862,0,0x0,8
tick,0x7ffd597cfb34,96044540,0,0x0,8
tick,0x7ffd597cfb34,96059749,0,0x0,8
tick,0x7ffd597cfb34,96075238,0,0x0,8
tick,0x7ffd597cfb34,96091264,0,0x0,8
tick,0x7ffd597cfb34,96107241,0,0x0,8
tick,0x7ffd597cfb34,96123302,0,0x0,8
tick,0x7ffd597cfb34,96139267,0,0x0,8
tick,0x7ffd597cfb34,96154564,0,0x0,8
tick,0x7ffd597cfb34,96169793,0,0x0,8
tick,0x7ffd597cfb34,96185529,0,0x0,8
tick,0x7ffd597cfb34,96201390,0,0x0,8
tick,0x7ffd597cfb34,96217045,0,0x0,8
tick,0x7ffd597cfb34,96232871,0,0x0,8
tick,0x7ffd597cfb34,96248456,0,0x0,8
tick,0x7ffd597cfb34,96264311,0,0x0,8
tick,0x7ffd597cfb34,96279761,0,0x0,8
tick,0x7ffd597cfb34,96295674,0,0x0,8
tick,0x7ffd597cfb34,96311475,0,0x0,8
tick,0x7ffd597cfb34,96327480,0,0x0,8
tick,0x7ffd597cfb34,96343603,0,0x0,8
tick,0x7ffd597cfb34,96359772,0,0x0,8
tick,0x7ffd597cfb34,96374927,0,0x0,8
tick,0x7ffd597cfb34,96390596,0,0x0,8
tick,0x7ffd597cfb34,96406247,0,0x0,8
tick,0x7ffd597cfb34,96422054,0,0x0,8
tick,0x7ffd597cfb34,96438227,0,0x0,8
tick,0x7ffd597cfb34,96453928,0,0x0,8
tick,0x7ffd597cfb34,96469447,0,0x0,8
tick,0x7ffd597cfb34,96485122,0,0x0,8
tick,0x7ffd597cfb34,96501299,0,0x0,8
tick,0x7ffd597cfb34,96517245,0,0x0,8
tick,0x7ffd597cfb34,96533246,0,0x0,8
tick,0x7ffd597cfb34,96548870,0,0x0,8
tick,0x7ffd597cfb34,96565329,0,0x0,8
tick,0x7ffd597cfb34,96581182,0,0x0,8
tick,0x7ffd597cfb34,96596888,0,0x0,8
tick,0x7ffd597cfb34,96612029,0,0x0,8
tick,0x7ffd597cfb34,96626945,0,0x0,8
tick,0x7ffd597cfb34,96642782,0,0x0,8
tick,0x7ffd597cfb34,96658868,0,0x0,8
tick,0x7ffd597cfb34,96675463,0,0x0,8
tick,0x7ffd597cfb34,96691178,0,0x0,8
tick,0x7ffd597cfb34,96707812,0,0x0,8
tick,0x7ffd597cfb34,96723490,0,0x0,8
tick,0x7ffd597cfb34,96739187,0,0x0,8
tick,0x7ffd597cfb34,96754815,0,0x0,8
tick,0x7ffd597cfb34,96770768,0,0x0,8
tick,0x7ffd597cfb34,96786887,0,0x0,8
tick,0x7ffd597cfb34,96803089,0,0x0,8
tick,0x7ffd597cfb34,96818682,0,0x0,8
tick,0x7ffd597cfb34,96834957,0,0x0,8
tick,0x7ffd597cfb34,96850313,0,0x0,8
tick,0x7ffd597cfb34,96866130,0,0x0,8
tick,0x7ffd597cfb34,96882336,0,0x0,8
tick,0x7ffd597cfb34,96898379,0,0x0,8
tick,0x7ffd597cfb34,96914105,0,0x0,8
tick,0x7ffd597cfb34,96930839,0,0x0,8
tick,0x7ffd597cfb34,96946483,0,0x0,8
tick,0x7ffd597cfb34,96962261,0,0x0,8
tick,0x7ffd597cfb34,96978131,0,0x0,8
tick,0x7ffd597cfb34,96994452,0,0x0,8
tick,0x7ffd597cfb34,97009974,0,0x0,8
tick,0x7ffd597cfb34,97025971,0,0x0,8
tick,0x7ffd597cfb34,97041776,0,0x0,8
tick,0x7ffd597cfb34,97057894,0,0x0,8
tick,0x7ffd597cfb34,97072828,0,0x0,8
tick,0x7ffd597cfb34,97088528,0,0x0,8
tick,0x7ffd597cfb34,97104218,0,0x0,8
tick,0x7ffd597cfb34,97119748,0,0x0,8
tick,0x7ffd597cfb34,97135288,0,0x0,8
tick,0x7ffd597cfb34,97150784,0,0x0,8
tick,0x7ffd597cfb34,97166464,0,0x0,8
tick,0x7ffd597cfb34,97181413,0,0x0,8
tick,0x7ffd597cfb34,97196955,0,0x0,8
tick,0x7ffd597cfb34,97212382,0,0x0,8
tick,0x7ffd597cfb34,97228177,0,0x0,8
tick,0x7ffd597cfb34,97243710,0,0x0,8
tick,0x7ffd597cfb34,97259454,0,0x0,8
tick,0x7ffd597cfb34,97275094,0,0x0,8
tick,0x7ffd597cfb34,97290864,0,0x0,8
tick,0x7ffd597cfb34,97306277,0,0x0,8
tick,0x7ffd597cfb34,97321911,0,0x0,8
tick,0x7ffd597cfb34,97337445,0,0x0,8
tick,0x7ffd597cfb34,97353343,0,0x0,8
tick,0x7ffd597cfb34,97368789,0,0x0,8
tick,0x7ffd597cfb34,97385024,0,0x0,8
tick,0x7ffd597cfb34,97401200,0,0x0,8
tick,0x7ffd597cfb34,97416636,0,0x0,8
tick,0x7ffd597cfb34,97432781,0,0x0,8
tick,0x7ffd597cfb34,97448408,0,0x0,8
tick,0x7ffd597cfb34,97464867,0,0x0,8
tick,0x7ffd597cfb34,97480505,0,0x0,8
tick,0x7ffd597cfb34,97496974,0,0x0,8
tick,0x7ffd597cfb34,97512357,0,0x0,8
tick,0x7ffd597cfb34,97528328,0,0x0,8
tick,0x7ffd597cfb34,97544252,0,0x0,8
tick,0x7ffd597cfb34,97559421,0,0x0,8
tick,0x7ffd597cfb34,97574556,0,0x0,8
tick,0x7ffd597cfb34,97590434,0,0x0,8
tick,0x7ffd597cfb34,97606884,0,0x0,8
tick,0x7ffd597cfb34,97622504,0,0x0,8
tick,0x7ffd597cfb34,97637617,0,0x0,8
tick,0x7ffd597cfb34,97653331,0,0x0,8
tick,0x7ffd597cfb34,97669050,0,0x0,8
tick,0x7ffd597cfb34,97684263,0,0x0,8
tick,0x7ffd597cfb34,97700311,0,0x0,8
tick,0x7ffd597cfb34,97716030,0,0x0,8
tick,0x7ffd597cfb34,97731221,0,0x0,8
tick,0x7ffd597cfb34,97746594,0,0x0,8
tick,0x7ffd597cfb34,97762864,0,0x0,8
tick,0x7ffd597cfb34,97778201,0,0x0,8
tick,0x7ffd597cfb34,97793546,0,0x0,8
tick,0x7ffd597cfb34,97808653,0,0x0,8
tick,0x7ffd597cfb34,97823806,0,0x0,8
tick,0x7ffd597cfb34,97839288,0,0x0,8
tick,0x7ffd597cfb34,97854308,0,0x0,8
tick,0x7ffd597cfb34,97869771,0,0x0,8
tick,0x7ffd597cfb34,97885440,0,0x0,8
tick,0x7ffd597cfb34,97900502,0,0x0,8
tick,0x7ffd597cfb34,97915777,0,0x0,8
tick,0x7ffd597cfb34,97931543,0,0x0,8
tick,0x7ffd597cfb34,97947275,0,0x0,8
tick,0x7ffd597cfb34,97963214,0,0x0,8
tick,0x7ffd597cfb34,97979699,0,0x0,8
tick,0x7ffd597cfb34,97994904,0,0x0,8
tick,0x7ffd597cfb34,98011285,0,0x0,8
tick,0x7ffd597cfb34,98027809,0,0x0,8
tick,0x7ffd597cfb34,98043211,0,0x0,8
tick,0x7ffd597cfb34,98059148,0,0x0,8
tick,0x7ffd597cfb34,98074763,0,0x0,8
tick,0x7ffd597cfb34,98091180,0,0x0,8
tick,0x7ffd597cfb34,98106394,0,0x0,8
tick,0x7ffd597cfb34,98121813,0,0x0,8
tick,0x7ffd597cfb34,98137787,0,0x0,8
tick,0x7ffd597cfb34,98153541,0,0x0,8
tick,0x7ffd597cfb34,98168934,0,0x0,8
tick,0x7ffd597cfb34,98184286,0,0x0,8
tick,0x7ffd597cfb34,98200033,0,0x0,8
tick,0x7ffd597cfb34,98216040,0,0x0,8
tick,0x7ffd597cfb34,98231678,0,0x0,8
tick,0x7ffd597cfb34,98247277,0,0x0,8
tick,0x7ffd597cfb34,98262973,0,0x0,8
tick,0x7ffd597cfb34,98278831,0,0x0,8
tick,0x7ffd597cfb34,98294293,0,0x0,8
tick,0x7ffd597cfb34,98310372,0,0x0,8
tick,0x7ffd597cfb34,98326502,0,0x0,8
tick,0x7ffd597cfb34,98342762,0,0x0,8
tick,0x7ffd597cfb34,98358706,0,0x0,8
tick,0x7ffd597cfb34,98374411,0,0x0,8
tick,0x7ffd597cfb34,98389686,0,0x0,8
tick,0x7ffd597cfb34,98404782,0,0x0,8
tick,0x7ffd597cfb34,98420660,0,0x0,8
tick,0x7ffd597cfb34,98436145,0,0x0,8
tick,0x7ffd597cfb34,98451615,0,0x0,8
tick,0x7ffd597cfb34,98467304,0,0x0,8
tick,0x7ffd597cfb34,98482642,0,0x0,8
tick,0x7ffd597cfb34,98498419,0,0x0,8
tick,0x7ffd597cfb34,98513751,0,0x0,8
tick,0x7ffd597cfb34,98528730,0,0x0,8
tick,0x7ffd597cfb34,98544734,0,0x0,8
tick,0x7ffd597cfb34,98560668,0,0x0,8
tick,0x7ffd597cfb34,98576800,0,0x0,8
tick,0x7ffd597cfb34,98592672,0,0x0,8
tick,0x7ffd597cfb34,98608417,0,0x0,8
tick,0x7ffd597cfb34,98623644,0,0x0,8
tick,0x7ffd597cfb34,98638733,0,0x0,8
tick,0x7ffd597cfb34,98654269,0,0x0,8
tick,0x7ffd597cfb34,98670259,0,0x0,8
tick,0x7ffd597cfb34,98686104,0,0x0,8
tick,0x7ffd597cfb34,98702242,0,0x0,8
tick,0x7ffd597cfb34,98717341,0,0x0,8
tick,0x7ffd597cfb34,98732893,0,0x0,8
tick,0x7ffd597cfb34,98748734,0,0x0,8
tick,0x7ffd597cfb34,98764410,0,0x0,8
tick,0x7ffd597cfb34,98780684,0,0x0,8
tick,0x7ffd597cfb34,98796416,0,0x0,8
tick,0x7ffd597cfb34,98812093,0,0x0,8
tick,0x7ffd597cfb34,98827925,0,0x0,8
tick,0x7ffd597cfb34,98843919,0,0x0,8
tick,0x7ffd597cfb34,98859918,0,0x0,8
tick,0x7ffd597cfb34,98875462,0,0x0,8
tick,0x7ffd597cfb34,98891352,0,0x0,8
tick,0x7ffd597cfb34,98907275,0,0x0,8
tick,0x7ffd597cfb34,98922354,0,0x0,8
tick,0x7ffd597cfb34,98938863,0,0x0,8
tick,0x7ffd597cfb34,98954949,0,0x0,8
tick,0x7ffd597cfb34,98970242,0,0x0,8
tick,0x7ffd597cfb34,98986728,0,0x0,8
tick,0x7ffd597cfb34,99002686,0,0x0,8
tick,0x7ffd597cfb34,99018448,0,0x0,8
tick,0x7ffd597cfb34,99034573,0,0x0,8
tick,0x7ffd597cfb34,99050675,0,0x0,8
tick,0x7ffd597cfb34,99066463,0,0x0,8
tick,0x7ffd597cfb34,99082074,0,0x0,8
tick,0x7ffd597cfb34,99097979,0,0x0,8
tick,0x7ffd597cfb34,99113710,0,0x0,8
tick,0x7ffd597cfb34,99129870,0,0x0,8
tick,0x7ffd597cfb34,99144931,0,0x0,8
tick,0x7ffd597cfb34,99161092,0,0x0,8
tick,0x7ffd597cfb34,99176515,0,0x0,8
tick,0x7ffd597cfb34,99192458,0,0x0,8
tick,0x7ffd597cfb34,99208164,0,0x0,8
tick,0x7ffd597cfb34,99224326,0,0x0,8
tick,0x7ffd597cfb34,99240056,0,0x0,8
tick,0x7ffd597cfb34,99255785,0,0x0,8
tick,0x7ffd597cfb34,99271618,0,0x0,8
tick,0x7ffd597cfb34,99287227,0,0x0,8
tick,0x7ffd597cfb34,99302955,0,0x0,8
tick,0x7ffd597cfb34,99319347,0,0x0,8
tick,0x7ffd597cfb34,99335264,0,0x0,8
tick,0x7ffd597cfb34,99350836,0,0x0,8
tick,0x7ffd597cfb34,99366492,0,0x0,8
tick,0x7ffd597cfb34,99382319,0,0x0,8
tick,0x7ffd597cfb34,99397977,0,0x0,8
tick,0x7ffd597cfb34,99413839,0,0x0,8
tick,0x7ffd597cfb34,99429163,0,0x0,8
tick,0x7ffd597cfb34,99444475,0,0x0,8
tick,0x7ffd597cfb34,99460051,0,0x0,8
tick,0x7ffd597cfb34,99475291,0,0x0,8
tick,0x7ffd597cfb34,99491097,0,0x0,8
tick,0x7ffd597cfb34,99506665,0,0x0,8
tick,0x7ffd597cfb34,99522681,0,0x0,8
tick,0x7ffd597cfb34,99538025,0,0x0,8
tick,0x7ffd597cfb34,99553723,0,0x0,8
tick,0x7ffd597cfb34,99568934,0,0x0,8
tick,0x7ffd597cfb34,99584729,0,0x0,8
tick,0x7ffd597cfb34,99600497,0,0x0,8
tick,0x7ffd597cfb34,99616194,0,0x0,8
tick,0x7ffd597cfb34,99632305,0,0x0,8
tick,0x7ffd597cfb34,99648878,0,0x0,8
tick,0x7ffd597cfb34,99664091,0,0x0,8
tick,0x7ffd597cfb34,99679831,0,0x0,8
tick,0x7ffd597cfb34,99695661,0,0x0,8
tick,0x7ffd597cfb34,99711257,0,0x0,8
tick,0x7ffd597cfb34,99726788,0,0x0,8
tick,0x7ffd597cfb34,99742237,0,0x0,8
tick,0x7ffd597cfb34,99757949,0,0x0,8
tick,0x7ffd597cfb34,99773671,0,0x0,8
tick,0x7ffd597cfb34,99789711,0,0x0,8
tick,0x7ffd597cfb34,99805220,0,0x0,8
tick,0x7ffd597cfb34,99821651,0,0x0,8
tick,0x7ffd597cfb34,99836909,0,0x0,8
tick,0x7ffd597cfb34,99851870,0,0x0,8
tick,0x7ffd597cfb34,99867514,0,0x0,8
tick,0x7ffd597cfb34,99883816,0,0x0,8
tick,0x7ffd597cfb34,99899990,0,0x0,8
tick,0x7ffd597cfb34,99915387,0,0x0,8
tick,0x7ffd597cfb34,99931227,0,0x0,8
tick,0x7ffd597cfb34,99946735,0,0x0,8
tick,0x7ffd597cfb34,99962349,0,0x0,8
tick,0x7ffd597cfb34,99978204,0,0x0,8
tick,0x7ffd597cfb34,99993909,0,0x0,8
tick,0x7ffd597cfb34,100009632,0,0x0,8
tick,0x7ffd597cfb34,100025310,0,0x0,8
tick,0x7ffd597cfb34,100040934,0,0x0,8
tick,0x7ffd597cfb34,100056486,0,0x0,8
tick,0x7ffd597cfb34,100071895,0,0x0,8
tick,0x7ffd597cfb34,100087705,0,0x0,8
tick,0x7ffd597cfb34,100103487,0,0x0,8
tick,0x7ffd597cfb34,100118755,0,0x0,8
tick,0x7ffd597cfb34,100134551,0,0x0,8
tick,0x7ffd597cfb34,100149615,0,0x0,8
tick,0x7ffd597cfb34,100164875,0,0x0,8
tick,0x7ffd597cfb34,100181090,0,0x0,8
tick,0x7ffd597cfb34,100197602,0,0x0,8
tick,0x7ffd597cfb34,100213291,0,0x0,8
tick,0x7ffd597cfb34,100228873,0,0x0,8
tick,0x7ffd597cfb34,100244552,0,0x0,8
tick,0x7ffd597cfb34,100260162,0,0x0,8
tick,0x7ffd597cfb34,100276745,0,0x0,8
tick,0x7ffd597cfb34,100291655,0,0x0,8
tick,0x7ffd597cfb34,100307780,0,0x0,8
tick,0x7ffd597cfb34,100323777,0,0x0,8
tick,0x7ffd597cfb34,100339203,0,0x0,8
tick,0x7ffd597cfb34,100354657,0,0x0,8
tick,0x7ffd597cfb34,100370429,0,0x0,8
tick,0x7ffd597cfb34,100386930,0,0x0,8
tick,0x7ffd597cfb34,100403210,0,0x0,8
tick,0x7ffd597cfb34,100419017,0,0x0,8
tick,0x7ffd597cfb34,100433778,0,0x0,8
tick,0x7ffd597cfb34,100449420,0,0x0,8
tick,0x7ffd597cfb34,100464659,0,0x0,8
tick,0x7ffd597cfb34,100480160,0,0x0,8
tick,0x7ffd597cfb34,100495380,0,0x0,8
tick,0x7ffd597cfb34,100510976,0,0x0,8
tick,0x7ffd597cfb34,100527027,0,0x0,8
tick,0x7ffd597cfb34,100542670,0,0x0,8
tick,0x7ffd597cfb34,100558537,0,0x0,8
tick,0x7ffd597cfb34,100574529,0,0x0,8
tick,0x7ffd597cfb34,100590110,0,0x0,8
tick,0x7ffd597cfb34,100605891,0,0x0,8
tick,0x7ffd597cfb34,100621523,0,0x0,8
tick,0x7ffd597cfb34,100636901,0,0x0,8
tick,0x7ffd597cfb34,100652154,0,0x0,8
tick,0x7ffd597cfb34,100667399,0,0x0,8
tick,0x7ffd597cfb34,100682574,0,0x0,8
tick,0x7ffd597cfb34,100698325,0,0x0,8
tick,0x7ffd597cfb34,100713781,0,0x0,8
tick,0x7ffd597cfb34,100729462,0,0x0,8
tick,0x7ffd597cfb34,100744626,0,0x0,8
tick,0x7ffd597cfb34,100760304,0,0x0,8
tick,0x7ffd597cfb34,100775752,0,0x0,8
tick,0x7ffd597cfb34,100790927,0,0x0,8
tick,0x7ffd597cfb34,100806389,0,0x0,8
tick,0x7ffd597cfb34,100822129,0,0x0,8
tick,0x7ffd597cfb34,100837918,0,0x0,8
tick,0x7ffd597cfb34,100853253,0,0x0,8
tick,0x7ffd597cfb34,100868966,0,0x0,8
tick,0x7ffd597cfb34,100884643,0,0x0,8
tick,0x7ffd597cfb34,100899664,0,0x0,8
tick,0x7ffd597cfb34,100915934,0,0x0,8
tick,0x7ffd597cfb34,100932201,0,0x0,8
tick,0x7ffd597cfb34,100947719,0,0x0,8
tick,0x7ffd597cfb34,100962939,0,0x0,8
tick,0x7ffd597cfb34,100978183,0,0x0,8
tick,0x7ffd597cfb34,100994432,0,0x0,8
tick,0x7ffd597cfb34,101009921,0,0x0,8
tick,0x7ffd597cfb34,101026340,0,0x0,8
tick,0x7ffd597cfb34,101041733,0,0x0,8
tick,0x7ffd597cfb34,101056946,0,0x0,8
tick,0x7ffd597cfb34,101072821,0,0x0,8
tick,0x7ffd597cfb34,101088389,0,0x0,8
tick,0x7ffd597cfb34,101103343,0,0x0,8
tick,0x7ffd597cfb34,101117972,0,0x0,8
tick,0x7ffd597cfb34,101133198,0,0x0,8
tick,0x7ffd597cfb34,101148538,0,0x0,8
tick,0x7ffd597cfb34,101164578,0,0x0,8
tick,0x7ffd597cfb34,101179657,0,0x0,8
tick,0x7ffd597cfb34,101195684,0,0x0,8
tick,0x7ffd597cfb34,101211324,0,0x0,8
tick,0x7ffd597cfb34,101227138,0,0x0,8
tick,0x7ffd597cfb34,101242621,0,0x0,8
tick,0x7ffd597cfb34,101258061,0,0x0,8
tick,0x7ffd597cfb34,101273711,0,0x0,8
tick,0x7ffd597cfb34,101289126,0,0x0,8
tick,0x7ffd597cfb34,101305096,0,0x0,8
tick,0x7ffd597cfb34,101320394,0,0x0,8
tick,0x7ffd597cfb34,101336230,0,0x0,8
tick,0x7ffd597cfb34,101351510,0,0x0,8
tick,0x7ffd597cfb34,101366289,0,0x0,8
tick,0x7ffd597cfb34,101381485,0,0x0,8
tick,0x7ffd597cfb34,101397086,0,0x0,8
tick,0x7ffd597cfb34,101413083,0,0x0,8
tick,0x7ffd597cfb34,101429035,0,0x0,8
tick,0x7ffd597cfb34,101444901,0,0x0,8
tick,0x7ffd597cfb34,101460636,0,0x0,8
tick,0x7ffd597cfb34,101476103,0,0x0,8
tick,0x7ffd597cfb34,101491208,0,0x0,8
tick,0x7ffd597cfb34,101506757,0,0x0,8
tick,0x7ffd597cfb34,101522765,0,0x0,8
tick,0x7ffd597cfb34,101538821,0,0x0,8
tick,0x7ffd597cfb34,101553898,0,0x0,8
tick,0x7ffd597cfb34,101569514,0,0x0,8
tick,0x7ffd597cfb34,101585364,0,0x0,8
tick,0x7ffd597cfb34,101601379,0,0x0,8
tick,0x7ffd597cfb34,101616691,0,0x0,8
tick,0x7ffd597cfb34,101632714,0,0x0,8
tick,0x7ffd597cfb34,101648711,0,0x0,8
tick,0x7ffd597cfb34,101664156,0,0x0,8
tick,0x7ffd597cfb34,101679379,0,0x0,8
tick,0x7ffd597cfb34,101695099,0,0x0,8
tick,0x7ffd597cfb34,101710964,0,0x0,8
tick,0x7ffd597cfb34,101727067,0,0x0,8
tick,0x7ffd597cfb34,101742076,0,0x0,8
tick,0x7ffd597cfb34,101758137,0,0x0,8
tick,0x7ffd597cfb34,101773533,0,0x0,8
tick,0x7ffd597cfb34,101789566,0,0x0,8
tick,0x7ffd597cfb34,101804817,0,0x0,8
tick,0x7ffd597cfb34,101820478,0,0x0,8
tick,0x7ffd597cfb34,101836368,0,0x0,8
tick,0x7ffd597cfb34,101851328,0,0x0,8
tick,0x7ffd597cfb34,101867414,0,0x0,8
tick,0x7ffd597cfb34,101882244,0,0x0,8
tick,0x7ffd597cfb34,101897571,0,0x0,8
tick,0x7ffd597cfb34,101913170,0,0x0,8
tick,0x7ffd597cfb34,101929035,0,0x0,8
tick,0x7ffd597cfb34,101944941,0,0x0,8
tick,0x7ffd597cfb34,101959802,0,0x0,8
tick,0x7ffd597cfb34,101975223,0,0x0,8
tick,0x7ffd597cfb34,101990887,0,0x0,8
tick,0x7ffd597cfb34,102006312,0,0x0,8
tick,0x7ffd597cfb34,102021937,0,0x0,8
tick,0x7ffd597cfb34,102038044,0,0x0,8
tick,0x7ffd597cfb34,102054093,0,0x0,8
tick,0x7ffd597cfb34,102069398,0,0x0,8
tick,0x7ffd597cfb34,102084856,0,0x0,8
tick,0x7ffd597cfb34,102100774,0,0x0,8
tick,0x7ffd597cfb34,102116105,0,0x0,8
tick,0x7ffd597cfb34,102131944,0,0x0,8
tick,0x7ffd597cfb34,102148039,0,0x0,8
tick,0x7ffd597cfb34,102163271,0,0x0,8
tick,0x7ffd597cfb34,102179213,0,0x0,8
tick,0x7ffd597cfb34,102194375,0,0x0,8
tick,0x7ffd597cfb34,102209879,0,0x0,8
tick,0x7ffd597cfb34,102224963,0,0x0,8
tick,0x7ffd597cfb34,102240448,0,0x0,8
tick,0x7ffd597cfb34,102256133,0,0x0,8
tick,0x7ffd597cfb34,102271142,0,0x0,8
tick,0x7ffd597cfb34,102286167,0,0x0,8
tick,0x7ffd597cfb34,102301166,0,0x0,8
tick,0x7ffd597cfb34,102317300,0,0x0,8
tick,0x7ffd597cfb34,102332420,0,0x0,8
tick,0x7ffd597cfb34,102347610,0,0x0,8
tick,0x7ffd597cfb34,102362834,0,0x0,8
tick,0x7ffd597cfb34,102378230,0,0x0,8
tick,0x7ffd597cfb34,102393379,0,0x0,8
tick,0x7ffd597cfb34,102409122,0,0x0,8
tick,0x7ffd597cfb34,102424220,0,0x0,8
tick,0x7ffd597cfb34,102440734,0,0x0,8
tick,0x7ffd597cfb34,102456473,0,0x0,8
tick,0x7ffd597cfb34,102472072,0,0x0,8
tick,0x7ffd597cfb34,102487545,0,0x0,8
tick,0x7ffd597cfb34,102503024,0,0x0,8
tick,0x7ffd597cfb34,102519140,0,0x0,8
tick,0x7ffd597cfb34,102534693,0,0x0,8
tick,0x7ffd597cfb34,102550582,0,0x0,8
tick,0x7ffd597cfb34,102566556,0,0x0,8
tick,0x7ffd597cfb34,102582477,0,0x0,8
tick,0x7ffd597cfb34,102598529,0,0x0,8
tick,0x7ffd597cfb34,102613872,0,0x0,8
tick,0x7ffd597cfb34,102629481,0,0x0,8
tick,0x7ffd597cfb34,102645475,0,0x0,8
tick,0x7ffd597cfb34,102661475,0,0x0,8
tick,0x7ffd597cfb34,102677501,0,0x0,8
tick,0x7ffd597cfb34,102693512,0,0x0,8
tick,0x7ffd597cfb34,102709504,0,0x0,8
tick,0x7ffd597cfb34,102725523,0,0x0,8
tick,0x7ffd597cfb34,102741507,0,0x0,8
tick,0x7ffd597cfb34,102757477,0,0x0,8
tick,0x7ffd597cfb34,102773543,0,0x0,8
tick,0x7ffd597cfb34,102789508,0,0x0,8
tick,0x7ffd597cfb34,102805482,0,0x0,8
tick,0x7ffd597cfb34,102821512,0,0x0,8
tick,0x7ffd597cfb34,102837523,0,0x0,8
tick,0x7ffd597cfb34,102853483,0,0x0,8
tick,0x7ffd597cfb34,102869497,0,0x0,8
tick,0x7ffd597cfb34,102885231,0,0x0,8
tick,0x7ffd597cfb34,102900504,0,0x0,8
tick,0x7ffd597cfb34,102915494,0,0x0,8
tick,0x7ffd597cfb34,102931504,0,0x0,8
tick,0x7ffd597cfb34,102947491,0,0x0,8
tick,0x7ffd597cfb34,102963500,0,0x0,8
tick,0x7ffd597cfb34,102979552,0,0x0,8
tick,0x7ffd597cfb34,102995540,0,0x0,8
tick,0x7ffd597cfb34,103010442,0,0x0,8
tick,0x7ffd597cfb34,103025466,0,0x0,8
tick,0x7ffd597cfb34,103041459,0,0x0,8
tick,0x7ffd597cfb34,103057479,0,0x0,8
tick,0x7ffd597cfb34,103073472,0,0x0,8
tick,0x7ffd597cfb34,103089479,0,0x0,8
tick,0x7ffd597cfb34,103105472,0,0x0,8
tick,0x7ffd597cfb34,103121481,0,0x0,8
tick,0x7ffd597cfb34,103137451,0,0x0,8
tick,0x7ffd597cfb34,103153500,0,0x0,8
tick,0x7ffd597cfb34,103169566,0,0x0,8
tick,0x7ffd597cfb34,103184761,0,0x0,8
tick,0x7ffd597cfb34,103200095,0,0x0,8
tick,0x7ffd597cfb34,103215327,0,0x0,8
tick,0x7ffd597cfb34,103231383,0,0x0,8
tick,0x7ffd597cfb34,103247122,0,0x0,8
tick,0x7ffd597cfb34,103262440,0,0x0,8
tick,0x7ffd597cfb34,103277894,0,0x0,8
tick,0x7ffd597cfb34,103293947,0,0x0,8
tick,0x7ffd597cfb34,103308754,0,0x0,8
tick,0x7ffd597cfb34,103324536,0,0x0,8
tick,0x7ffd597cfb34,103340517,0,0x0,8
tick,0x7ffd597cfb34,103355724,0,0x0,8
tick,0x7ffd597cfb34,103370770,0,0x0,8
tick,0x7ffd597cfb34,103386467,0,0x0,8
tick,0x7ffd597cfb34,103401491,0,0x0,8
tick,0x7ffd597cfb34,103416578,0,0x0,8
tick,0x7ffd597cfb34,103431737,0,0x0,8
tick,0x7ffd597cfb34,103447065,0,0x0,8
tick,0x7ffd597cfb34,103462573,0,0x0,8
tick,0x7ffd597cfb34,103477558,0,0x0,8
tick,0x7ffd597cfb34,103492717,0,0x0,8
tick,0x7ffd597cfb34,103508230,0,0x0,8
tick,0x7ffd597cfb34,103523600,0,0x0,8
tick,0x7ffd597cfb34,103538745,0,0x0,8
tick,0x7ffd597cfb34,103553987,0,0x0,8
tick,0x7ffd597cfb34,103570646,0,0x0,8
tick,0x7ffd597cfb34,103585983,0,0x0,8
tick,0x7ffd597cfb34,103600960,0,0x0,8
tick,0x7ffd597cfb34,103616569,0,0x0,8
tick,0x7ffd597cfb34,103631959,0,0x0,8
tick,0x7ffd597cfb34,103647231,0,0x0,8
tick,0x7ffd597cfb34,103663092,0,0x0,8
tick,0x7ffd597cfb34,103678294,0,0x0,8
tick,0x7ffd597cfb34,103693819,0,0x0,8
tick,0x7ffd597cfb34,103709322,0,0x0,8
tick,0x7ffd597cfb34,103724790,0,0x0,8
tick,0x7ffd597cfb34,103740584,0,0x0,8
tick,0x7ffd597cfb34,103756292,0,0x0,8
tick,0x7ffd597cfb34,103771959,0,0x0,8
tick,0x7ffd597cfb34,103787856,0,0x0,8
tick,0x7ffd597cfb34,103803890,0,0x0,8
tick,0x7ffd597cfb34,103818920,0,0x0,8
tick,0x7ffd597cfb34,103834573,0,0x0,8
tick,0x7ffd597cfb34,103850605,0,0x0,8
tick,0x7ffd597cfb34,103865637,0,0x0,8
tick,0x7ffd597cfb34,103880912,0,0x0,8
tick,0x7ffd597cfb34,103896661,0,0x0,8
tick,0x7ffd597cfb34,103912115,0,0x0,8
tick,0x7ffd597cfb34,103927094,0,0x0,8
tick,0x7ffd597cfb34,103943343,0,0x0,8
tick,0x7ffd597cfb34,103957542,0,0x0,8
tick,0x7ffd597cfb34,103973713,0,0x0,8
tick,0x7ffd597cfb34,103989615,0,0x0,8
tick,0x7ffd597cfb34,104004605,0,0x0,8
tick,0x7ffd597cfb34,104019621,0,0x0,8
tick,0x7ffd597cfb34,104035586,0,0x0,8
tick,0x7ffd597cfb34,104051587,0,0x0,8
tick,0x7ffd597cfb34,104067576,0,0x0,8
tick,0x7ffd597cfb34,104083609,0,0x0,8
tick,0x7ffd597cfb34,104098593,0,0x0,8
tick,0x7ffd597cfb34,104114588,0,0x0,8
tick,0x7ffd597cfb34,104129595,0,0x0,8
tick,0x7ffd597cfb34,104145637,0,0x0,8
tick,0x7ffd597cfb34,104161596,0,0x0,8
tick,0x7ffd597cfb34,104177875,0,0x0,8
tick,0x7ffd597cfb34,104192636,0,0x0,8
tick,0x7ffd597cfb34,104207612,0,0x0,8
tick,0x7ffd597cfb34,104223629,0,0x0,8
tick,0x7ffd597cfb34,104239653,0,0x0,8
tick,0x7ffd597cfb34,104255605,0,0x0,8
tick,0x7ffd597cfb34,104271604,0,0x0,8
tick,0x7ffd597cfb34,104287586,0,0x0,8
tick,0x7ffd597cfb34,104302953,0,0x0,8
tick,0x7ffd597cfb34,104318610,0,0x0,8
tick,0x7ffd597cfb34,104333818,0,0x0,8
tick,0x7ffd597cfb34,104349806,0,0x0,8
tick,0x7ffd597cfb34,104365638,0,0x0,8
tick,0x7ffd597cfb34,104381662,0,0x0,8
tick,0x7ffd597cfb34,104397614,0,0x0,8
tick,0x7ffd597cfb34,104413617,0,0x0,8
tick,0x7ffd597cfb34,104429161,0,0x0,8
tick,0x7ffd597cfb34,104444610,0,0x0,8
tick,0x7ffd597cfb34,104459578,0,0x0,8
tick,0x7ffd597cfb34,104475619,0,0x0,8
tick,0x7ffd597cfb34,104492088,0,0x0,8
tick,0x7ffd597cfb34,104507624,0,0x0,8
tick,0x7ffd597cfb34,104523664,0,0x0,8
tick,0x7ffd597cfb34,104539661,0,0x0,8
tick,0x7ffd597cfb34,104554642,0,0x0,8
tick,0x7ffd597cfb34,104569625,0,0x0,8
tick,0x7ffd597cfb34,104585128,0,0x0,8
tick,0x7ffd597cfb34,104600629,0,0x0,8
tick,0x7ffd597cfb34,104615705,0,0x0,8
tick,0x7ffd597cfb34,104631794,0,0x0,8
tick,0x7ffd597cfb34,104646789,0,0x0,8
tick,0x7ffd597cfb34,104661784,0,0x0,8
tick,0x7ffd597cfb34,104677804,0,0x0,8
tick,0x7ffd597cfb34,104693815,0,0x0,8
tick,0x7ffd597cfb34,104709815,0,0x0,8
tick,0x7ffd597cfb34,104725903,0,0x0,8
tick,0x7ffd597cfb34,104741906,0,0x0,8
tick,0x7ffd597cfb34,104758018,0,0x0,8
tick,0x7ffd597cfb34,104773314,0,0x0,8
tick,0x7ffd597cfb34,104789055,0,0x0,8
tick,0x7ffd597cfb34,104803862,0,0x0,8
tick,0x7ffd597cfb34,104820041,0,0x0,8
tick,0x7ffd597cfb34,104835804,0,0x0,8
tick,0x7ffd597cfb34,104851065,0,0x0,8
tick,0x7ffd597cfb34,104866538,0,0x0,8
tick,0x7ffd597cfb34,104881905,0,0x0,8
tick,0x7ffd597cfb34,104897598,0,0x0,8
tick,0x7ffd597cfb34,104912471,0,0x0,8
tick,0x7ffd597cfb34,104927881,0,0x0,8
tick,0x7ffd597cfb34,104943880,0,0x0,8
tick,0x7ffd597cfb34,104959855,0,0x0,8
tick,0x7ffd597cfb34,104975765,0,0x0,8
tick,0x7ffd597cfb34,104991783,0,0x0,8
tick,0x7ffd597cfb34,105006936,0,0x0,8
tick,0x7ffd597cfb34,105022836,0,0x0,8
tick,0x7ffd597cfb34,105037777,0,0x0,8
tick,0x7ffd597cfb34,105052907,0,0x0,8
tick,0x7ffd597cfb34,105069019,0,0x0,8
tick,0x7ffd597cfb34,105084300,0,0x0,8
tick,0x7ffd597cfb34,105100323,0,0x0,8
tick,0x7ffd597cfb34,105115633,0,0x0,8
tick,0x7ffd597cfb34,105130651,0,0x0,8
tick,0x7ffd597cfb34,105146671,0,0x0,8
tick,0x7ffd597cfb34,105161656,0,0x0,8
tick,0x7ffd597cfb34,105177397,0,0x0,8
tick,0x7ffd597cfb34,105192392,0,0x0,8
tick,0x7ffd597cfb34,105208394,0,0x0,8
tick,0x7ffd597cfb34,105223390,0,0x0,8
tick,0x7ffd597cfb34,105239418,0,0x0,8
tick,0x7ffd597cfb34,105255396,0,0x0,8
tick,0x7ffd597cfb34,105271432,0,0x0,8
tick,0x7ffd597cfb34,105287411,0,0x0,8
tick,0x7ffd597cfb34,105302431,0,0x0,8
tick,0x7ffd597cfb34,105318398,0,0x0,8
tick,0x7ffd597cfb34,105333403,0,0x0,8
tick,0x7ffd597cfb34,105349230,0,0x0,8
tick,0x7ffd597cfb34,105364924,0,0x0,8
tick,0x7ffd597cfb34,105380912,0,0x0,8
tick,0x7ffd597cfb34,105396224,0,0x0,8
tick,0x7ffd597cfb34,105412218,0,0x0,8
tick,0x7ffd597cfb34,105427304,0,0x0,8
tick,0x7ffd597cfb34,105442201,0,0x0,8
tick,0x7ffd597cfb34,105456864,0,0x0,8
tick,0x7ffd597cfb34,105472841,0,0x0,8
tick,0x7ffd597cfb34,105488301,0,0x0,8
tick,0x7ffd597cfb34,105504321,0,0x0,8
tick,0x7ffd597cfb34,105520314,0,0x0,8
tick,0x7ffd597cfb34,105536317,0,0x0,8
tick,0x7ffd597cfb34,105551618,0,0x0,8
tick,0x7ffd597cfb34,105567622,0,0x0,8
tick,0x7ffd597cfb34,105583623,0,0x0,8
tick,0x7ffd597cfb34,105599602,0,0x0,8
tick,0x7ffd597cfb34,105615611,0,0x0,8
tick,0x7ffd597cfb34,105631589,0,0x0,8
tick,0x7ffd597cfb34,105646604,0,0x0,8
tick,0x7ffd597cfb34,105661633,0,0x0,8
tick,0x7ffd597cfb34,105677629,0,0x0,8
tick,0x7ffd597cfb34,105693660,0,0x0,8
tick,0x7ffd597cfb34,105708721,0,0x0,8
tick,0x7ffd597cfb34,105724687,0,0x0,8
tick,0x7ffd597cfb34,105739725,0,0x0,8
tick,0x7ffd597cfb34,105755710,0,0x0,8
tick,0x7ffd597cfb34,105771722,0,0x0,8
tick,0x7ffd597cfb34,105787701,0,0x0,8
tick,0x7ffd597cfb34,105803720,0,0x0,8
tick,0x7ffd597cfb34,105819700,0,0x0,8
tick,0x7ffd597cfb34,105834629,0,0x0,8
tick,0x7ffd597cfb34,105849615,0,0x0,8
tick,0x7ffd597cfb34,105865521,0,0x0,8
tick,0x7ffd597cfb34,105881321,0,0x0,8
tick,0x7ffd597cfb34,105896114,0,0x0,8
tick,0x7ffd597cfb34,105911470,0,0x0,8
tick,0x7ffd597cfb34,105926913,0,0x0,8
tick,0x7ffd597cfb34,105942611,0,0x0,8
tick,0x7ffd597cfb34,105957738,0,0x0,8
tick,0x7ffd597cfb34,105973717,0,0x0,8
tick,0x7ffd597cfb34,105989711,0,0x0,8
tick,0x7ffd597cfb34,106005705,0,0x0,8
tick,0x7ffd597cfb34,106020715,0,0x0,8
tick,0x7ffd597cfb34,106036766,0,0x0,8
tick,0x7ffd597cfb34,106051760,0,0x0,8
tick,0x7ffd597cfb34,106067697,0,0x0,8
tick,0x7ffd597cfb34,106082890,0,0x0,8
tick,0x7ffd597cfb34,106097745,0,0x0,8
tick,0x7ffd597cfb34,106113732,0,0x0,8
tick,0x7ffd597cfb34,106128884,0,0x0,8
tick,0x7ffd597cfb34,106143725,0,0x0,8
tick,0x7ffd597cfb34,106159707,0,0x0,8
tick,0x7ffd597cfb34,106175724,0,0x0,8
tick,0x7ffd597cfb34,106191713,0,0x0,8
tick,0x7ffd597cfb34,106207734,0,0x0,8
tick,0x7ffd597cfb34,106223718,0,0x0,8
tick,0x7ffd597cfb34,106239723,0,0x0,8
tick,0x7ffd597cfb34,106254739,0,0x0,8
tick,0x7ffd597cfb34,106270743,0,0x0,8
tick,0x7ffd597cfb34,106285737,0,0x0,8
tick,0x7ffd597cfb34,106301737,0,0x0,8
tick,0x7ffd597cfb34,106317746,0,0x0,8
tick,0x7ffd597cfb34,106333740,0,0x0,8
tick,0x7ffd597cfb34,106349752,0,0x0,8
tick,0x7ffd597cfb34,106365758,0,0x0,8
tick,0x7ffd597cfb34,106381170,0,0x0,8
tick,0x7ffd597cfb34,106396973,0,0x0,8
tick,0x7ffd597cfb34,106412498,0,0x0,8
tick,0x7ffd597cfb34,106428241,0,0x0,8
tick,0x7ffd597cfb34,106444287,0,0x0,8
tick,0x7ffd597cfb34,106459974,0,0x0,8
tick,0x7ffd597cfb34,106475450,0,0x0,8
tick,0x7ffd597cfb34,106490754,0,0x0,8
tick,0x7ffd597cfb34,106506747,0,0x0,8
tick,0x7ffd597cfb34,106522758,0,0x0,8
tick,0x7ffd597cfb34,106538814,0,0x0,8
tick,0x7ffd597cfb34,106554742,0,0x0,8
tick,0x7ffd597cfb34,106570754,0,0x0,8
tick,0x7ffd597cfb34,106586765,0,0x0,8
tick,0x7ffd597cfb34,106602724,0,0x0,8
tick,0x7ffd597cfb34,106618780,0,0x0,8
tick,0x7ffd597cfb34,106634761,0,0x0,8
tick,0x7ffd597cfb34,106650822,0,0x0,8
tick,0x7ffd597cfb34,106666936,0,0x0,8
tick,0x7ffd597cfb34,106682817,0,0x0,8
tick,0x7ffd597cfb34,106698556,0,0x0,8
tick,0x7ffd597cfb34,106713800,0,0x0,8
tick,0x7ffd597cfb34,106729782,0,0x0,8
tick,0x7ffd597cfb34,106744775,0,0x0,8
tick,0x7ffd597cfb34,106760759,0,0x0,8
tick,0x7ffd597cfb34,106776775,0,0x0,8
tick,0x7ffd597cfb34,106791916,0,0x0,8
tick,0x7ffd597cfb34,106807771,0,0x0,8
tick,0x7ffd597cfb34,106822790,0,0x0,8
tick,0x7ffd597cfb34,106838860,0,0x0,8
tick,0x7ffd597cfb34,106854751,0,0x0,8
tick,0x7ffd597cfb34,106870789,0,0x0,8
tick,0x7ffd597cfb34,106886766,0,0x0,8
tick,0x7ffd597cfb34,106902600,0,0x0,8
tick,0x7ffd597cfb34,106918039,0,0x0,8
tick,0x7ffd597cfb34,106932792,0,0x0,8
tick,0x7ffd597cfb34,106948939,0,0x0,8
tick,0x7ffd597cfb34,106964105,0,0x0,8
tick,0x7ffd597cfb34,106979268,0,0x0,8
tick,0x7ffd597cfb34,106994497,0,0x0,8
tick,0x7ffd597cfb34,107009785,0,0x0,8
tick,0x7ffd597cfb34,107025855,0,0x0,8
tick,0x7ffd597cfb34,107041815,0,0x0,8
tick,0x7ffd597cfb34,107057790,0,0x0,8
tick,0x7ffd597cfb34,107072838,0,0x0,8
tick,0x7ffd597cfb34,107088817,0,0x0,8
tick,0x7ffd597cfb34,107103833,0,0x0,8
tick,0x7ffd597cfb34,107119790,0,0x0,8
tick,0x7ffd597cfb34,107135823,0,0x0,8
tick,0x7ffd597cfb34,107151834,0,0x0,8
tick,0x7ffd597cfb34,107166969,0,0x0,8
tick,0x7ffd597cfb34,107181975,0,0x0,8
tick,0x7ffd597cfb34,107197356,0,0x0,8
tick,0x7ffd597cfb34,107213416,0,0x0,8
tick,0x7ffd597cfb34,107228106,0,0x0,8
tick,0x7ffd597cfb34,107243235,0,0x0,8
tick,0x7ffd597cfb34,107258984,0,0x0,8
tick,0x7ffd597cfb34,107274829,0,0x0,8
tick,0x7ffd597cfb34,107290814,0,0x0,8
tick,0x7ffd597cfb34,107306821,0,0x0,8
tick,0x7ffd597cfb34,107322796,0,0x0,8
tick,0x7ffd597cfb34,107338809,0,0x0,8
tick,0x7ffd597cfb34,107354815,0,0x0,8
tick,0x7ffd597cfb34,107370845,0,0x0,8
tick,0x7ffd597cfb34,107385978,0,0x0,8
tick,0x7ffd597cfb34,107401455,0,0x0,8
tick,0x7ffd597cfb34,107417433,0,0x0,8
tick,0x7ffd597cfb34,107432666,0,0x0,8
tick,0x7ffd597cfb34,107448544,0,0x0,8
tick,0x7ffd597cfb34,107463486,0,0x0,8
tick,0x7ffd597cfb34,107479006,0,0x0,8
tick,0x7ffd597cfb34,107494121,0,0x0,8
tick,0x7ffd597cfb34,107509826,0,0x0,8
tick,0x7ffd597cfb34,107525176,0,0x0,8
tick,0x7ffd597cfb34,107540835,0,0x0,8
tick,0x7ffd597cfb34,107555951,0,0x0,8
tick,0x7ffd597cfb34,107571831,0,0x0,8
tick,0x7ffd597cfb34,107587039,0,0x0,8
tick,0x7ffd597cfb34,107601751,0,0x0,8
tick,0x7ffd597cfb34,107617760,0,0x0,8
tick,0x7ffd597cfb34,107633398,0,0x0,8
tick,0x7ffd597cfb34,107648850,0,0x0,8
tick,0x7ffd597cfb34,107664894,0,0x0,8
tick,0x7ffd597cfb34,107679835,0,0x0,8
tick,0x7ffd597cfb34,107695200,0,0x0,8
tick,0x7ffd597cfb34,107711036,0,0x0,8
tick,0x7ffd597cfb34,107727033,0,0x0,8
tick,0x7ffd597cfb34,107743045,0,0x0,8
tick,0x7ffd597cfb34,107759042,0,0x0,8
tick,0x7ffd597cfb34,107775061,0,0x0,8
tick,0x7ffd597cfb34,107790246,0,0x0,8
tick,0x7ffd597cfb34,107805617,0,0x0,8
tick,0x7ffd597cfb34,107821066,0,0x0,8
tick,0x7ffd597cfb34,107837219,0,0x0,8
tick,0x7ffd597cfb34,107853034,0,0x0,8
tick,0x7ffd597cfb34,107869077,0,0x0,8
tick,0x7ffd597cfb34,107884898,0,0x0,8
tick,0x7ffd597cfb34,107900635,0,0x0,8
tick,0x7ffd597cfb34,107916513,0,0x0,8
tick,0x7ffd597cfb34,107932053,0,0x0,8
tick,0x7ffd597cfb34,107947459,0,0x0,8
tick,0x7ffd597cfb34,107963004,0,0x0,8
tick,0x7ffd597cfb34,107979441,0,0x0,8
tick,0x7ffd597cfb34,107995416,0,0x0,8
tick,0x7ffd597cfb34,108011078,0,0x0,8
tick,0x7ffd597cfb34,108026346,0,0x0,8
tick,0x7ffd597cfb34,108042399,0,0x0,8
tick,0x7ffd597cfb34,108057802,0,0x0,8
tick,0x7ffd597cfb34,108073771,0,0x0,8
tick,0x7ffd597cfb34,108089889,0,0x0,8
tick,0x7ffd597cfb34,108106016,0,0x0,8
tick,0x7ffd597cfb34,108121640,0,0x0,8
tick,0x7ffd597cfb34,108137382,0,0x0,8
tick,0x7ffd597cfb34,108153423,0,0x0,8
tick,0x7ffd597cfb34,108168647,0,0x0,8
tick,0x7ffd597cfb34,108183746,0,0x0,8
tick,0x7ffd597cfb34,108199624,0,0x0,8
tick,0x7ffd597cfb34,108215142,0,0x0,8
tick,0x7ffd597cfb34,108230511,0,0x0,8
tick,0x7ffd597cfb34,108246209,0,0x0,8
tick,0x7ffd597cfb34,108261793,0,0x0,8
tick,0x7ffd597cfb34,108277514,0,0x0,8
tick,0x7ffd597cfb34,108293465,0,0x0,8
tick,0x7ffd597cfb34,108309823,0,0x0,8
tick,0x7ffd597cfb34,108325603,0,0x0,8
tick,0x7ffd597cfb34,108340616,0,0x0,8
tick,0x7ffd597cfb34,108356615,0,0x0,8
tick,0x7ffd597cfb34,108372088,0,0x0,8
tick,0x7ffd597cfb34,108387892,0,0x0,8
tick,0x7ffd597cfb34,108403816,0,0x0,8
tick,0x7ffd597cfb34,108420092,0,0x0,8
tick,0x7ffd597cfb34,108435538,0,0x0,8
tick,0x7ffd597cfb34,108451292,0,0x0,8
tick,0x7ffd597cfb34,108466420,0,0x0,8
tick,0x7ffd597cfb34,108481433,0,0x0,8
tick,0x7ffd597cfb34,108497124,0,0x0,8
tick,0x7ffd597cfb34,108513401,0,0x0,8
tick,0x7ffd597cfb34,108529235,0,0x0,8
tick,0x7ffd597cfb34,108545441,0,0x0,8
tick,0x7ffd597cfb34,108561305,0,0x0,8
tick,0x7ffd597cfb34,108577317,0,0x0,8
tick,0x7ffd597cfb34,108593089,0,0x0,8
tick,0x7ffd597cfb34,108608612,0,0x0,8
tick,0x7ffd597cfb34,108623660,0,0x0,8
tick,0x7ffd597cfb34,108639458,0,0x0,8
tick,0x7ffd597cfb34,108655197,0,0x0,8
tick,0x7ffd597cfb34,108670699,0,0x0,8
tick,0x7ffd597cfb34,108686580,0,0x0,8
tick,0x7ffd597cfb34,108701648,0,0x0,8
tick,0x7ffd597cfb34,108717592,0,0x0,8
tick,0x7ffd597cfb34,108732881,0,0x0,8
tick,0x7ffd597cfb34,108748299,0,0x0,8
tick,0x7ffd597cfb34,108763852,0,0x0,8
tick,0x7ffd597cfb34,108780086,0,0x0,8
tick,0x7ffd597cfb34,108795865,0,0x0,8
tick,0x7ffd597cfb34,108812050,0,0x0,8
tick,0x7ffd597cfb34,108828314,0,0x0,8
tick,0x7ffd597cfb34,108844692,0,0x0,8
tick,0x7ffd597cfb34,108860536,0,0x0,8
tick,0x7ffd597cfb34,108876039,0,0x0,8
tick,0x7ffd597cfb34,108891887,0,0x0,8
tick,0x7ffd597cfb34,108907001,0,0x0,8
tick,0x7ffd597cfb34,108922441,0,0x0,8
tick,0x7ffd597cfb34,108937466,0,0x0,8
tick,0x7ffd597cfb34,108953195,0,0x0,8
tick,0x7ffd597cfb34,108968888,0,0x0,8
tick,0x7ffd597cfb34,108985360,0,0x0,8
tick,0x7ffd597cfb34,109001032,0,0x0,8
tick,0x7ffd597cfb34,109016728,0,0x0,8
tick,0x7ffd597cfb34,109032622,0,0x0,8
tick,0x7ffd597cfb34,109048845,0,0x0,8
tick,0x7ffd597cfb34,109064780,0,0x0,8
tick,0x7ffd597cfb34,109080845,0,0x0,8
tick,0x7ffd597cfb34,109096369,0,0x0,8
tick,0x7ffd597cfb34,109112101,0,0x0,8
tick,0x7ffd597cfb34,109127218,0,0x0,8
tick,0x7ffd597cfb34,109143437,0,0x0,8
tick,0x7ffd597cfb34,109158510,0,0x0,8
tick,0x7ffd597cfb34,109174011,0,0x0,8
tick,0x7ffd597cfb34,109190576,0,0x0,8
tick,0x7ffd597cfb34,109206700,0,0x0,8
tick,0x7ffd597cfb34,109222220,0,0x0,8
tick,0x7ffd597cfb34,109237621,0,0x0,8
tick,0x7ffd597cfb34,109253184,0,0x0,8
tick,0x7ffd597cfb34,109268513,0,0x0,8
tick,0x7ffd597cfb34,109284229,0,0x0,8
tick,0x7ffd597cfb34,109300066,0,0x0,8
tick,0x7ffd597cfb34,109316021,0,0x0,8
tick,0x7ffd597cfb34,109331817,0,0x0,8
tick,0x7ffd597cfb34,109347220,0,0x0,8
tick,0x7ffd597cfb34,109362607,0,0x0,8
tick,0x7ffd597cfb34,109378171,0,0x0,8
tick,0x7ffd597cfb34,109394301,0,0x0,8
tick,0x7ffd597cfb34,109410174,0,0x0,8
tick,0x7ffd597cfb34,109425515,0,0x0,8
tick,0x7ffd597cfb34,109441891,0,0x0,8
tick,0x7ffd597cfb34,109458118,0,0x0,8
tick,0x7ffd597cfb34,109473526,0,0x0,8
tick,0x7ffd597cfb34,109489515,0,0x0,8
tick,0x7ffd597cfb34,109505462,0,0x0,8
tick,0x7ffd597cfb34,109521203,0,0x0,8
tick,0x7ffd597cfb34,109537123,0,0x0,8
tick,0x7ffd597cfb34,109552967,0,0x0,8
tick,0x7ffd597cfb34,109568767,0,0x0,8
tick,0x7ffd597cfb34,109584578,0,0x0,8
tick,0x7ffd597cfb34,109600176,0,0x0,8
tick,0x7ffd597cfb34,109615865,0,0x0,8
tick,0x7ffd597cfb34,109631843,0,0x0,8
tick,0x7ffd597cfb34,109647154,0,0x0,8
tick,0x7ffd597cfb34,109663210,0,0x0,8
tick,0x7ffd597cfb34,109678157,0,0x0,8
tick,0x7ffd597cfb34,109693856,0,0x0,8
tick,0x7ffd597cfb34,109709541,0,0x0,8
tick,0x7ffd597cfb34,109725359,0,0x0,8
tick,0x7ffd597cfb34,109741319,0,0x0,8
tick,0x7ffd597cfb34,109757640,0,0x0,8
tick,0x7ffd597cfb34,109773926,0,0x0,8
tick,0x7ffd597cfb34,109789294,0,0x0,8
tick,0x7ffd597cfb34,109805628,0,0x0,8
tick,0x7ffd597cfb34,109821192,0,0x0,8
tick,0x7ffd597cfb34,109837128,0,0x0,8
tick,0x7ffd597cfb34,109853088,0,0x0,8
tick,0x7ffd597cfb34,109869085,0,0x0,8
tick,0x7ffd597cfb34,109885547,0,0x0,8
tick,0x7ffd597cfb34,109901932,0,0x0,8
tick,0x7ffd597cfb34,109917503,0,0x0,8
tick,0x7ffd597cfb34,109933060,0,0x0,8
tick,0x7ffd597cfb34,109948984,0,0x0,8
tick,0x7ffd597cfb34,109964567,0,0x0,8
tick,0x7ffd597cfb34,109979838,0,0x0,8
tick,0x7ffd597cfb34,109995767,0,0x0,8
tick,0x7ffd597cfb34,110011388,0,0x0,8
tick,0x7ffd597cfb34,110027162,0,0x0,8
tick,0x7ffd597cfb34,110042961,0,0x0,8
tick,0x7ffd597cfb34,110058575,0,0x0,8
tick,0x7ffd597cfb34,110074160,0,0x0,8
tick,0x7ffd597cfb34,110090079,0,0x0,8
tick,0x7ffd597cfb34,110106263,0,0x0,8
tick,0x7ffd597cfb34,110121769,0,0x0,8
tick,0x7ffd597cfb34,110137572,0,0x0,8
tick,0x7ffd597cfb34,110153362,0,0x0,8
tick,0x7ffd597cfb34,110169054,0,0x0,8
tick,0x7ffd597cfb34,110184431,0,0x0,8
tick,0x7ffd597cfb34,110200145,0,0x0,8
tick,0x7ffd597cfb34,110215700,0,0x0,8
tick,0x7ffd597cfb34,110231473,0,0x0,8
tick,0x7ffd597cfb34,110246883,0,0x0,8
tick,0x7ffd597cfb34,110262633,0,0x0,8
tick,0x7ffd597cfb34,110278085,0,0x0,8
tick,0x7ffd597cfb34,110293294,0,0x0,8
tick,0x7ffd597cfb34,110309747,0,0x0,8
tick,0x7ffd597cfb34,110325516,0,0x0,8
tick,0x7ffd597cfb34,110341390,0,0x0,8
tick,0x7ffd597cfb34,110356869,0,0x0,8
tick,0x7ffd597cfb34,110372581,0,0x0,8
tick,0x7ffd597cfb34,110388360,0,0x0,8
tick,0x7ffd597cfb34,110403788,0,0x0,8
tick,0x7ffd597cfb34,110419332,0,0x0,8
tick,0x7ffd597cfb34,110435358,0,0x0,8
tick,0x7ffd597cfb34,110450363,0,0x0,8
tick,0x7ffd597cfb34,110466555,0,0x0,8
tick,0x7ffd597cfb34,110481611,0,0x0,8
tick,0x7ffd597cfb34,110497188,0,0x0,8
tick,0x7ffd597cfb34,110513581,0,0x0,8
tick,0x7ffd597cfb34,110528959,0,0x0,8
tick,0x7ffd597cfb34,110544721,0,0x0,8
tick,0x7ffd597cfb34,110559829,0,0x0,8
tick,0x7ffd597cfb34,110575350,0,0x0,8
tick,0x7ffd597cfb34,110591005,0,0x0,8
tick,0x7ffd597cfb34,110606649,0,0x0,8
tick,0x7ffd597cfb34,110622785,0,0x0,8
tick,0x7ffd597cfb34,110639031,0,0x0,8
tick,0x7ffd597cfb34,110655017,0,0x0,8
tick,0x7ffd597cfb34,110670176,0,0x0,8
tick,0x7ffd597cfb34,110685398,0,0x0,8
tick,0x7ffd597cfb34,110701640,0,0x0,8
tick,0x7ffd597cfb34,110716861,0,0x0,8
tick,0x7ffd597cfb34,110732992,0,0x0,8
tick,0x7ffd597cfb34,110748999,0,0x0,8
tick,0x7ffd597cfb34,110764937,0,0x0,8
tick,0x7ffd597cfb34,110781058,0,0x0,8
tick,0x7ffd597cfb34,110796965,0,0x0,8
tick,0x7ffd597cfb34,110812991,0,0x0,8
tick,0x7ffd597cfb34,110828159,0,0x0,8
tick,0x7ffd597cfb34,110843436,0,0x0,8
tick,0x7ffd597cfb34,110859173,0,0x0,8
tick,0x7ffd597cfb34,110875121,0,0x0,8
tick,0x7ffd597cfb34,110890570,0,0x0,8
tick,0x7ffd597cfb34,110906047,0,0x0,8
tick,0x7ffd597cfb34,110921821,0,0x0,8
tick,0x7ffd597cfb34,110937026,0,0x0,8
tick,0x7ffd597cfb34,110952904,0,0x0,8
tick,0x7ffd597cfb34,110968454,0,0x0,8
tick,0x7ffd597cfb34,110984329,0,0x0,8
tick,0x7ffd597cfb34,111000530,0,0x0,8
tick,0x7ffd597cfb34,111016030,0,0x0,8
tick,0x7ffd597cfb34,111032113,0,0x0,8
tick,0x7ffd597cfb34,111048088,0,0x0,8
tick,0x7ffd597cfb34,111064179,0,0x0,8
tick,0x7ffd597cfb34,111080079,0,0x0,8
tick,0x7ffd597cfb34,111095538,0,0x0,8
tick,0x7ffd597cfb34,111110756,0,0x0,8
tick,0x7ffd597cfb34,111126727,0,0x0,8
tick,0x7ffd597cfb34,111141756,0,0x0,8
tick,0x7ffd597cfb34,111157353,0,0x0,8
tick,0x7ffd597cfb34,111173056,0,0x0,8
tick,0x7ffd597cfb34,111188344,0,0x0,8
tick,0x7ffd597cfb34,111204053,0,0x0,8
tick,0x7ffd597cfb34,111220053,0,0x0,8
tick,0x7ffd597cfb34,111235643,0,0x0,8
tick,0x7ffd597cfb34,111251457,0,0x0,8
tick,0x7ffd597cfb34,111267121,0,0x0,8
tick,0x7ffd597cfb34,111282884,0,0x0,8
tick,0x7ffd597cfb34,111298762,0,0x0,8
tick,0x7ffd597cfb34,111314672,0,0x0,8
tick,0x7ffd597cfb34,111330550,0,0x0,8
tick,0x7ffd597cfb34,111346561,0,0x0,8
tick,0x7ffd597cfb34,111362152,0,0x0,8
tick,0x7ffd597cfb34,111378053,0,0x0,8
tick,0x7ffd597cfb34,111393449,0,0x0,8
tick,0x7ffd597cfb34,111409134,0,0x0,8
tick,0x7ffd597cfb34,111424617,0,0x0,8
tick,0x7ffd597cfb34,111440688,0,0x0,8
tick,0x7ffd597cfb34,111455839,0,0x0,8
tick,0x7ffd597cfb34,111472186,0,0x0,8
tick,0x7ffd597cfb34,111487303,0,0x0,8
tick,0x7ffd597cfb34,111503386,0,0x0,8
tick,0x7ffd597cfb34,111518296,0,0x0,8
tick,0x7ffd597cfb34,111533189,0,0x0,8
tick,0x7ffd597cfb34,111549166,0,0x0,8
tick,0x7ffd597cfb34,111564179,0,0x0,8
tick,0x7ffd597cfb34,111580291,0,0x0,8
tick,0x7ffd597cfb34,111596190,0,0x0,8
tick,0x7ffd597cfb34,111612169,0,0x0,8
tick,0x7ffd597cfb34,111628166,0,0x0,8
tick,0x7ffd597cfb34,111644170,0,0x0,8
tick,0x7ffd597cfb34,111660202,0,0x0,8
tick,0x7ffd597cfb34,111675955,0,0x0,8
tick,0x7ffd597cfb34,111691143,0,0x0,8
tick,0x7ffd597cfb34,111706255,0,0x0,8
tick,0x7ffd597cfb34,111722243,0,0x0,8
tick,0x7ffd597cfb34,111738221,0,0x0,8
tick,0x7ffd597cfb34,111754266,0,0x0,8
tick,0x7ffd597cfb34,111770188,0,0x0,8
tick,0x7ffd597cfb34,111786157,0,0x0,8
tick,0x7ffd597cfb34,111802300,0,0x0,8
tick,0x7ffd597cfb34,111818284,0,0x0,8
tick,0x7ffd597cfb34,111834297,0,0x0,8
tick,0x7ffd597cfb34,111850184,0,0x0,8
tick,0x7ffd597cfb34,111866389,0,0x0,8
tick,0x7ffd597cfb34,111881341,0,0x0,8
tick,0x7ffd597cfb34,111897281,0,0x0,8
tick,0x7ffd597cfb34,111912373,0,0x0,8
tick,0x7ffd597cfb34,111928411,0,0x0,8
tick,0x7ffd597cfb34,111944215,0,0x0,8
tick,0x7ffd597cfb34,111960203,0,0x0,8
tick,0x7ffd597cfb34,111976300,0,0x0,8
tick,0x7ffd597cfb34,111991979,0,0x0,8
tick,0x7ffd597cfb34,112007980,0,0x0,8
tick,0x7ffd597cfb34,112023992,0,0x0,8
tick,0x7ffd597cfb34,112039914,0,0x0,8
tick,0x7ffd597cfb34,112055909,0,0x0,8
tick,0x7ffd597cfb34,112071902,0,0x0,8
tick,0x7ffd597cfb34,112087503,0,0x0,8
tick,0x7ffd597cfb34,112102755,0,0x0,8
tick,0x7ffd597cfb34,112119246,0,0x0,8
tick,0x7ffd597cfb34,112135054,0,0x0,8
tick,0x7ffd597cfb34,112151084,0,0x0,8
tick,0x7ffd597cfb34,112167077,0,0x0,8
tick,0x7ffd597cfb34,112183175,0,0x0,8
tick,0x7ffd597cfb34,112199198,0,0x0,8
tick,0x7ffd597cfb34,112215177,0,0x0,8
tick,0x7ffd597cfb34,112231184,0,0x0,8
tick,0x7ffd597cfb34,112247109,0,0x0,8
tick,0x7ffd597cfb34,112263185,0,0x0,8
tick,0x7ffd597cfb34,112279134,0,0x0,8
tick,0x7ffd597cfb34,112295186,0,0x0,8
tick,0x7ffd597cfb34,112311156,0,0x0,8
tick,0x7ffd597cfb34,112327243,0,0x0,8
tick,0x7ffd597cfb34,112343231,0,0x0,8
tick,0x7ffd597cfb34,112359118,0,0x0,8
tick,0x7ffd597cfb34,112375226,0,0x0,8
tick,0x7ffd597cfb34,112391229,0,0x0,8
tick,0x7ffd597cfb34,112407131,0,0x0,8
tick,0x7ffd597cfb34,112423134,0,0x0,8
tick,0x7ffd597cfb34,112439131,0,0x0,8
tick,0x7ffd597cfb34,112455126,0,0x0,8
tick,0x7ffd597cfb34,112471160,0,0x0,8
tick,0x7ffd597cfb34,112487151,0,0x0,8
tick,0x7ffd597cfb34,112503125,0,0x0,8
tick,0x7ffd597cfb34,112519277,0,0x0,8
tick,0x7ffd597cfb34,112535148,0,0x0,8
tick,0x7ffd597cfb34,112551341,0,0x0,8
tick,0x7ffd597cfb34,112567147,0,0x0,8
tick,0x7ffd597cfb34,112583167,0,0x0,8
tick,0x7ffd597cfb34,112599160,0,0x0,8
tick,0x7ffd597cfb34,112615151,0,0x0,8
tick,0x7ffd597cfb34,112631172,0,0x0,8
tick,0x7ffd597cfb34,112646537,0,0x0,8
tick,0x7ffd597cfb34,112662468,0,0x0,8
tick,0x7ffd597cfb34,112678471,0,0x0,8
tick,0x7ffd597cfb34,112694482,0,0x0,8
tick,0x7ffd597cfb34,112710476,0,0x0,8
tick,0x7ffd597cfb34,112726489,0,0x0,8
tick,0x7ffd597cfb34,112742521,0,0x0,8
tick,0x7ffd597cfb34,112758512,0,0x0,8
tick,0x7ffd597cfb34,112774481,0,0x0,8
tick,0x7ffd597cfb34,112790511,0,0x0,8
tick,0x7ffd597cfb34,112806515,0,0x0,8
tick,0x7ffd597cfb34,112822538,0,0x0,8
tick,0x7ffd597cfb34,112838513,0,0x0,8
tick,0x7ffd597cfb34,112854543,0,0x0,8
tick,0x7ffd597cfb34,112869748,0,0x0,8
tick,0x7ffd597cfb34,112885721,0,0x0,8
tick,0x7ffd597cfb34,112900844,0,0x0,8
tick,0x7ffd597cfb34,112916739,0,0x0,8
tick,0x7ffd597cfb34,112932707,0,0x0,8
tick,0x7ffd597cfb34,112948721,0,0x0,8
tick,0x7ffd597cfb34,112964416,0,0x0,8
tick,0x7ffd597cfb34,112979620,0,0x0,8
tick,0x7ffd597cfb34,112995622,0,0x0,8
tick,0x7ffd597cfb34,113010657,0,0x0,8
tick,0x7ffd597cfb34,113026650,0,0x0,8
tick,0x7ffd597cfb34,113042639,0,0x0,8
tick,0x7ffd597cfb34,113058634,0,0x0,8
tick,0x7ffd597cfb34,113074685,0,0x0,8
tick,0x7ffd597cfb34,113089672,0,0x0,8
tick,0x7ffd597cfb34,113105673,0,0x0,8
tick,0x7ffd597cfb34,113120662,0,0x0,8
tick,0x7ffd597cfb34,113136678,0,0x0,8
tick,0x7ffd597cfb34,113152660,0,0x0,8
tick,0x7ffd597cfb34,113169172,0,0x0,8
tick,0x7ffd597cfb34,113184664,0,0x0,8
tick,0x7ffd597cfb34,113200687,0,0x0,8
tick,0x7ffd597cfb34,113216679,0,0x0,8
tick,0x7ffd597cfb34,113232696,0,0x0,8
tick,0x7ffd597cfb34,113248686,0,0x0,8
tick,0x7ffd597cfb34,113264689,0,0x0,8
tick,0x7ffd597cfb34,113280698,0,0x0,8
tick,0x7ffd597cfb34,113296710,0,0x0,8
tick,0x7ffd597cfb34,113312689,0,0x0,8
tick,0x7ffd597cfb34,113328704,0,0x0,8
tick,0x7ffd597cfb34,113344850,0,0x0,8
tick,0x7ffd597cfb34,113360728,0,0x0,8
tick,0x7ffd597cfb34,113376719,0,0x0,8
tick,0x7ffd597cfb34,113392746,0,0x0,8
tick,0x7ffd597cfb34,113408918,0,0x0,8
tick,0x7ffd597cfb34,113424724,0,0x0,8
tick,0x7ffd597cfb34,113440717,0,0x0,8
tick,0x7ffd597cfb34,113456739,0,0x0,8
tick,0x7ffd597cfb34,113473129,0,0x0,8
tick,0x7ffd597cfb34,113488865,0,0x0,8
tick,0x7ffd597cfb34,113504741,0,0x0,8
tick,0x7ffd597cfb34,113520930,0,0x0,8
tick,0x7ffd597cfb34,113536861,0,0x0,8
tick,0x7ffd597cfb34,113552880,0,0x0,8
tick,0x7ffd597cfb34,113568750,0,0x0,8
tick,0x7ffd597cfb34,113584794,0,0x0,8
tick,0x7ffd597cfb34,113600765,0,0x0,8
tick,0x7ffd597cfb34,113616754,0,0x0,8
tick,0x7ffd597cfb34,113632770,0,0x0,8
tick,0x7ffd597cfb34,113648894,0,0x0,8
tick,0x7ffd597cfb34,113664761,0,0x0,8
tick,0x7ffd597cfb34,113680774,0,0x0,8
tick,0x7ffd597cfb34,113696781,0,0x0,8
tick,0x7ffd597cfb34,113711783,0,0x0,8
tick,0x7ffd597cfb34,113727786,0,0x0,8
tick,0x7ffd597cfb34,113742786,0,0x0,8
tick,0x7ffd597cfb34,113758957,0,0x0,8
tick,0x7ffd597cfb34,113774801,0,0x0,8
tick,0x7ffd597cfb34,113790807,0,0x0,8
tick,0x7ffd597cfb34,113807201,0,0x0,8
tick,0x7ffd597cfb34,113822830,0,0x0,8
tick,0x7ffd597cfb34,113839150,0,0x0,8
tick,0x7ffd597cfb34,113854819,0,0x0,8
tick,0x7ffd597cfb34,113870832,0,0x0,8
tick,0x7ffd597cfb34,113886837,0,0x0,8
tick,0x7ffd597cfb34,113902836,0,0x0,8
tick,0x7ffd597cfb34,113918824,0,0x0,8
tick,0x7ffd597cfb34,113934850,0,0x0,8
tick,0x7ffd597cfb34,113951231,0,0x0,8
tick,0x7ffd597cfb34,113966846,0,0x0,8
tick,0x7ffd597cfb34,113983032,0,0x0,8
tick,0x7ffd597cfb34,113998872,0,0x0,8
tick,0x7ffd597cfb34,114014869,0,0x0,8
tick,0x7ffd597cfb34,114030854,0,0x0,8
tick,0x7ffd597cfb34,114047019,0,0x0,8
tick,0x7ffd597cfb34,114062870,0,0x0,8
tick,0x7ffd597cfb34,114078903,0,0x0,8
tick,0x7ffd597cfb34,114095243,0,0x0,8
tick,0x7ffd597cfb34,114111000,0,0x0,8
tick,0x7ffd597cfb34,114126966,0,0x0,8
tick,0x7ffd597cfb34,114142876,0,0x0,8
tick,0x7ffd597cfb34,114158907,0,0x0,8
tick,0x7ffd597cfb34,114174886,0,0x0,8
tick,0x7ffd597cfb34,114190908,0,0x0,8
tick,0x7ffd597cfb34,114206907,0,0x0,8
tick,0x7ffd597cfb34,114222920,0,0x0,8
tick,0x7ffd597cfb34,114238932,0,0x0,8
tick,0x7ffd597cfb34,114254900,0,0x0,8
tick,0x7ffd597cfb34,114270917,0,0x0,8
tick,0x7ffd597cfb34,114286932,0,0x0,8
tick,0x7ffd597cfb34,114302915,0,0x0,8
tick,0x7ffd597cfb34,114317944,0,0x0,8
tick,0x7ffd597cfb34,114332979,0,0x0,8
tick,0x7ffd597cfb34,114348956,0,0x0,8
tick,0x7ffd597cfb34,114364928,0,0x0,8
tick,0x7ffd597cfb34,114380960,0,0x0,8
tick,0x7ffd597cfb34,114396935,0,0x0,8
tick,0x7ffd597cfb34,114412958,0,0x0,8
tick,0x7ffd597cfb34,114428960,0,0x0,8
tick,0x7ffd597cfb34,114444967,0,0x0,8
tick,0x7ffd597cfb34,114460989,0,0x0,8
tick,0x7ffd597cfb34,114476960,0,0x0,8
tick,0x7ffd597cfb34,114492528,0,0x0,8
tick,0x7ffd597cfb34,114508155,0,0x0,8
tick,0x7ffd597cfb34,114523780,0,0x0,8
tick,0x7ffd597cfb34,114539300,0,0x0,8
tick,0x7ffd597cfb34,114555297,0,0x0,8
tick,0x7ffd597cfb34,114570457,0,0x0,8
tick,0x7ffd597cfb34,114585305,0,0x0,8
tick,0x7ffd597cfb34,114601332,0,0x0,8
tick,0x7ffd597cfb34,114617308,0,0x0,8
tick,0x7ffd597cfb34,114632577,0,0x0,8
tick,0x7ffd597cfb34,114648311,0,0x0,8
tick,0x7ffd597cfb34,114663317,0,0x0,8
tick,0x7ffd597cfb34,114679340,0,0x0,8
tick,0x7ffd597cfb34,114695341,0,0x0,8
tick,0x7ffd597cfb34,114711343,0,0x0,8
tick,0x7ffd597cfb34,114727337,0,0x0,8
tick,0x7ffd597cfb34,114743376,0,0x0,8
tick,0x7ffd597cfb34,114759356,0,0x0,8
tick,0x7ffd597cfb34,114775338,0,0x0,8
tick,0x7ffd597cfb34,114791397,0,0x0,8
tick,0x7ffd597cfb34,114807987,0,0x0,8
tick,0x7ffd597cfb34,114823882,0,0x0,8
tick,0x7ffd597cfb34,114838356,0,0x0,8
tick,0x7ffd597cfb34,114854388,0,0x0,8
tick,0x7ffd597cfb34,114869370,0,0x0,8
tick,0x7ffd597cfb34,114885377,0,0x0,8
tick,0x7ffd597cfb34,114901368,0,0x0,8
tick,0x7ffd597cfb34,114917393,0,0x0,8
tick,0x7ffd597cfb34,114933381,0,0x0,8
tick,0x7ffd597cfb34,114949407,0,0x0,8
tick,0x7ffd597cfb34,114965378,0,0x0,8
tick,0x7ffd597cfb34,114981409,0,0x0,8
tick,0x7ffd597cfb34,114997396,0,0x0,8
tick,0x7ffd597cfb34,115013411,0,0x0,8
tick,0x7ffd597cfb34,115029406,0,0x0,8
tick,0x7ffd597cfb34,115045421,0,0x0,8
tick,0x7ffd597cfb34,115061437,0,0x0,8
tick,0x7ffd597cfb34,115077409,0,0x0,8
tick,0x7ffd597cfb34,115093588,0,0x0,8
tick,0x7ffd597cfb34,115109548,0,0x0,8
tick,0x7ffd597cfb34,115123418,0,0x0,8
tick,0x7ffd597cfb34,115139443,0,0x0,8
tick,0x7ffd597cfb34,115155425,0,0x0,8
tick,0x7ffd597cfb34,115171467,0,0x0,8
tick,0x7ffd597cfb34,115187437,0,0x0,8
tick,0x7ffd597cfb34,115203481,0,0x0,8
tick,0x7ffd597cfb34,115219468,0,0x0,8
tick,0x7ffd597cfb34,115235460,0,0x0,8
tick,0x7ffd597cfb34,115251451,0,0x0,8
tick,0x7ffd597cfb34,115267483,0,0x0,8
tick,0x7ffd597cfb34,115283461,0,0x0,8
tick,0x7ffd597cfb34,115299482,0,0x0,8
tick,0x7ffd597cfb34,115315480,0,0x0,8
tick,0x7ffd597cfb34,115331487,0,0x0,8
tick,0x7ffd597cfb34,115347489,0,0x0,8
tick,0x7ffd597cfb34,115363499,0,0x0,8
tick,0x7ffd597cfb34,115379485,0,0x0,8
tick,0x7ffd597cfb34,115395628,0,0x0,8
tick,0x7ffd597cfb34,115411513,0,0x0,8
tick,0x7ffd597cfb34,115427583,0,0x0,8
tick,0x7ffd597cfb34,115443496,0,0x0,8
tick,0x7ffd597cfb34,115459528,0,0x0,8
tick,0x7ffd597cfb34,115475497,0,0x0,8
tick,0x7ffd597cfb34,115491515,0,0x0,8
tick,0x7ffd597cfb34,115507509,0,0x0,8
tick,0x7ffd597cfb34,115523696,0,0x0,8
tick,0x7ffd597cfb34,115539533,0,0x0,8
tick,0x7ffd597cfb34,115555686,0,0x0,8
tick,0x7ffd597cfb34,115571527,0,0x0,8
tick,0x7ffd597cfb34,115587540,0,0x0,8
tick,0x7ffd597cfb34,115603542,0,0x0,8
tick,0x7ffd597cfb34,115619552,0,0x0,8
tick,0x7ffd597cfb34,115635535,0,0x0,8
tick,0x7ffd597cfb34,115651561,0,0x0,8
tick,0x7ffd597cfb34,115667543,0,0x0,8
tick,0x7ffd597cfb34,115682941,0,0x0,8
tick,0x7ffd597cfb34,115698273,0,0x0,8
tick,0x7ffd597cfb34,115713594,0,0x0,8
tick,0x7ffd597cfb34,115729557,0,0x0,8
tick,0x7ffd597cfb34,115745585,0,0x0,8
tick,0x7ffd597cfb34,115761562,0,0x0,8
tick,0x7ffd597cfb34,115777609,0,0x0,8
tick,0x7ffd597cfb34,115793576,0,0x0,8
tick,0x7ffd597cfb34,115809589,0,0x0,8
tick,0x7ffd597cfb34,115825604,0,0x0,8
tick,0x7ffd597cfb34,115840600,0,0x0,8
tick,0x7ffd597cfb34,115856591,0,0x0,8
tick,0x7ffd597cfb34,115871601,0,0x0,8
tick,0x7ffd597cfb34,115887593,0,0x0,8
tick,0x7ffd597cfb34,115903598,0,0x0,8
tick,0x7ffd597cfb34,115919601,0,0x0,8
tick,0x7ffd597cfb34,115935616,0,0x0,8
tick,0x7ffd597cfb34,115951609,0,0x0,8
tick,0x7ffd597cfb34,115967644,0,0x0,8
tick,0x7ffd597cfb34,115983790,0,0x0,8
tick,0x7ffd597cfb34,115998638,0,0x0,8
tick,0x7ffd597cfb34,116013634,0,0x0,8
tick,0x7ffd597cfb34,116028673,0,0x0,8
tick,0x7ffd597cfb34,116044629,0,0x0,8
tick,0x7ffd597cfb34,116059658,0,0x0,8
tick,0x7ffd597cfb34,116075641,0,0x0,8
tick,0x7ffd597cfb34,116092426,0,0x0,8
tick,0x7ffd597cfb34,116107649,0,0x0,8
tick,0x7ffd597cfb34,116123675,0,0x0,8
tick,0x7ffd597cfb34,116139640,0,0x0,8
tick,0x7ffd597cfb34,116155661,0,0x0,8
tick,0x7ffd597cfb34,116170676,0,0x0,8
tick,0x7ffd597cfb34,116186676,0,0x0,8
tick,0x7ffd597cfb34,116201660,0,0x0,8
tick,0x7ffd597cfb34,116217700,0,0x0,8
tick,0x7ffd597cfb34,116234212,0,0x0,8
tick,0x7ffd597cfb34,116249698,0,0x0,8
tick,0x7ffd597cfb34,116265684,0,0x0,8
tick,0x7ffd597cfb34,116282302,0,0x0,8
tick,0x7ffd597cfb34,116297828,0,0x0,8
tick,0x7ffd597cfb34,116313690,0,0x0,8
tick,0x7ffd597cfb34,116329696,0,0x0,8
tick,0x7ffd597cfb34,116345712,0,0x0,8
tick,0x7ffd597cfb34,116361706,0,0x0,8
tick,0x7ffd597cfb34,116377717,0,0x0,8
tick,0x7ffd597cfb34,116393722,0,0x0,8
tick,0x7ffd597cfb34,116409750,0,0x0,8
tick,0x7ffd597cfb34,116425722,0,0x0,8
tick,0x7ffd597cfb34,116440737,0,0x0,8
tick,0x7ffd597cfb34,116456724,0,0x0,8
tick,0x7ffd597cfb34,116471776,0,0x0,8
tick,0x7ffd597cfb34,116489300,0,0x0,8
tick,0x7ffd597cfb34,116504570,0,0x0,8
tick,0x7ffd597cfb34,116519740,0,0x0,8
tick,0x7ffd597cfb34,116535789,0,0x0,8
tick,0x7ffd597cfb34,116551742,0,0x0,8
tick,0x7ffd597cfb34,116567777,0,0x0,8
tick,0x7ffd597cfb34,116583747,0,0x0,8
tick,0x7ffd597cfb34,116599777,0,0x0,8
tick,0x7ffd597cfb34,116615767,0,0x0,8
tick,0x7ffd597cfb34,116631775,0,0x0,8
tick,0x7ffd597cfb34,116647768,0,0x0,8
tick,0x7ffd597cfb34,116663794,0,0x0,8
tick,0x7ffd597cfb34,116679882,0,0x0,8
tick,0x7ffd597cfb34,116695818,0,0x0,8
tick,0x7ffd597cfb34,116711779,0,0x0,8
tick,0x7ffd597cfb34,116727790,0,0x0,8
tick,0x7ffd597cfb34,116743789,0,0x0,8
tick,0x7ffd597cfb34,116760160,0,0x0,8
tick,0x7ffd597cfb34,116775811,0,0x0,8
tick,0x7ffd597cfb34,116790863,0,0x0,8
tick,0x7ffd597cfb34,116805808,0,0x0,8
tick,0x7ffd597cfb34,116821813,0,0x0,8
tick,0x7ffd597cfb34,116837817,0,0x0,8
tick,0x7ffd597cfb34,116852823,0,0x0,8
tick,0x7ffd597cfb34,116867836,0,0x0,8
tick,0x7ffd597cfb34,116883854,0,0x0,8
tick,0x7ffd597cfb34,116899819,0,0x0,8
tick,0x7ffd597cfb34,116915853,0,0x0,8
tick,0x7ffd597cfb34,116931835,0,0x0,8
tick,0x7ffd597cfb34,116947826,0,0x0,8
tick,0x7ffd597cfb34,116962846,0,0x0,8
tick,0x7ffd597cfb34,116978880,0,0x0,8
tick,0x7ffd597cfb34,116993843,0,0x0,8
tick,0x7ffd597cfb34,117008885,0,0x0,8
tick,0x7ffd597cfb34,117024861,0,0x0,8
tick,0x7ffd597cfb34,117039880,0,0x0,8
tick,0x7ffd597cfb34,117055884,0,0x0,8
tick,0x7ffd597cfb34,117071879,0,0x0,8
tick,0x7ffd597cfb34,117087872,0,0x0,8
tick,0x7ffd597cfb34,117103939,0,0x0,8
tick,0x7ffd597cfb34,117119893,0,0x0,8
tick,0x7ffd597cfb34,117135910,0,0x0,8
tick,0x7ffd597cfb34,117151917,0,0x0,8
tick,0x7ffd597cfb34,117167913,0,0x0,8
tick,0x7ffd597cfb34,117183887,0,0x0,8
tick,0x7ffd597cfb34,117199926,0,0x0,8
tick,0x7ffd597cfb34,117215900,0,0x0,8
tick,0x7ffd597cfb34,117231923,0,0x0,8
tick,0x7ffd597cfb34,117247903,0,0x0,8
tick,0x7ffd597cfb34,117263917,0,0x0,8
tick,0x7ffd597cfb34,117279926,0,0x0,8
tick,0x7ffd597cfb34,117295929,0,0x0,8
tick,0x7ffd597cfb34,117311916,0,0x0,8
tick,0x7ffd597cfb34,117327932,0,0x0,8
tick,0x7ffd597cfb34,117343938,0,0x0,8
tick,0x7ffd597cfb34,117358938,0,0x0,8
tick,0x7ffd597cfb34,117373931,0,0x0,8
tick,0x7ffd597cfb34,117390412,0,0x0,8
tick,0x7ffd597cfb34,117406450,0,0x0,8
tick,0x7ffd597cfb34,117421973,0,0x0,8
tick,0x7ffd597cfb34,117437952,0,0x0,8
tick,0x7ffd597cfb34,117453965,0,0x0,8
tick,0x7ffd597cfb34,117469946,0,0x0,8
tick,0x7ffd597cfb34,117486018,0,0x0,8
tick,0x7ffd597cfb34,117501956,0,0x0,8
tick,0x7ffd597cfb34,117518028,0,0x0,8
tick,0x7ffd597cfb34,117533963,0,0x0,8
tick,0x7ffd597cfb34,117549965,0,0x0,8
tick,0x7ffd597cfb34,117565967,0,0x0,8
tick,0x7ffd597cfb34,117581994,0,0x0,8
tick,0x7ffd597cfb34,117598017,0,0x0,8
tick,0x7ffd597cfb34,117614007,0,0x0,8
tick,0x7ffd597cfb34,117629982,0,0x0,8
tick,0x7ffd597cfb34,117646025,0,0x0,8
tick,0x7ffd597cfb34,117661997,0,0x0,8
tick,0x7ffd597cfb34,117678017,0,0x0,8
tick,0x7ffd597cfb34,117694005,0,0x0,8
tick,0x7ffd597cfb34,117710039,0,0x0,8
tick,0x7ffd597cfb34,117726000,0,0x0,8
tick,0x7ffd597cfb34,117742065,0,0x0,8
tick,0x7ffd597cfb34,117758011,0,0x0,8
tick,0x7ffd597cfb34,117774307,0,0x0,8
tick,0x7ffd597cfb34,117790242,0,0x0,8
tick,0x7ffd597cfb34,117806056,0,0x0,8
tick,0x7ffd597cfb34,117822034,0,0x0,8
tick,0x7ffd597cfb34,117838036,0,0x0,8
tick,0x7ffd597cfb34,117854057,0,0x0,8
tick,0x7ffd597cfb34,117870136,0,0x0,8
tick,0x7ffd597cfb34,117886051,0,0x0,8
tick,0x7ffd597cfb34,117902072,0,0x0,8
tick,0x7ffd597cfb34,117918049,0,0x0,8
tick,0x7ffd597cfb34,117934079,0,0x0,8
tick,0x7ffd597cfb34,117950512,0,0x0,8
tick,0x7ffd597cfb34,117966228,0,0x0,8
tick,0x7ffd597cfb34,117982107,0,0x0,8
tick,0x7ffd597cfb34,117998079,0,0x0,8
tick,0x7ffd597cfb34,118014069,0,0x0,8
tick,0x7ffd597cfb34,118030095,0,0x0,8
tick,0x7ffd597cfb34,118046091,0,0x0,8
tick,0x7ffd597cfb34,118062101,0,0x0,8
tick,0x7ffd597cfb34,118078094,0,0x0,8
tick,0x7ffd597cfb34,118094107,0,0x0,8
tick,0x7ffd597cfb34,118110096,0,0x0,8
tick,0x7ffd597cfb34,118126123,0,0x0,8
tick,0x7ffd597cfb34,118142100,0,0x0,8
tick,0x7ffd597cfb34,118158132,0,0x0,8
tick,0x7ffd597cfb34,118173116,0,0x0,8
tick,0x7ffd597cfb34,118188146,0,0x0,8
tick,0x7ffd597cfb34,118204129,0,0x0,8
tick,0x7ffd597cfb34,118220149,0,0x0,8
tick,0x7ffd597cfb34,118236140,0,0x0,8
tick,0x7ffd597cfb34,118253123,0,0x0,8
tick,0x7ffd597cfb34,118268148,0,0x0,8
tick,0x7ffd597cfb34,118284172,0,0x0,8
tick,0x7ffd597cfb34,118300145,0,0x0,8
tick,0x7ffd597cfb34,118316142,0,0x0,8
tick,0x7ffd597cfb34,118332161,0,0x0,8
tick,0x7ffd597cfb34,118348172,0,0x0,8
tick,0x7ffd597cfb34,118364208,0,0x0,8
tick,0x7ffd597cfb34,118380160,0,0x0,8
tick,0x7ffd597cfb34,118396162,0,0x0,8
tick,0x7ffd597cfb34,118412184,0,0x0,8
tick,0x7ffd597cfb34,118428158,0,0x0,8
tick,0x7ffd597cfb34,118444184,0,0x0,8
tick,0x7ffd597cfb34,118459213,0,0x0,8
tick,0x7ffd597cfb34,118475185,0,0x0,8
tick,0x7ffd597cfb34,118490186,0,0x0,8
tick,0x7ffd597cfb34,118506217,0,0x0,8
tick,0x7ffd597cfb34,118522188,0,0x0,8
tick,0x7ffd597cfb34,118538959,0,0x0,8
tick,0x7ffd597cfb34,118554660,0,0x0,8
tick,0x7ffd597cfb34,118570227,0,0x0,8
tick,0x7ffd597cfb34,118586224,0,0x0,8
tick,0x7ffd597cfb34,118602219,0,0x0,8
tick,0x7ffd597cfb34,118618228,0,0x0,8
tick,0x7ffd597cfb34,118634205,0,0x0,8
tick,0x7ffd597cfb34,118649845,0,0x0,8
tick,0x7ffd597cfb34,118665794,0,0x0,8
tick,0x7ffd597cfb34,118681828,0,0x0,8
tick,0x7ffd597cfb34,118697225,0,0x0,8
tick,0x7ffd597cfb34,118712314,0,0x0,8
tick,0x7ffd597cfb34,118728859,0,0x0,8
tick,0x7ffd597cfb34,118744360,0,0x0,8
tick,0x7ffd597cfb34,118759950,0,0x0,8
tick,0x7ffd597cfb34,118775541,0,0x0,8
tick,0x7ffd597cfb34,118791437,0,0x0,8
tick,0x7ffd597cfb34,118807126,0,0x0,8
tick,0x7ffd597cfb34,118823127,0,0x0,8
tick,0x7ffd597cfb34,118838556,0,0x0,8
tick,0x7ffd597cfb34,118854643,0,0x0,8
tick,0x7ffd597cfb34,118870126,0,0x0,8
tick,0x7ffd597cfb34,118885330,0,0x0,8
tick,0x7ffd597cfb34,118901524,0,0x0,8
tick,0x7ffd597cfb34,118916689,0,0x0,8
tick,0x7ffd597cfb34,118932842,0,0x0,8
tick,0x7ffd597cfb34,118948165,0,0x0,8
tick,0x7ffd597cfb34,118964169,0,0x0,8
tick,0x7ffd597cfb34,118980212,0,0x0,8
tick,0x7ffd597cfb34,118996112,0,0x0,8
tick,0x7ffd597cfb34,119011850,0,0x0,8
tick,0x7ffd597cfb34,119027822,0,0x0,8
tick,0x7ffd597cfb34,119043290,0,0x0,8
tick,0x7ffd597cfb34,119058914,0,0x0,8
tick,0x7ffd597cfb34,119074722,0,0x0,8
tick,0x7ffd597cfb34,119089981,0,0x0,8
tick,0x7ffd597cfb34,119105654,0,0x0,8
tick,0x7ffd597cfb34,119121043,0,0x0,8
tick,0x7ffd597cfb34,119137710,0,0x0,8
tick,0x7ffd597cfb34,119153249,0,0x0,8
tick,0x7ffd597cfb34,119169196,0,0x0,8
tick,0x7ffd597cfb34,119185422,0,0x0,8
tick,0x7ffd597cfb34,119201399,0,0x0,8
tick,0x7ffd597cfb34,119216964,0,0x0,8
tick,0x7ffd597cfb34,119232465,0,0x0,8
tick,0x7ffd597cfb34,119248197,0,0x0,8
tick,0x7ffd597cfb34,119263483,0,0x0,8
tick,0x7ffd597cfb34,119279645,0,0x0,8
tick,0x7ffd597cfb34,119294918,0,0x0,8
tick,0x7ffd597cfb34,119311492,0,0x0,8
tick,0x7ffd597cfb34,119327630,0,0x0,8
tick,0x7ffd597cfb34,119343479,0,0x0,8
tick,0x7ffd597cfb34,119359115,0,0x0,8
tick,0x7ffd597cfb34,119375781,0,0x0,8
tick,0x7ffd597cfb34,119391619,0,0x0,8
tick,0x7ffd597cfb34,119407324,0,0x0,8
tick,0x7ffd597cfb34,119423488,0,0x0,8
tick,0x7ffd597cfb34,119440209,0,0x0,8
tick,0x7ffd597cfb34,119456042,0,0x0,8
tick,0x7ffd597cfb34,119471911,0,0x0,8
tick,0x7ffd597cfb34,119488062,0,0x0,8
tick,0x7ffd597cfb34,119503624,0,0x0,8
tick,0x7ffd597cfb34,119519817,0,0x0,8
tick,0x7ffd597cfb34,119535254,0,0x0,8
tick,0x7ffd597cfb34,119550452,0,0x0,8
tick,0x7ffd597cfb34,119565626,0,0x0,8
tick,0x7ffd597cfb34,119581605,0,0x0,8
tick,0x7ffd597cfb34,119597619,0,0x0,8
tick,0x7ffd597cfb34,119613598,0,0x0,8
tick,0x7ffd597cfb34,119629591,0,0x0,8
tick,0x7ffd597cfb34,119645608,0,0x0,8
tick,0x7ffd597cfb34,119661578,0,0x0,8
tick,0x7ffd597cfb34,119677616,0,0x0,8
tick,0x7ffd597cfb34,119693610,0,0x0,8
tick,0x7ffd597cfb34,119709627,0,0x0,8
tick,0x7ffd597cfb34,119725605,0,0x0,8
tick,0x7ffd597cfb34,119741608,0,0x0,8
tick,0x7ffd597cfb34,119756927,0,0x0,8
tick,0x7ffd597cfb34,119771536,0,0x0,8
tick,0x7ffd597cfb34,119787782,0,0x0,8
tick,0x7ffd597cfb34,119803634,0,0x0,8
tick,0x7ffd597cfb34,119819218,0,0x0,8
tick,0x7ffd597cfb34,119834858,0,0x0,8
tick,0x7ffd597cfb34,119849882,0,0x0,8
tick,0x7ffd597cfb34,119865210,0,0x0,8
tick,0x7ffd597cfb34,119881221,0,0x0,8
tick,0x7ffd597cfb34,119897003,0,0x0,8
tick,0x7ffd597cfb34,119912626,0,0x0,8
tick,0x7ffd597cfb34,119928450,0,0x0,8
tick,0x7ffd597cfb34,119944809,0,0x0,8
tick,0x7ffd597cfb34,119960326,0,0x0,8
tick,0x7ffd597cfb34,119976206,0,0x0,8
tick,0x7ffd597cfb34,119992426,0,0x0,8
tick,0x7ffd597cfb34,120008103,0,0x0,8
tick,0x7ffd597cfb34,120023352,0,0x0,8
tick,0x7ffd597cfb34,120039470,0,0x0,8
tick,0x7ffd597cfb34,120055331,0,0x0,8
tick,0x7ffd597cfb34,120071334,0,0x0,8
tick,0x7ffd597cfb34,120087446,0,0x0,8
tick,0x7ffd597cfb34,120103202,0,0x0,8
tick,0x7ffd597cfb34,120118298,0,0x0,8
tick,0x7ffd597cfb34,120133580,0,0x0,8
tick,0x7ffd597cfb34,120149296,0,0x0,8
tick,0x7ffd597cfb34,120165472,0,0x0,8
tick,0x7ffd597cfb34,120181332,0,0x0,8
tick,0x7ffd597cfb34,120197052,0,0x0,8
tick,0x7ffd597cfb34,120212908,0,0x0,8
tick,0x7ffd597cfb34,120228600,0,0x0,8
tick,0x7ffd597cfb34,120244724,0,0x0,8
tick,0x7ffd597cfb34,120260447,0,0x0,8
tick,0x7ffd597cfb34,120275870,0,0x0,8
tick,0x7ffd597cfb34,120291442,0,0x0,8
tick,0x7ffd597cfb34,120307200,0,0x0,8
tick,0x7ffd597cfb34,120322671,0,0x0,8
tick,0x7ffd597cfb34,120337731,0,0x0,8
tick,0x7ffd597cfb34,120354251,0,0x0,8
tick,0x7ffd597cfb34,120370163,0,0x0,8
tick,0x7ffd597cfb34,120385728,0,0x0,8
tick,0x7ffd597cfb34,120402091,0,0x0,8
tick,0x7ffd597cfb34,120418113,0,0x0,8
tick,0x7ffd597cfb34,120433120,0,0x0,8
tick,0x7ffd597cfb34,120448665,0,0x0,8
tick,0x7ffd597cfb34,120464718,0,0x0,8
tick,0x7ffd597cfb34,120480719,0,0x0,8
tick,0x7ffd597cfb34,120496718,0,0x0,8
tick,0x7ffd597cfb34,120512715,0,0x0,8
tick,0x7ffd597cfb34,120528728,0,0x0,8
tick,0x7ffd597cfb34,120543719,0,0x0,8
tick,0x7ffd597cfb34,120559590,0,0x0,8
tick,0x7ffd597cfb34,120574705,0,0x0,8
tick,0x7ffd597cfb34,120590716,0,0x0,8
tick,0x7ffd597cfb34,120605749,0,0x0,8
tick,0x7ffd597cfb34,120621721,0,0x0,8
tick,0x7ffd597cfb34,120637715,0,0x0,8
tick,0x7ffd597cfb34,120653470,0,0x0,8
tick,0x7ffd597cfb34,120668958,0,0x0,8
tick,0x7ffd597cfb34,120684484,0,0x0,8
tick,0x7ffd597cfb34,120700558,0,0x0,8
tick,0x7ffd597cfb34,120716136,0,0x0,8
tick,0x7ffd597cfb34,120731941,0,0x0,8
tick,0x7ffd597cfb34,120747337,0,0x0,8
tick,0x7ffd597cfb34,120762545,0,0x0,8
tick,0x7ffd597cfb34,120778567,0,0x0,8
tick,0x7ffd597cfb34,120794577,0,0x0,8
tick,0x7ffd597cfb34,120810571,0,0x0,8
tick,0x7ffd597cfb34,120826558,0,0x0,8
tick,0x7ffd597cfb34,120842574,0,0x0,8
tick,0x7ffd597cfb34,120858568,0,0x0,8
tick,0x7ffd597cfb34,120874588,0,0x0,8
tick,0x7ffd597cfb34,120890577,0,0x0,8
tick,0x7ffd597cfb34,120906603,0,0x0,8
tick,0x7ffd597cfb34,120922591,0,0x0,8
tick,0x7ffd597cfb34,120938624,0,0x0,8
tick,0x7ffd597cfb34,120954595,0,0x0,8
tick,0x7ffd597cfb34,120970600,0,0x0,8
tick,0x7ffd597cfb34,120987089,0,0x0,8
tick,0x7ffd597cfb34,121003253,0,0x0,8
tick,0x7ffd597cfb34,121019598,0,0x0,8
tick,0x7ffd597cfb34,121035166,0,0x0,8
tick,0x7ffd597cfb34,121050927,0,0x0,8
tick,0x7ffd597cfb34,121066179,0,0x0,8
tick,0x7ffd597cfb34,121081754,0,0x0,8
tick,0x7ffd597cfb34,121097158,0,0x0,8
tick,0x7ffd597cfb34,121112865,0,0x0,8
tick,0x7ffd597cfb34,121129249,0,0x0,8
tick,0x7ffd597cfb34,121144815,0,0x0,8
tick,0x7ffd597cfb34,121160789,0,0x0,8
tick,0x7ffd597cfb34,121176402,0,0x0,8
tick,0x7ffd597cfb34,121191675,0,0x0,8
tick,0x7ffd597cfb34,121207339,0,0x0,8
tick,0x7ffd597cfb34,121222782,0,0x0,8
tick,0x7ffd597cfb34,121238763,0,0x0,8
tick,0x7ffd597cfb34,121254236,0,0x0,8
tick,0x7ffd597cfb34,121269406,0,0x0,8
tick,0x7ffd597cfb34,121284930,0,0x0,8
tick,0x7ffd597cfb34,121300023,0,0x0,8
tick,0x7ffd597cfb34,121315751,0,0x0,8
tick,0x7ffd597cfb34,121330941,0,0x0,8
tick,0x7ffd597cfb34,121345996,0,0x0,8
tick,0x7ffd597cfb34,121361309,0,0x0,8
tick,0x7ffd597cfb34,121376805,0,0x0,8
tick,0x7ffd597cfb34,121393029,0,0x0,8
tick,0x7ffd597cfb34,121408513,0,0x0,8
tick,0x7ffd597cfb34,121424162,0,0x0,8
tick,0x7ffd597cfb34,121439671,0,0x0,8
tick,0x7ffd597cfb34,121454982,0,0x0,8
tick,0x7ffd597cfb34,121470562,0,0x0,8
tick,0x7ffd597cfb34,121485847,0,0x0,8
tick,0x7ffd597cfb34,121501541,0,0x0,8
tick,0x7ffd597cfb34,121517097,0,0x0,8
tick,0x7ffd597cfb34,121532761,0,0x0,8
tick,0x7ffd597cfb34,121548284,0,0x0,8
tick,0x7ffd597cfb34,121563505,0,0x0,8
tick,0x7ffd597cfb34,121579580,0,0x0,8
tick,0x7ffd597cfb34,121594818,0,0x0,8
tick,0x7ffd597cfb34,121610167,0,0x0,8
tick,0x7ffd597cfb34,121626021,0,0x0,8
tick,0x7ffd597cfb34,121641032,0,0x0,8
tick,0x7ffd597cfb34,121656818,0,0x0,8
tick,0x7ffd597cfb34,121672376,0,0x0,8
tick,0x7ffd597cfb34,121687795,0,0x0,8
tick,0x7ffd597cfb34,121703636,0,0x0,8
tick,0x7ffd597cfb34,121719011,0,0x0,8
tick,0x7ffd597cfb34,121734969,0,0x0,8
tick,0x7ffd597cfb34,121750794,0,0x0,8
tick,0x7ffd597cfb34,121766781,0,0x0,8
tick,0x7ffd597cfb34,121781798,0,0x0,8
tick,0x7ffd597cfb34,121796782,0,0x0,8
tick,0x7ffd597cfb34,121812800,0,0x0,8
tick,0x7ffd597cfb34,121828795,0,0x0,8
tick,0x7ffd597cfb34,121844802,0,0x0,8
tick,0x7ffd597cfb34,121860787,0,0x0,8
tick,0x7ffd597cfb34,121876827,0,0x0,8
tick,0x7ffd597cfb34,121892796,0,0x0,8
tick,0x7ffd597cfb34,121908806,0,0x0,8
tick,0x7ffd597cfb34,121924808,0,0x0,8
tick,0x7ffd597cfb34,121940806,0,0x0,8
tick,0x7ffd597cfb34,121956784,0,0x0,8
tick,0x7ffd597cfb34,121972840,0,0x0,8
tick,0x7ffd597cfb34,121988067,0,0x0,8
tick,0x7ffd597cfb34,122002847,0,0x0,8
tick,0x7ffd597cfb34,122017813,0,0x0,8
tick,0x7ffd597cfb34,122033804,0,0x0,8
tick,0x7ffd597cfb34,122048814,0,0x0,8
tick,0x7ffd597cfb34,122064812,0,0x0,8
tick,0x7ffd597cfb34,122080820,0,0x0,8
tick,0x7ffd597cfb34,122096824,0,0x0,8
tick,0x7ffd597cfb34,122112853,0,0x0,8
tick,0x7ffd597cfb34,122128814,0,0x0,8
tick,0x7ffd597cfb34,122144815,0,0x0,8
tick,0x7ffd597cfb34,122160829,0,0x0,8
tick,0x7ffd597cfb34,122176579,0,0x0,8
tick,0x7ffd597cfb34,122192489,0,0x0,8
tick,0x7ffd597cfb34,122207939,0,0x0,8
tick,0x7ffd597cfb34,122223613,0,0x0,8
tick,0x7ffd597cfb34,122238837,0,0x0,8
tick,0x7ffd597cfb34,122254368,0,0x0,8
tick,0x7ffd597cfb34,122269345,0,0x0,8
tick,0x7ffd597cfb34,122285211,0,0x0,8
tick,0x7ffd597cfb34,122300256,0,0x0,8
tick,0x7ffd597cfb34,122316314,0,0x0,8
tick,0x7ffd597cfb34,122331322,0,0x0,8
tick,0x7ffd597cfb34,122346118,0,0x0,8
tick,0x7ffd597cfb34,122361838,0,0x0,8
tick,0x7ffd597cfb34,122377019,0,0x0,8
tick,0x7ffd597cfb34,122392844,0,0x0,8
tick,0x7ffd597cfb34,122409069,0,0x0,8
tick,0x7ffd597cfb34,122424566,0,0x0,8
tick,0x7ffd597cfb34,122439553,0,0x0,8
tick,0x7ffd597cfb34,122455120,0,0x0,8
tick,0x7ffd597cfb34,122471092,0,0x0,8
tick,0x7ffd597cfb34,122486595,0,0x0,8
tick,0x7ffd597cfb34,122502632,0,0x0,8
tick,0x7ffd597cfb34,122518607,0,0x0,8
tick,0x7ffd597cfb34,122534729,0,0x0,8
tick,0x7ffd597cfb34,122550218,0,0x0,8
tick,0x7ffd597cfb34,122565732,0,0x0,8
tick,0x7ffd597cfb34,122581262,0,0x0,8
tick,0x7ffd597cfb34,122596893,0,0x0,8
tick,0x7ffd597cfb34,122613193,0,0x0,8
tick,0x7ffd597cfb34,122628503,0,0x0,8
tick,0x7ffd597cfb34,122643487,0,0x0,8
tick,0x7ffd597cfb34,122659249,0,0x0,8
tick,0x7ffd597cfb34,122675622,0,0x0,8
tick,0x7ffd597cfb34,122691161,0,0x0,8
tick,0x7ffd597cfb34,122706821,0,0x0,8
tick,0x7ffd597cfb34,122722399,0,0x0,8
tick,0x7ffd597cfb34,122737517,0,0x0,8
tick,0x7ffd597cfb34,122753520,0,0x0,8
tick,0x7ffd597cfb34,122768799,0,0x0,8
tick,0x7ffd597cfb34,122784537,0,0x0,8
tick,0x7ffd597cfb34,122800521,0,0x0,8
tick,0x7ffd597cfb34,122815816,0,0x0,8
tick,0x7ffd597cfb34,122831884,0,0x0,8
tick,0x7ffd597cfb34,122847886,0,0x0,8
tick,0x7ffd597cfb34,122863242,0,0x0,8
tick,0x7ffd597cfb34,122879780,0,0x0,8
tick,0x7ffd597cfb34,122895588,0,0x0,8
tick,0x7ffd597cfb34,122911581,0,0x0,8
tick,0x7ffd597cfb34,122927636,0,0x0,8
tick,0x7ffd597cfb34,122943297,0,0x0,8
tick,0x7ffd597cfb34,122959152,0,0x0,8
tick,0x7ffd597cfb34,122975046,0,0x0,8
tick,0x7ffd597cfb34,122990650,0,0x0,8
tick,0x7ffd597cfb34,123006096,0,0x0,8
tick,0x7ffd597cfb34,123022072,0,0x0,8
tick,0x7ffd597cfb34,123037684,0,0x0,8
tick,0x7ffd597cfb34,123053950,0,0x0,8
tick,0x7ffd597cfb34,123069935,0,0x0,8
tick,0x7ffd597cfb34,123085866,0,0x0,8
tick,0x7ffd597cfb34,123101913,0,0x0,8
tick,0x7ffd597cfb34,123117815,0,0x0,8
tick,0x7ffd597cfb34,123133843,0,0x0,8
tick,0x7ffd597cfb34,123149614,0,0x0,8
tick,0x7ffd597cfb34,123165335,0,0x0,8
tick,0x7ffd597cfb34,123180862,0,0x0,8
tick,0x7ffd597cfb34,123196172,0,0x0,8
tick,0x7ffd597cfb34,123211903,0,0x0,8
tick,0x7ffd597cfb34,123227869,0,0x0,8
tick,0x7ffd597cfb34,123244024,0,0x0,8
tick,0x7ffd597cfb34,123260220,0,0x0,8
tick,0x7ffd597cfb34,123275991,0,0x0,8
tick,0x7ffd597cfb34,123291758,0,0x0,8
tick,0x7ffd597cfb34,123307152,0,0x0,8
tick,0x7ffd597cfb34,123323133,0,0x0,8
tick,0x7ffd597cfb34,123338931,0,0x0,8
tick,0x7ffd597cfb34,123354833,0,0x0,8
tick,0x7ffd597cfb34,123370612,0,0x0,8
tick,0x7ffd597cfb34,123386092,0,0x0,8
tick,0x7ffd597cfb34,123401070,0,0x0,8
tick,0x7ffd597cfb34,123416998,0,0x0,8
tick,0x7ffd597cfb34,123433162,0,0x0,8
tick,0x7ffd597cfb34,123448922,0,0x0,8
tick,0x7ffd597cfb34,123464657,0,0x0,8
tick,0x7ffd597cfb34,123480585,0,0x0,8
tick,0x7ffd597cfb34,123496569,0,0x0,8
tick,0x7ffd597cfb34,123512471,0,0x0,8
tick,0x7ffd597cfb34,123528136,0,0x0,8
tick,0x7ffd597cfb34,123543866,0,0x0,8
tick,0x7ffd597cfb34,123559065,0,0x0,8
tick,0x7ffd597cfb34,123574546,0,0x0,8
tick,0x7ffd597cfb34,123590158,0,0x0,8
tick,0x7ffd597cfb34,123605722,0,0x0,8
tick,0x7ffd597cfb34,123621474,0,0x0,8
tick,0x7ffd597cfb34,123637914,0,0x0,8
tick,0x7ffd597cfb34,123654296,0,0x0,8
tick,0x7ffd597cfb34,123670370,0,0x0,8
tick,0x7ffd597cfb34,123685794,0,0x0,8
tick,0x7ffd597cfb34,123701502,0,0x0,8
tick,0x7ffd597cfb34,123717115,0,0x0,8
tick,0x7ffd597cfb34,123732365,0,0x0,8
tick,0x7ffd597cfb34,123748681,0,0x0,8
tick,0x7ffd597cfb34,123764417,0,0x0,8
tick,0x7ffd597cfb34,123780561,0,0x0,8
tick,0x7ffd597cfb34,123795960,0,0x0,8
tick,0x7ffd597cfb34,123811521,0,0x0,8
tick,0x7ffd597cfb34,123827184,0,0x0,8
tick,0x7ffd597cfb34,123843200,0,0x0,8
tick,0x7ffd597cfb34,123858987,0,0x0,8
tick,0x7ffd597cfb34,123875138,0,0x0,8
tick,0x7ffd597cfb34,123891241,0,0x0,8
tick,0x7ffd597cfb34,123907316,0,0x0,8
tick,0x7ffd597cfb34,123922887,0,0x0,8
tick,0x7ffd597cfb34,123939046,0,0x0,8
tick,0x7ffd597cfb34,123954873,0,0x0,8
tick,0x7ffd597cfb34,123970498,0,0x0,8
tick,0x7ffd597cfb34,123986318,0,0x0,8
tick,0x7ffd597cfb34,124002090,0,0x0,8
tick,0x7ffd597cfb34,124017462,0,0x0,8
tick,0x7ffd597cfb34,124032653,0,0x0,8
tick,0x7ffd597cfb34,124048655,0,0x0,8
tick,0x7ffd597cfb34,124064364,0,0x0,8
tick,0x7ffd597cfb34,124080178,0,0x0,8
tick,0x7ffd597cfb34,124096048,0,0x0,8
tick,0x7ffd597cfb34,124111262,0,0x0,8
tick,0x7ffd597cfb34,124127541,0,0x0,8
tick,0x7ffd597cfb34,124143781,0,0x0,8
tick,0x7ffd597cfb34,124159734,0,0x0,8
tick,0x7ffd597cfb34,124175141,0,0x0,8
tick,0x7ffd597cfb34,124190735,0,0x0,8
tick,0x7ffd597cfb34,124206389,0,0x0,8
tick,0x7ffd597cfb34,124221674,0,0x0,8
tick,0x7ffd597cfb34,124237395,0,0x0,8
tick,0x7ffd597cfb34,124252615,0,0x0,8
tick,0x7ffd597cfb34,124268381,0,0x0,8
tick,0x7ffd597cfb34,124283877,0,0x0,8
tick,0x7ffd597cfb34,124299203,0,0x0,8
tick,0x7ffd597cfb34,124314762,0,0x0,8
tick,0x7ffd597cfb34,124330406,0,0x0,8
tick,0x7ffd597cfb34,124345886,0,0x0,8
tick,0x7ffd597cfb34,124361544,0,0x0,8
tick,0x7ffd597cfb34,124377149,0,0x0,8
tick,0x7ffd597cfb34,124392667,0,0x0,8
tick,0x7ffd597cfb34,124408921,0,0x0,8
tick,0x7ffd597cfb34,124424388,0,0x0,8
tick,0x7ffd597cfb34,124439864,0,0x0,8
tick,0x7ffd597cfb34,124455113,0,0x0,8
tick,0x7ffd597cfb34,124470815,0,0x0,8
tick,0x7ffd597cfb34,124486392,0,0x0,8
tick,0x7ffd597cfb34,124501987,0,0x0,8
tick,0x7ffd597cfb34,124517208,0,0x0,8
tick,0x7ffd597cfb34,124533010,0,0x0,8
tick,0x7ffd597cfb34,124548977,0,0x0,8
tick,0x7ffd597cfb34,124564991,0,0x0,8
tick,0x7ffd597cfb34,124580987,0,0x0,8
tick,0x7ffd597cfb34,124596718,0,0x0,8
tick,0x7ffd597cfb34,124612895,0,0x0,8
tick,0x7ffd597cfb34,124628749,0,0x0,8
tick,0x7ffd597cfb34,124644210,0,0x0,8
tick,0x7ffd597cfb34,124660810,0,0x0,8
tick,0x7ffd597cfb34,124676239,0,0x0,8
tick,0x7ffd597cfb34,124691570,0,0x0,8
tick,0x7ffd597cfb34,124707327,0,0x0,8
tick,0x7ffd597cfb34,124722487,0,0x0,8
tick,0x7ffd597cfb34,124738366,0,0x0,8
tick,0x7ffd597cfb34,124753982,0,0x0,8
tick,0x7ffd597cfb34,124769834,0,0x0,8
tick,0x7ffd597cfb34,124785948,0,0x0,8
tick,0x7ffd597cfb34,124801367,0,0x0,8
tick,0x7ffd597cfb34,124817447,0,0x0,8
tick,0x7ffd597cfb34,124833422,0,0x0,8
tick,0x7ffd597cfb34,124849060,0,0x0,8
tick,0x7ffd597cfb34,124865066,0,0x0,8
tick,0x7ffd597cfb34,124880218,0,0x0,8
tick,0x7ffd597cfb34,124896598,0,0x0,8
tick,0x7ffd597cfb34,124911912,0,0x0,8
tick,0x7ffd597cfb34,124927433,0,0x0,8
tick,0x7ffd597cfb34,124943402,0,0x0,8
tick,0x7ffd597cfb34,124959478,0,0x0,8
tick,0x7ffd597cfb34,124975879,0,0x0,8
tick,0x7ffd597cfb34,124991641,0,0x0,8
tick,0x7ffd597cfb34,125007591,0,0x0,8
tick,0x7ffd597cfb34,125022838,0,0x0,8
tick,0x7ffd597cfb34,125038958,0,0x0,8
tick,0x7ffd597cfb34,125054225,0,0x0,8
tick,0x7ffd597cfb34,125070266,0,0x0,8
tick,0x7ffd597cfb34,125086290,0,0x0,8
tick,0x7ffd597cfb34,125102230,0,0x0,8
tick,0x7ffd597cfb34,125118279,0,0x0,8
tick,0x7ffd597cfb34,125134321,0,0x0,8
tick,0x7ffd597cfb34,125150157,0,0x0,8
tick,0x7ffd597cfb34,125166131,0,0x0,8
tick,0x7ffd597cfb34,125182075,0,0x0,8
tick,0x7ffd597cfb34,125198084,0,0x0,8
tick,0x7ffd597cfb34,125214095,0,0x0,8
tick,0x7ffd597cfb34,125230128,0,0x0,8
tick,0x7ffd597cfb34,125246303,0,0x0,8
tick,0x7ffd597cfb34,125261501,0,0x0,8
tick,0x7ffd597cfb34,125276809,0,0x0,8
tick,0x7ffd597cfb34,125291993,0,0x0,8
tick,0x7ffd597cfb34,125308021,0,0x0,8
tick,0x7ffd597cfb34,125323732,0,0x0,8
tick,0x7ffd597cfb34,125339810,0,0x0,8
tick,0x7ffd597cfb34,125355105,0,0x0,8
tick,0x7ffd597cfb34,125370202,0,0x0,8
tick,0x7ffd597cfb34,125386098,0,0x0,8
tick,0x7ffd597cfb34,125401230,0,0x0,8
tick,0x7ffd597cfb34,125417071,0,0x0,8
tick,0x7ffd597cfb34,125432274,0,0x0,8
tick,0x7ffd597cfb34,125448086,0,0x0,8
tick,0x7ffd597cfb34,125463229,0,0x0,8
tick,0x7ffd597cfb34,125478800,0,0x0,8
tick,0x7ffd597cfb34,125494516,0,0x0,8
tick,0x7ffd597cfb34,125509721,0,0x0,8
tick,0x7ffd597cfb34,125525511,0,0x0,8
tick,0x7ffd597cfb34,125541190,0,0x0,8
tick,0x7ffd597cfb34,125556533,0,0x0,8
tick,0x7ffd597cfb34,125572184,0,0x0,8
tick,0x7ffd597cfb34,125587705,0,0x0,8
tick,0x7ffd597cfb34,125602731,0,0x0,8
tick,0x7ffd597cfb34,125618475,0,0x0,8
tick,0x7ffd597cfb34,125633684,0,0x0,8
tick,0x7ffd597cfb34,125649180,0,0x0,8
tick,0x7ffd597cfb34,125665207,0,0x0,8
tick,0x7ffd597cfb34,125680854,0,0x0,8
tick,0x7ffd597cfb34,125696409,0,0x0,8
tick,0x7ffd597cfb34,125711274,0,0x0,8
tick,0x7ffd597cfb34,125727605,0,0x0,8
tick,0x7ffd597cfb34,125743019,0,0x0,8
